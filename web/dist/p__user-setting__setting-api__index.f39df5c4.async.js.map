{"version":3,"file":"p__user-setting__setting-api__index.f39df5c4.async.js","mappings":"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","sources":["webpack://web/./src/components/api-service/hooks.ts","webpack://web/./src/components/copy-to-clipboard.tsx","webpack://web/./src/components/api-service/chat-api-key-modal/index.tsx","webpack://web/./src/components/api-service/chat-overview-modal/index.less?9429","webpack://web/./src/components/api-service/chat-overview-modal/backend-service-api.tsx","webpack://web/./src/components/api-service/chat-overview-modal/markdown-toc.tsx","webpack://web/./src/components/api-service/chat-overview-modal/api-content.tsx","webpack://web/./src/pages/user-setting/setting-api/index.less?4eda","webpack://web/./src/pages/user-setting/setting-api/index.tsx","webpack://web/./src/utils/date.ts"],"sourcesContent":["import { SharedFrom } from '@/constants/chat';\nimport {\n  useSetModalState,\n  useShowDeleteConfirm,\n  useTranslate,\n} from '@/hooks/common-hooks';\nimport {\n  useCreateSystemToken,\n  useFetchManualSystemTokenList,\n  useFetchSystemTokenList,\n  useRemoveSystemToken,\n} from '@/hooks/user-setting-hooks';\nimport { IStats } from '@/interfaces/database/chat';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { message } from 'antd';\nimport { useCallback } from 'react';\n\nexport const useOperateApiKey = (idKey: string, dialogId?: string) => {\n  const { removeToken } = useRemoveSystemToken();\n  const { createToken, loading: creatingLoading } = useCreateSystemToken();\n  const { data: tokenList, loading: listLoading } = useFetchSystemTokenList();\n\n  const showDeleteConfirm = useShowDeleteConfirm();\n\n  const onRemoveToken = (token: string) => {\n    showDeleteConfirm({\n      onOk: () => removeToken(token),\n    });\n  };\n\n  const onCreateToken = useCallback(() => {\n    createToken({ [idKey]: dialogId });\n  }, [createToken, idKey, dialogId]);\n\n  return {\n    removeToken: onRemoveToken,\n    createToken: onCreateToken,\n    tokenList,\n    creatingLoading,\n    listLoading,\n  };\n};\n\ntype ChartStatsType = {\n  [k in keyof IStats]: Array<{ xAxis: string; yAxis: number }>;\n};\n\nexport const useSelectChartStatsList = (): ChartStatsType => {\n  const queryClient = useQueryClient();\n  const data = queryClient.getQueriesData({ queryKey: ['fetchStats'] });\n  const stats: IStats = (data.length > 0 ? data[0][1] : {}) as IStats;\n\n  return Object.keys(stats).reduce((pre, cur) => {\n    const item = stats[cur as keyof IStats];\n    if (item.length > 0) {\n      pre[cur as keyof IStats] = item.map((x) => ({\n        xAxis: x[0] as string,\n        yAxis: x[1] as number,\n      }));\n    }\n    return pre;\n  }, {} as ChartStatsType);\n};\n\nexport const useShowTokenEmptyError = () => {\n  const { t } = useTranslate('chat');\n\n  const showTokenEmptyError = useCallback(() => {\n    message.error(t('tokenError'));\n  }, [t]);\n  return { showTokenEmptyError };\n};\n\nexport const useShowBetaEmptyError = () => {\n  const { t } = useTranslate('chat');\n\n  const showBetaEmptyError = useCallback(() => {\n    message.error(t('betaError'));\n  }, [t]);\n  return { showBetaEmptyError };\n};\n\nconst getUrlWithToken = (token: string, from: string = 'chat') => {\n  const { protocol, host } = window.location;\n  return `${protocol}//${host}/chat/share?shared_id=${token}&from=${from}`;\n};\n\nconst useFetchTokenListBeforeOtherStep = () => {\n  const { showTokenEmptyError } = useShowTokenEmptyError();\n  const { showBetaEmptyError } = useShowBetaEmptyError();\n\n  const { data: tokenList, fetchSystemTokenList } =\n    useFetchManualSystemTokenList();\n\n  let token = '',\n    beta = '';\n\n  if (Array.isArray(tokenList) && tokenList.length > 0) {\n    token = tokenList[0].token;\n    beta = tokenList[0].beta;\n  }\n\n  token =\n    Array.isArray(tokenList) && tokenList.length > 0 ? tokenList[0].token : '';\n\n  const handleOperate = useCallback(async () => {\n    const ret = await fetchSystemTokenList();\n    const list = ret;\n    if (Array.isArray(list) && list.length > 0) {\n      if (!list[0].beta) {\n        showBetaEmptyError();\n        return false;\n      }\n      return list[0]?.token;\n    } else {\n      showTokenEmptyError();\n      return false;\n    }\n  }, [fetchSystemTokenList, showBetaEmptyError, showTokenEmptyError]);\n\n  return {\n    token,\n    beta,\n    handleOperate,\n  };\n};\n\nexport const useShowEmbedModal = () => {\n  const {\n    visible: embedVisible,\n    hideModal: hideEmbedModal,\n    showModal: showEmbedModal,\n  } = useSetModalState();\n\n  const { handleOperate, token, beta } = useFetchTokenListBeforeOtherStep();\n\n  const handleShowEmbedModal = useCallback(async () => {\n    const succeed = await handleOperate();\n    if (succeed) {\n      showEmbedModal();\n    }\n  }, [handleOperate, showEmbedModal]);\n\n  return {\n    showEmbedModal: handleShowEmbedModal,\n    hideEmbedModal,\n    embedVisible,\n    embedToken: token,\n    beta,\n  };\n};\n\nexport const usePreviewChat = (idKey: string) => {\n  const { handleOperate } = useFetchTokenListBeforeOtherStep();\n\n  const open = useCallback(\n    (t: string) => {\n      window.open(\n        getUrlWithToken(\n          t,\n          idKey === 'canvasId' ? SharedFrom.Agent : SharedFrom.Chat,\n        ),\n        '_blank',\n      );\n    },\n    [idKey],\n  );\n\n  const handlePreview = useCallback(async () => {\n    const token = await handleOperate();\n    if (token) {\n      open(token);\n    }\n  }, [handleOperate, open]);\n\n  return {\n    handlePreview,\n  };\n};\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { CheckOutlined, CopyOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport { useState } from 'react';\nimport { CopyToClipboard as Clipboard, Props } from 'react-copy-to-clipboard';\n\nconst CopyToClipboard = ({ text }: Props) => {\n  const [copied, setCopied] = useState(false);\n  const { t } = useTranslate('common');\n\n  const handleCopy = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, 2000);\n  };\n\n  return (\n    <Tooltip title={copied ? t('copied') : t('copy')}>\n      <Clipboard text={text} onCopy={handleCopy}>\n        {copied ? <CheckOutlined /> : <CopyOutlined />}\n      </Clipboard>\n    </Tooltip>\n  );\n};\n\nexport default CopyToClipboard;\n","import CopyToClipboard from '@/components/copy-to-clipboard';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { IModalProps } from '@/interfaces/common';\nimport { IToken } from '@/interfaces/database/chat';\nimport { formatDate } from '@/utils/date';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport type { TableProps } from 'antd';\nimport { Button, Modal, Space, Table } from 'antd';\nimport { useOperateApiKey } from '../hooks';\n\nconst ChatApiKeyModal = ({\n  dialogId,\n  hideModal,\n  idKey,\n}: IModalProps<any> & { dialogId?: string; idKey: string }) => {\n  const { createToken, removeToken, tokenList, listLoading, creatingLoading } =\n    useOperateApiKey(idKey, dialogId);\n  const { t } = useTranslate('chat');\n\n  const columns: TableProps<IToken>['columns'] = [\n    {\n      title: 'Token',\n      dataIndex: 'token',\n      key: 'token',\n      render: (text) => <a>{text}</a>,\n    },\n    {\n      title: t('created'),\n      dataIndex: 'create_date',\n      key: 'create_date',\n      render: (text) => formatDate(text),\n    },\n    {\n      title: t('action'),\n      key: 'action',\n      render: (_, record) => (\n        <Space size=\"middle\">\n          <CopyToClipboard text={record.token}></CopyToClipboard>\n          <DeleteOutlined onClick={() => removeToken(record.token)} />\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <Modal\n        title={t('apiKey')}\n        open\n        onCancel={hideModal}\n        cancelButtonProps={{ style: { display: 'none' } }}\n        style={{ top: 300 }}\n        onOk={hideModal}\n        width={'50vw'}\n      >\n        <Table\n          columns={columns}\n          dataSource={tokenList}\n          rowKey={'token'}\n          loading={listLoading}\n          pagination={false}\n        />\n        <Button\n          onClick={createToken}\n          loading={creatingLoading}\n          disabled={tokenList?.length > 0}\n        >\n          {t('createNewKey')}\n        </Button>\n      </Modal>\n    </>\n  );\n};\n\nexport default ChatApiKeyModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"chartWrapper\":\"chartWrapper___VN3hN\",\"chartItem\":\"chartItem___q7t7M\",\"chartLabel\":\"chartLabel___OGJbg\",\"apiLinkText\":\"apiLinkText___AxElg\"};","import { Button, Card, Flex, Space, Typography } from 'antd';\n\nimport { useTranslate } from '@/hooks/common-hooks';\nimport styles from './index.less';\n\nconst { Paragraph } = Typography;\n\nconst BackendServiceApi = ({ show }: { show(): void }) => {\n  const { t } = useTranslate('chat');\n\n  return (\n    <Card\n      title={\n        <Space size={'large'}>\n          <span>RAGFlow API</span>\n          <Button onClick={show} type=\"primary\">\n            {t('apiKey')}\n          </Button>\n        </Space>\n      }\n    >\n      <Flex gap={8} align=\"center\">\n        <b>{t('backendServiceApi')}</b>\n        <Paragraph\n          copyable={{ text: `${location.origin}` }}\n          className={styles.apiLinkText}\n        >\n          {location.origin}\n        </Paragraph>\n      </Flex>\n    </Card>\n  );\n};\n\nexport default BackendServiceApi;\n","import { Anchor } from 'antd';\nimport type { AnchorLinkItemProps } from 'antd/es/anchor/Anchor';\nimport React, { useEffect, useState } from 'react';\n\ninterface MarkdownTocProps {\n  content: string;\n}\n\nconst MarkdownToc: React.FC<MarkdownTocProps> = ({ content }) => {\n  const [items, setItems] = useState<AnchorLinkItemProps[]>([]);\n\n  useEffect(() => {\n    const generateTocItems = () => {\n      const headings = document.querySelectorAll(\n        '.wmde-markdown h2, .wmde-markdown h3',\n      );\n      const tocItems: AnchorLinkItemProps[] = [];\n      let currentH2Item: AnchorLinkItemProps | null = null;\n\n      headings.forEach((heading) => {\n        const title = heading.textContent || '';\n        const id = heading.id;\n        const isH2 = heading.tagName.toLowerCase() === 'h2';\n\n        if (id && title) {\n          const item: AnchorLinkItemProps = {\n            key: id,\n            href: `#${id}`,\n            title,\n          };\n\n          if (isH2) {\n            currentH2Item = item;\n            tocItems.push(item);\n          } else {\n            if (currentH2Item) {\n              if (!currentH2Item.children) {\n                currentH2Item.children = [];\n              }\n              currentH2Item.children.push(item);\n            } else {\n              tocItems.push(item);\n            }\n          }\n        }\n      });\n\n      setItems(tocItems.slice(1));\n    };\n\n    setTimeout(generateTocItems, 100);\n  }, [content]);\n\n  return (\n    <div\n      className=\"markdown-toc\"\n      style={{\n        position: 'fixed',\n        right: 20,\n        top: 100,\n        width: 200,\n        background: '#fff',\n        padding: '10px',\n        maxHeight: 'calc(100vh - 170px)',\n        overflowY: 'auto',\n        zIndex: 1000,\n      }}\n    >\n      <Anchor items={items} affix={false} />\n    </div>\n  );\n};\n\nexport default MarkdownToc;\n","import { useSetModalState, useTranslate } from '@/hooks/common-hooks';\nimport apiDoc from '@parent/docs/references/http_api_reference.md';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport { Button, Card, Flex, Space } from 'antd';\nimport ChatApiKeyModal from '../chat-api-key-modal';\nimport { usePreviewChat } from '../hooks';\nimport BackendServiceApi from './backend-service-api';\nimport MarkdownToc from './markdown-toc';\n\nconst ApiContent = ({\n  id,\n  idKey,\n  hideChatPreviewCard = false,\n}: {\n  id?: string;\n  idKey: string;\n  hideChatPreviewCard?: boolean;\n}) => {\n  const { t } = useTranslate('chat');\n  const {\n    visible: apiKeyVisible,\n    hideModal: hideApiKeyModal,\n    showModal: showApiKeyModal,\n  } = useSetModalState();\n  // const { embedVisible, hideEmbedModal, showEmbedModal, embedToken } =\n  //   useShowEmbedModal(idKey);\n\n  const { handlePreview } = usePreviewChat(idKey);\n\n  return (\n    <div>\n      <Flex vertical gap={'middle'}>\n        <BackendServiceApi show={showApiKeyModal}></BackendServiceApi>\n        {!hideChatPreviewCard && (\n          <Card title={`${name} Web App`}>\n            <Flex gap={8} vertical>\n              <Space size={'middle'}>\n                <Button onClick={handlePreview}>{t('preview')}</Button>\n                {/* <Button onClick={() => showEmbedModal(id)}>\n                  {t('embedded')}\n                </Button> */}\n              </Space>\n            </Flex>\n          </Card>\n        )}\n        <div style={{ position: 'relative' }}>\n          <MarkdownToc content={apiDoc} />\n        </div>\n        <MarkdownPreview source={apiDoc}></MarkdownPreview>\n      </Flex>\n      {apiKeyVisible && (\n        <ChatApiKeyModal\n          hideModal={hideApiKeyModal}\n          dialogId={id}\n          idKey={idKey}\n        ></ChatApiKeyModal>\n      )}\n      {/* {embedVisible && (\n        <EmbedModal\n          token={embedToken}\n          visible={embedVisible}\n          hideModal={hideEmbedModal}\n        ></EmbedModal>\n      )} */}\n    </div>\n  );\n};\n\nexport default ApiContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"apiWrapper\":\"apiWrapper___Bulry\"};","import ApiContent from '@/components/api-service/chat-overview-modal/api-content';\n\nimport styles from './index.less';\n\nconst ApiPage = () => {\n  return (\n    <div className={styles.apiWrapper}>\n      <ApiContent idKey=\"dialogId\" hideChatPreviewCard></ApiContent>\n    </div>\n  );\n};\n\nexport default ApiPage;\n","import dayjs from 'dayjs';\n\nexport function formatDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY HH:mm:ss');\n}\n\nexport function formatTime(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('HH:mm:ss');\n}\n\nexport function today() {\n  return formatDate(dayjs());\n}\n\nexport function lastDay() {\n  return formatDate(dayjs().subtract(1, 'days'));\n}\n\nexport function lastWeek() {\n  return formatDate(dayjs().subtract(1, 'weeks'));\n}\n\nexport function formatPureDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY');\n}\n"],"names":["useOperateApiKey","idKey","dialogId","removeToken","useRemoveSystemToken","_useCreateSystemToken","useCreateSystemToken","createToken","creatingLoading","loading","_useFetchSystemTokenL","useFetchSystemTokenList","tokenList","data","listLoading","showDeleteConfirm","useShowDeleteConfirm","token","onOk","useCallback","_defineProperty","useFetchTokenListBeforeOtherStep","t","showTokenEmptyError","useTranslate","message","error","_useShowBetaEmptyErro","showBetaEmptyError","useShowBetaEmptyError","_useFetchManualSystem","useFetchManualSystemTokenList","fetchSystemTokenList","beta","Array","isArray","length","handleOperate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ret","list","_list$","wrap","_context","prev","next","sent","abrupt","stop","useShowEmbedModal","_useSetModalState","useSetModalState","embedVisible","visible","hideEmbedModal","hideModal","showEmbedModal","showModal","_useFetchTokenListBef","_callee2","_context2","embedToken","usePreviewChat","open","window","from","arguments","undefined","_window$location","location","protocol","host","concat","getUrlWithToken","SharedFrom","Agent","Chat","handlePreview","_callee3","_context3","_ref","text","_useState","useState","_useState2","_slicedToArray","copied","setCopied","_jsx","Tooltip","title","children","Clipboard","onCopy","setTimeout","CheckOutlined","CopyOutlined","_useOperateApiKey","columns","dataIndex","key","render","formatDate","_","record","_jsxs","Space","size","CopyToClipboard","DeleteOutlined","onClick","_Fragment","Modal","onCancel","cancelButtonProps","style","display","top","width","Table","dataSource","rowKey","pagination","Button","disabled","Paragraph","Typography","show","Card","type","Flex","gap","align","copyable","origin","className","styles","content","items","setItems","useEffect","headings","document","querySelectorAll","tocItems","currentH2Item","forEach","heading","textContent","id","isH2","tagName","toLowerCase","item","href","push","slice","position","right","background","padding","maxHeight","overflowY","zIndex","Anchor","affix","_ref$hideChatPreviewC","hideChatPreviewCard","apiKeyVisible","hideApiKeyModal","showApiKeyModal","vertical","BackendServiceApi","name","MarkdownToc","apiDoc","MarkdownPreview","source","ChatApiKeyModal","ApiContent","date","dayjs","format","formatTime","formatPureDate"],"sourceRoot":""}