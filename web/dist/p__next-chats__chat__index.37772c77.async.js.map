{"version":3,"file":"p__next-chats__chat__index.37772c77.async.js","mappings":"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","sources":["webpack://web/./src/components/llm-setting-items/next.tsx","webpack://web/./src/components/page-header.tsx","webpack://web/./src/components/switch-fom-field.tsx","webpack://web/./src/components/ui/card.tsx","webpack://web/./src/components/ui/slider.tsx","webpack://web/./src/components/ui/textarea.tsx","webpack://web/./src/components/use-knowledge-graph-item.tsx","webpack://web/./src/pages/next-chats/chat/app-settings/subhead.tsx","webpack://web/./src/pages/next-chats/chat/app-settings/chat-basic-settings.tsx","webpack://web/./src/pages/next-chats/chat/app-settings/chat-model-settings.tsx","webpack://web/./src/pages/next-chats/chat/app-settings/chat-prompt-engine.tsx","webpack://web/./src/pages/next-chats/chat/app-settings/index.tsx","webpack://web/./src/pages/next-chats/chat/app-settings/use-chat-setting-schema.tsx","webpack://web/./src/components/chat-input.tsx","webpack://web/./src/pages/next-chats/chat/chat-box.tsx","webpack://web/./src/pages/next-chats/chat/sessions.tsx","webpack://web/./src/pages/next-chats/chat/index.tsx"],"sourcesContent":["import { LlmModelType, ModelVariableType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useComposeLlmOptionsByModelTypes } from '@/hooks/llm-hooks';\nimport { camelCase } from 'lodash';\nimport { useCallback } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '../ui/form';\nimport { Input } from '../ui/input';\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n  SelectValue,\n} from '../ui/select';\nimport { FormSlider } from '../ui/slider';\nimport { Switch } from '../ui/switch';\n\ninterface SliderWithInputNumberFormFieldProps {\n  name: string;\n  label: string;\n  checkName: string;\n  max: number;\n  min?: number;\n  step?: number;\n}\n\nfunction SliderWithInputNumberFormField({\n  name,\n  label,\n  checkName,\n  max,\n  min = 0,\n  step = 1,\n}: SliderWithInputNumberFormFieldProps) {\n  const { control, watch } = useFormContext();\n  const { t } = useTranslate('chat');\n  const disabled = !watch(checkName);\n\n  return (\n    <FormField\n      control={control}\n      name={name}\n      render={({ field }) => (\n        <FormItem>\n          <div className=\"flex items-center justify-between\">\n            <FormLabel>{t(label)}</FormLabel>\n            <FormField\n              control={control}\n              name={checkName}\n              render={({ field }) => (\n                <FormItem>\n                  <FormControl>\n                    <Switch\n                      {...field}\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                    ></Switch>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n          <FormControl>\n            <div className=\"flex w-full  items-center space-x-2\">\n              <FormSlider\n                {...field}\n                disabled={disabled}\n                max={max}\n                min={min}\n                step={step}\n              ></FormSlider>\n              <Input\n                type={'number'}\n                className=\"w-2/5\"\n                {...field}\n                disabled={disabled}\n                max={max}\n                min={min}\n                step={step}\n              />\n            </div>\n          </FormControl>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  );\n}\n\ninterface LlmSettingFieldItemsProps {\n  prefix?: string;\n}\n\nexport function LlmSettingFieldItems({ prefix }: LlmSettingFieldItemsProps) {\n  const form = useFormContext();\n  const { t } = useTranslate('chat');\n  const modelOptions = useComposeLlmOptionsByModelTypes([\n    LlmModelType.Chat,\n    LlmModelType.Image2text,\n  ]);\n\n  const parameterOptions = Object.values(ModelVariableType).map((x) => ({\n    label: t(camelCase(x)),\n    value: x,\n  }));\n\n  const getFieldWithPrefix = useCallback(\n    (name: string) => {\n      return `${prefix}.${name}`;\n    },\n    [prefix],\n  );\n\n  return (\n    <div className=\"space-y-8\">\n      <FormField\n        control={form.control}\n        name={'llm_id'}\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>{t('model')}</FormLabel>\n            <FormControl>\n              <Select onValueChange={field.onChange} {...field}>\n                <SelectTrigger value={field.value}>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {modelOptions.map((x) => (\n                    <SelectGroup key={x.value}>\n                      <SelectLabel>{x.label}</SelectLabel>\n                      {x.options.map((y) => (\n                        <SelectItem\n                          value={y.value}\n                          key={y.value}\n                          disabled={y.disabled}\n                        >\n                          {y.label}\n                        </SelectItem>\n                      ))}\n                    </SelectGroup>\n                  ))}\n                </SelectContent>\n              </Select>\n            </FormControl>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n      <FormField\n        control={form.control}\n        name={'parameter'}\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>{t('freedom')}</FormLabel>\n            <FormControl>\n              <Select {...field} onValueChange={field.onChange}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {parameterOptions.map((x) => (\n                    <SelectItem value={x.value} key={x.value}>\n                      {x.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </FormControl>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n      <SliderWithInputNumberFormField\n        name={getFieldWithPrefix('temperature')}\n        checkName=\"temperatureEnabled\"\n        label=\"temperature\"\n        max={1}\n        step={0.01}\n      ></SliderWithInputNumberFormField>\n      <SliderWithInputNumberFormField\n        name={getFieldWithPrefix('top_p')}\n        checkName=\"topPEnabled\"\n        label=\"topP\"\n        max={1}\n        step={0.01}\n      ></SliderWithInputNumberFormField>\n      <SliderWithInputNumberFormField\n        name={getFieldWithPrefix('presence_penalty')}\n        checkName=\"presencePenaltyEnabled\"\n        label=\"presencePenalty\"\n        max={1}\n        step={0.01}\n      ></SliderWithInputNumberFormField>\n      <SliderWithInputNumberFormField\n        name={getFieldWithPrefix('frequency_penalty')}\n        checkName=\"frequencyPenaltyEnabled\"\n        label=\"frequencyPenalty\"\n        max={1}\n        step={0.01}\n      ></SliderWithInputNumberFormField>\n      <SliderWithInputNumberFormField\n        name={getFieldWithPrefix('max_tokens')}\n        checkName=\"maxTokensEnabled\"\n        label=\"maxTokens\"\n        max={128000}\n      ></SliderWithInputNumberFormField>\n    </div>\n  );\n}\n","import { ArrowLeft } from 'lucide-react';\nimport { PropsWithChildren, ReactNode } from 'react';\nimport { Button } from './ui/button';\n\ninterface IPageHeaderProps extends PropsWithChildren {\n  back(): void;\n  title: ReactNode;\n}\n\nexport function PageHeader({ back, title, children }: IPageHeaderProps) {\n  return (\n    <header className=\"flex justify-between items-center border-b pr-9\">\n      <div className=\"flex items-center \">\n        <div className=\"flex items-center border-r p-1.5\">\n          <Button variant=\"ghost\" size=\"icon\" onClick={back}>\n            <ArrowLeft className=\"w-5 h-5\" />\n          </Button>\n        </div>\n        <div className=\"p-4\">\n          <h1 className=\"text-2xl font-semibold tracking-tight\">{title}</h1>\n        </div>\n      </div>\n      {children}\n    </header>\n  );\n}\n","import {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n} from '@/components/ui/form';\nimport { Switch } from '@/components/ui/switch';\nimport { ReactNode } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\ninterface SwitchFormItemProps {\n  name: string;\n  label: ReactNode;\n}\n\nexport function SwitchFormField({ label, name }: SwitchFormItemProps) {\n  const form = useFormContext();\n\n  return (\n    <FormField\n      control={form.control}\n      name={name}\n      render={({ field }) => (\n        <FormItem className=\"flex justify-between\">\n          <FormLabel className=\"text-base\">{label}</FormLabel>\n          <FormControl>\n            <Switch\n              checked={field.value}\n              onCheckedChange={field.onChange}\n              aria-readonly\n              className=\"!m-0\"\n            />\n          </FormControl>\n        </FormItem>\n      )}\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'rounded-lg border bg-card text-card-foreground shadow-sm',\n      className,\n    )}\n    {...props}\n  />\n));\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\n    {...props}\n  />\n));\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className,\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n));\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex items-center p-6 pt-0', className)}\n    {...props}\n  />\n));\nCardFooter.displayName = 'CardFooter';\n\nexport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n};\n","'use client';\n\nimport * as SliderPrimitive from '@radix-ui/react-slider';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      'relative flex w-full touch-none select-none items-center',\n      className,\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-colors-background-inverse-strong\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-colors-text-core-standard ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n));\nSlider.displayName = SliderPrimitive.Root.displayName;\n\ntype SliderProps = Omit<\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>,\n  'onChange' | 'value'\n> & { onChange: (value: number) => void; value: number };\n\nconst FormSlider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  SliderProps\n>(({ onChange, value, ...props }, ref) => (\n  <Slider\n    ref={ref}\n    {...props}\n    value={[value]}\n    onValueChange={(vals) => {\n      onChange(vals[0]);\n    }}\n  ></Slider>\n));\n\nSlider.displayName = SliderPrimitive.Root.displayName;\n\nexport { FormSlider, Slider };\n","import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<'textarea'>\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        'flex min-h-[80px] w-full rounded-md border border-input bg-colors-background-inverse-weak px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm overflow-hidden',\n        className,\n      )}\n      ref={ref}\n      {...props}\n    />\n  );\n});\nTextarea.displayName = 'Textarea';\n\nexport { Textarea };\n","import { Form, Switch } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { SwitchFormField } from './switch-fom-field';\n\ntype IProps = {\n  filedName: string[] | string;\n};\n\nexport function UseKnowledgeGraphItem({ filedName }: IProps) {\n  const { t } = useTranslation();\n\n  return (\n    <Form.Item\n      label={t('chat.useKnowledgeGraph')}\n      tooltip={t('chat.useKnowledgeGraphTip')}\n      name={filedName}\n      initialValue={false}\n    >\n      <Switch></Switch>\n    </Form.Item>\n  );\n}\n\ninterface UseKnowledgeGraphFormFieldProps {\n  name: string;\n}\n\nexport function UseKnowledgeGraphFormField({\n  name,\n}: UseKnowledgeGraphFormFieldProps) {\n  const { t } = useTranslation();\n\n  return (\n    <SwitchFormField\n      name={name}\n      label={t('chat.useKnowledgeGraph')}\n    ></SwitchFormField>\n  );\n}\n","import { PropsWithChildren } from 'react';\n\nexport function Subhead({ children }: PropsWithChildren) {\n  return (\n    <div className=\"text-xl font-bold mb-4 text-colors-text-neutral-strong\">\n      {children}\n    </div>\n  );\n}\n","'use client';\n\nimport { FileUploader } from '@/components/file-uploader';\nimport { KnowledgeBaseFormField } from '@/components/knowledge-base-item';\nimport { SwitchFormField } from '@/components/switch-fom-field';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useFormContext } from 'react-hook-form';\nimport { Subhead } from './subhead';\n\nexport default function ChatBasicSetting() {\n  const { t } = useTranslate('chat');\n  const form = useFormContext();\n\n  return (\n    <section>\n      <Subhead>Basic settings</Subhead>\n      <div className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name={'icon'}\n          render={({ field }) => (\n            <div className=\"space-y-6\">\n              <FormItem className=\"w-full\">\n                <FormLabel>{t('assistantAvatar')}</FormLabel>\n                <FormControl>\n                  <FileUploader\n                    value={field.value}\n                    onValueChange={field.onChange}\n                    maxFileCount={1}\n                    maxSize={4 * 1024 * 1024}\n                    // progresses={progresses}\n                    // pass the onUpload function here for direct upload\n                    // onUpload={uploadFiles}\n                    // disabled={isUploading}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            </div>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('assistantName')}</FormLabel>\n              <FormControl>\n                <Input {...field}></Input>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('description')}</FormLabel>\n              <FormControl>\n                <Input {...field}></Input>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name={'prompt_config.empty_response'}\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('emptyResponse')}</FormLabel>\n              <FormControl>\n                <Input {...field}></Input>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name={'prompt_config.prologue'}\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('setAnOpener')}</FormLabel>\n              <FormControl>\n                <Input {...field}></Input>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <SwitchFormField\n          name={'prompt_config.quote'}\n          label={t('quote')}\n        ></SwitchFormField>\n        <SwitchFormField\n          name={'prompt_config.keyword'}\n          label={t('keyword')}\n        ></SwitchFormField>\n        <SwitchFormField\n          name={'prompt_config.tts'}\n          label={t('tts')}\n        ></SwitchFormField>\n        <KnowledgeBaseFormField></KnowledgeBaseFormField>\n      </div>\n    </section>\n  );\n}\n","import { LlmSettingFieldItems } from '@/components/llm-setting-items/next';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Textarea } from '@/components/ui/textarea';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useFormContext } from 'react-hook-form';\nimport { Subhead } from './subhead';\n\nexport function ChatModelSettings() {\n  const { t } = useTranslate('chat');\n  const form = useFormContext();\n\n  return (\n    <section>\n      <Subhead>Model Setting</Subhead>\n      <div className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"prompt_config.system\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('system')}</FormLabel>\n              <FormControl>\n                <Textarea\n                  placeholder=\"Tell us a little bit about yourself\"\n                  className=\"resize-none\"\n                  {...field}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <LlmSettingFieldItems></LlmSettingFieldItems>\n      </div>\n    </section>\n  );\n}\n","'use client';\n\nimport { RerankFormFields } from '@/components/rerank';\nimport { SimilaritySliderFormField } from '@/components/similarity-slider';\nimport { SwitchFormField } from '@/components/switch-fom-field';\nimport { TopNFormField } from '@/components/top-n-item';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Textarea } from '@/components/ui/textarea';\nimport { UseKnowledgeGraphFormField } from '@/components/use-knowledge-graph-item';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useFormContext } from 'react-hook-form';\nimport { Subhead } from './subhead';\n\nexport function ChatPromptEngine() {\n  const { t } = useTranslate('chat');\n  const form = useFormContext();\n\n  return (\n    <section>\n      <Subhead>Prompt Engine</Subhead>\n      <div className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"prompt_config.system\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('system')}</FormLabel>\n              <FormControl>\n                <Textarea\n                  placeholder=\"Tell us a little bit about yourself\"\n                  className=\"resize-none\"\n                  {...field}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <SimilaritySliderFormField></SimilaritySliderFormField>\n        <TopNFormField></TopNFormField>\n        <SwitchFormField\n          name={'prompt_config.refine_multiturn'}\n          label={t('multiTurn')}\n        ></SwitchFormField>\n        <UseKnowledgeGraphFormField name=\"prompt_config.use_kg\"></UseKnowledgeGraphFormField>\n        <RerankFormFields></RerankFormFields>\n      </div>\n    </section>\n  );\n}\n","import { Button } from '@/components/ui/button';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { z } from 'zod';\nimport ChatBasicSetting from './chat-basic-settings';\nimport { ChatModelSettings } from './chat-model-settings';\nimport { ChatPromptEngine } from './chat-prompt-engine';\nimport { useChatSettingSchema } from './use-chat-setting-schema';\n\nexport function AppSettings() {\n  const formSchema = useChatSettingSchema();\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: '',\n      language: 'English',\n      prompt_config: {\n        quote: true,\n        keyword: false,\n        tts: false,\n        use_kg: false,\n        refine_multiturn: true,\n      },\n      top_n: 8,\n      vector_similarity_weight: 0.2,\n      top_k: 1024,\n    },\n  });\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    console.log(values);\n  }\n\n  return (\n    <section className=\"py-6 w-[500px] max-w-[25%] \">\n      <div className=\"text-2xl font-bold mb-4 text-colors-text-neutral-strong px-6\">\n        App settings\n      </div>\n      <div className=\"overflow-auto max-h-[81vh] px-6 \">\n        <FormProvider {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <ChatBasicSetting></ChatBasicSetting>\n            <ChatPromptEngine></ChatPromptEngine>\n            <ChatModelSettings></ChatModelSettings>\n          </form>\n        </FormProvider>\n      </div>\n      <div className=\"p-6 text-center\">\n        <p className=\"text-colors-text-neutral-weak mb-1\">\n          There are unsaved changes\n        </p>\n        <Button variant={'tertiary'} className=\"w-full\">\n          Update\n        </Button>\n      </div>\n    </section>\n  );\n}\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { z } from 'zod';\n\nexport function useChatSettingSchema() {\n  const { t } = useTranslate('chat');\n\n  const promptConfigSchema = z.object({\n    quote: z.boolean(),\n    keyword: z.boolean(),\n    tts: z.boolean(),\n    empty_response: z.string().min(1, {\n      message: t('emptyResponse'),\n    }),\n    prologue: z.string().min(1, {}),\n    system: z.string().min(1, { message: t('systemMessage') }),\n    refine_multiturn: z.boolean(),\n    use_kg: z.boolean(),\n  });\n\n  const formSchema = z.object({\n    name: z.string().min(1, { message: t('assistantNameMessage') }),\n    icon: z.array(z.instanceof(File)),\n    language: z.string().min(1, {\n      message: 'Username must be at least 2 characters.',\n    }),\n    description: z.string(),\n    kb_ids: z.array(z.string()).min(0, {\n      message: 'Username must be at least 1 characters.',\n    }),\n    prompt_config: promptConfigSchema,\n    top_n: z.number(),\n    vector_similarity_weight: z.number(),\n    top_k: z.number(),\n  });\n\n  return formSchema;\n}\n","import { useEventListener } from 'ahooks';\nimport { Mic, Paperclip, Send } from 'lucide-react';\nimport { useRef, useState } from 'react';\nimport { Button } from './ui/button';\nimport { Textarea } from './ui/textarea';\n\nexport function ChatInput() {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const [textareaHeight, setTextareaHeight] = useState<number>(40);\n\n  useEventListener(\n    'keydown',\n    (ev) => {\n      if (ev.shiftKey && ev.code === 'Enter') {\n        setTextareaHeight((h) => {\n          return h + 10;\n        });\n      }\n    },\n    {\n      target: textareaRef,\n    },\n  );\n\n  return (\n    <section className=\"flex items-end bg-colors-background-neutral-strong px-4 py-3 rounded-xl m-8\">\n      <Button variant={'icon'} className=\"w-10 h-10\">\n        <Mic />\n      </Button>\n      <Textarea\n        ref={textareaRef}\n        placeholder=\"Tell us a little bit about yourself \"\n        className=\"resize-none focus-visible:ring-0 focus-visible:ring-offset-0 bg-transparent border-none min-h-0 max-h-20\"\n        style={{ height: textareaHeight }}\n      />\n      <div className=\"flex gap-2\">\n        <Button variant={'icon'} size={'icon'}>\n          <Paperclip />\n        </Button>\n        <Button variant={'tertiary'} size={'icon'}>\n          <Send />\n        </Button>\n      </div>\n    </section>\n  );\n}\n","import { ChatInput } from '@/components/chat-input';\n\nexport function ChatBox() {\n  return (\n    <section className=\"border-x flex-1\">\n      <ChatInput></ChatInput>\n    </section>\n  );\n}\n","import { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { EllipsisVertical, Plus } from 'lucide-react';\n\nfunction SessionCard() {\n  return (\n    <Card className=\"bg-colors-background-inverse-weak border-colors-outline-neutral-standard\">\n      <CardContent className=\"px-3 py-2 flex justify-between items-center\">\n        xxx\n        <Button variant={'icon'} size={'icon'}>\n          <EllipsisVertical />\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function Sessions() {\n  const sessionList = new Array(10).fill(1);\n\n  return (\n    <section className=\"p-6 w-[400px] max-w-[20%]\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <span className=\"text-colors-text-neutral-strong text-2xl font-bold\">\n          Sessions\n        </span>\n        <Button variant={'icon'} size={'icon'}>\n          <Plus></Plus>\n        </Button>\n      </div>\n      <div className=\"space-y-4\">\n        {sessionList.map((x) => (\n          <SessionCard key={x.id}></SessionCard>\n        ))}\n      </div>\n    </section>\n  );\n}\n","import { PageHeader } from '@/components/page-header';\nimport { Button } from '@/components/ui/button';\nimport { useNavigatePage } from '@/hooks/logic-hooks/navigate-hooks';\nimport { EllipsisVertical } from 'lucide-react';\nimport { AppSettings } from './app-settings';\nimport { ChatBox } from './chat-box';\nimport { Sessions } from './sessions';\n\nexport default function Chat() {\n  const { navigateToChatList } = useNavigatePage();\n\n  return (\n    <section className=\"h-full flex flex-col\">\n      <PageHeader back={navigateToChatList} title=\"Chat app 01\">\n        <div className=\"flex items-center gap-2\">\n          <Button variant={'icon'} size={'icon'}>\n            <EllipsisVertical />\n          </Button>\n          <Button variant={'tertiary'} size={'sm'}>\n            Publish\n          </Button>\n        </div>\n      </PageHeader>\n      <div className=\"flex flex-1\">\n        <Sessions></Sessions>\n        <ChatBox></ChatBox>\n        <AppSettings></AppSettings>\n      </div>\n    </section>\n  );\n}\n"],"names":["SliderWithInputNumberFormField","_ref","name","label","checkName","max","_ref$min","min","_ref$step","step","_useFormContext","useFormContext","control","watch","t","useTranslate","disabled","_jsx","FormField","render","_ref2","field","_jsxs","FormItem","children","className","FormLabel","_ref3","FormControl","Switch","_objectSpread","checked","value","onCheckedChange","onChange","FormMessage","FormSlider","Input","type","LlmSettingFieldItems","_ref4","prefix","form","modelOptions","useComposeLlmOptionsByModelTypes","LlmModelType","Chat","Image2text","parameterOptions","Object","values","ModelVariableType","map","x","camelCase","getFieldWithPrefix","useCallback","concat","_ref5","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectGroup","SelectLabel","options","y","SelectItem","_ref6","PageHeader","back","title","Button","variant","size","onClick","ArrowLeft","SwitchFormField","Card","React","ref","props","_objectWithoutProperties","_excluded","cn","displayName","CardHeader","_excluded2","CardTitle","_excluded3","CardDescription","_excluded4","CardContent","_excluded5","_excluded6","Slider","SliderPrimitive","vals","Textarea","UseKnowledgeGraphItem","filedName","useTranslation","Form","Item","tooltip","initialValue","UseKnowledgeGraphFormField","Subhead","ChatBasicSetting","FileUploader","maxFileCount","maxSize","KnowledgeBaseFormField","ChatModelSettings","placeholder","ChatPromptEngine","SimilaritySliderFormField","TopNFormField","RerankFormFields","AppSettings","promptConfigSchema","formSchema","z","object","quote","keyword","tts","empty_response","string","message","prologue","system","refine_multiturn","use_kg","icon","array","File","language","description","kb_ids","prompt_config","top_n","number","vector_similarity_weight","top_k","useForm","resolver","zodResolver","defaultValues","FormProvider","onSubmit","handleSubmit","console","log","ChatInput","textareaRef","useRef","_useState","useState","_useState2","_slicedToArray","textareaHeight","setTextareaHeight","useEventListener","ev","shiftKey","code","h","target","Mic","style","height","Paperclip","Send","ChatBox","SessionCard","EllipsisVertical","Sessions","sessionList","Array","fill","Plus","id","navigateToChatList","useNavigatePage"],"sourceRoot":""}