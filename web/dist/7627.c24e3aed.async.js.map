{"version":3,"file":"7627.c24e3aed.async.js","mappings":"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","sources":["webpack://web/./node_modules/jsencrypt/lib/lib/jsbn/util.js","webpack://web/./node_modules/jsencrypt/lib/lib/jsbn/base64.js","webpack://web/./node_modules/jsencrypt/lib/lib/asn1js/hex.js","webpack://web/./node_modules/jsencrypt/lib/lib/asn1js/base64.js","webpack://web/./node_modules/jsencrypt/lib/lib/asn1js/int10.js","webpack://web/./node_modules/jsencrypt/lib/lib/asn1js/asn1.js","webpack://web/./node_modules/jsencrypt/lib/lib/jsbn/jsbn.js","webpack://web/./node_modules/jsencrypt/lib/lib/jsbn/prng4.js","webpack://web/./node_modules/jsencrypt/lib/lib/jsbn/rng.js","webpack://web/./node_modules/jsencrypt/lib/lib/jsbn/rsa.js","webpack://web/./node_modules/jsencrypt/lib/lib/jsrsasign/yahoo.js","webpack://web/./node_modules/jsencrypt/lib/lib/jsrsasign/asn1-1.0.js","webpack://web/./node_modules/jsencrypt/lib/JSEncryptRSAKey.js","webpack://web/./node_modules/jsencrypt/lib/JSEncrypt.js","webpack://web/./node_modules/jsencrypt/lib/index.js","webpack://web/./node_modules/js-base64/base64.mjs"],"sourcesContent":["var BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nexport function int2char(n) {\n    return BI_RM.charAt(n);\n}\n//#region BIT_OPERATIONS\n// (public) this & a\nexport function op_and(x, y) {\n    return x & y;\n}\n// (public) this | a\nexport function op_or(x, y) {\n    return x | y;\n}\n// (public) this ^ a\nexport function op_xor(x, y) {\n    return x ^ y;\n}\n// (public) this & ~a\nexport function op_andnot(x, y) {\n    return x & ~y;\n}\n// return index of lowest 1-bit in x, x < 2^31\nexport function lbit(x) {\n    if (x == 0) {\n        return -1;\n    }\n    var r = 0;\n    if ((x & 0xffff) == 0) {\n        x >>= 16;\n        r += 16;\n    }\n    if ((x & 0xff) == 0) {\n        x >>= 8;\n        r += 8;\n    }\n    if ((x & 0xf) == 0) {\n        x >>= 4;\n        r += 4;\n    }\n    if ((x & 3) == 0) {\n        x >>= 2;\n        r += 2;\n    }\n    if ((x & 1) == 0) {\n        ++r;\n    }\n    return r;\n}\n// return number of 1 bits in x\nexport function cbit(x) {\n    var r = 0;\n    while (x != 0) {\n        x &= x - 1;\n        ++r;\n    }\n    return r;\n}\n//#endregion BIT_OPERATIONS\n","import { int2char } from \"./util\";\nvar b64map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar b64pad = \"=\";\nexport function hex2b64(h) {\n    var i;\n    var c;\n    var ret = \"\";\n    for (i = 0; i + 3 <= h.length; i += 3) {\n        c = parseInt(h.substring(i, i + 3), 16);\n        ret += b64map.charAt(c >> 6) + b64map.charAt(c & 63);\n    }\n    if (i + 1 == h.length) {\n        c = parseInt(h.substring(i, i + 1), 16);\n        ret += b64map.charAt(c << 2);\n    }\n    else if (i + 2 == h.length) {\n        c = parseInt(h.substring(i, i + 2), 16);\n        ret += b64map.charAt(c >> 2) + b64map.charAt((c & 3) << 4);\n    }\n    while ((ret.length & 3) > 0) {\n        ret += b64pad;\n    }\n    return ret;\n}\n// convert a base64 string to hex\nexport function b64tohex(s) {\n    var ret = \"\";\n    var i;\n    var k = 0; // b64 state, 0-3\n    var slop = 0;\n    for (i = 0; i < s.length; ++i) {\n        if (s.charAt(i) == b64pad) {\n            break;\n        }\n        var v = b64map.indexOf(s.charAt(i));\n        if (v < 0) {\n            continue;\n        }\n        if (k == 0) {\n            ret += int2char(v >> 2);\n            slop = v & 3;\n            k = 1;\n        }\n        else if (k == 1) {\n            ret += int2char((slop << 2) | (v >> 4));\n            slop = v & 0xf;\n            k = 2;\n        }\n        else if (k == 2) {\n            ret += int2char(slop);\n            ret += int2char(v >> 2);\n            slop = v & 3;\n            k = 3;\n        }\n        else {\n            ret += int2char((slop << 2) | (v >> 4));\n            ret += int2char(v & 0xf);\n            k = 0;\n        }\n    }\n    if (k == 1) {\n        ret += int2char(slop << 2);\n    }\n    return ret;\n}\n// convert a base64 string to a byte/number array\nexport function b64toBA(s) {\n    // piggyback on b64tohex for now, optimize later\n    var h = b64tohex(s);\n    var i;\n    var a = [];\n    for (i = 0; 2 * i < h.length; ++i) {\n        a[i] = parseInt(h.substring(2 * i, 2 * i + 2), 16);\n    }\n    return a;\n}\n","// Hex JavaScript decoder\n// Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\nvar decoder;\nexport var Hex = {\n    decode: function (a) {\n        var i;\n        if (decoder === undefined) {\n            var hex = \"0123456789ABCDEF\";\n            var ignore = \" \\f\\n\\r\\t\\u00A0\\u2028\\u2029\";\n            decoder = {};\n            for (i = 0; i < 16; ++i) {\n                decoder[hex.charAt(i)] = i;\n            }\n            hex = hex.toLowerCase();\n            for (i = 10; i < 16; ++i) {\n                decoder[hex.charAt(i)] = i;\n            }\n            for (i = 0; i < ignore.length; ++i) {\n                decoder[ignore.charAt(i)] = -1;\n            }\n        }\n        var out = [];\n        var bits = 0;\n        var char_count = 0;\n        for (i = 0; i < a.length; ++i) {\n            var c = a.charAt(i);\n            if (c == \"=\") {\n                break;\n            }\n            c = decoder[c];\n            if (c == -1) {\n                continue;\n            }\n            if (c === undefined) {\n                throw new Error(\"Illegal character at offset \" + i);\n            }\n            bits |= c;\n            if (++char_count >= 2) {\n                out[out.length] = bits;\n                bits = 0;\n                char_count = 0;\n            }\n            else {\n                bits <<= 4;\n            }\n        }\n        if (char_count) {\n            throw new Error(\"Hex encoding incomplete: 4 bits missing\");\n        }\n        return out;\n    }\n};\n","// Base64 JavaScript decoder\n// Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\nvar decoder;\nexport var Base64 = {\n    decode: function (a) {\n        var i;\n        if (decoder === undefined) {\n            var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n            var ignore = \"= \\f\\n\\r\\t\\u00A0\\u2028\\u2029\";\n            decoder = Object.create(null);\n            for (i = 0; i < 64; ++i) {\n                decoder[b64.charAt(i)] = i;\n            }\n            decoder['-'] = 62; //+\n            decoder['_'] = 63; //-\n            for (i = 0; i < ignore.length; ++i) {\n                decoder[ignore.charAt(i)] = -1;\n            }\n        }\n        var out = [];\n        var bits = 0;\n        var char_count = 0;\n        for (i = 0; i < a.length; ++i) {\n            var c = a.charAt(i);\n            if (c == \"=\") {\n                break;\n            }\n            c = decoder[c];\n            if (c == -1) {\n                continue;\n            }\n            if (c === undefined) {\n                throw new Error(\"Illegal character at offset \" + i);\n            }\n            bits |= c;\n            if (++char_count >= 4) {\n                out[out.length] = (bits >> 16);\n                out[out.length] = (bits >> 8) & 0xFF;\n                out[out.length] = bits & 0xFF;\n                bits = 0;\n                char_count = 0;\n            }\n            else {\n                bits <<= 6;\n            }\n        }\n        switch (char_count) {\n            case 1:\n                throw new Error(\"Base64 encoding incomplete: at least 2 bits missing\");\n            case 2:\n                out[out.length] = (bits >> 10);\n                break;\n            case 3:\n                out[out.length] = (bits >> 16);\n                out[out.length] = (bits >> 8) & 0xFF;\n                break;\n        }\n        return out;\n    },\n    re: /-----BEGIN [^-]+-----([A-Za-z0-9+\\/=\\s]+)-----END [^-]+-----|begin-base64[^\\n]+\\n([A-Za-z0-9+\\/=\\s]+)====/,\n    unarmor: function (a) {\n        var m = Base64.re.exec(a);\n        if (m) {\n            if (m[1]) {\n                a = m[1];\n            }\n            else if (m[2]) {\n                a = m[2];\n            }\n            else {\n                throw new Error(\"RegExp out of sync\");\n            }\n        }\n        return Base64.decode(a);\n    }\n};\n","// Big integer base-10 printing library\n// Copyright (c) 2014 Lapo Luchini <lapo@lapo.it>\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\nvar max = 10000000000000; // biggest integer that can still fit 2^53 when multiplied by 256\nvar Int10 = /** @class */ (function () {\n    function Int10(value) {\n        this.buf = [+value || 0];\n    }\n    Int10.prototype.mulAdd = function (m, c) {\n        // assert(m <= 256)\n        var b = this.buf;\n        var l = b.length;\n        var i;\n        var t;\n        for (i = 0; i < l; ++i) {\n            t = b[i] * m + c;\n            if (t < max) {\n                c = 0;\n            }\n            else {\n                c = 0 | (t / max);\n                t -= c * max;\n            }\n            b[i] = t;\n        }\n        if (c > 0) {\n            b[i] = c;\n        }\n    };\n    Int10.prototype.sub = function (c) {\n        // assert(m <= 256)\n        var b = this.buf;\n        var l = b.length;\n        var i;\n        var t;\n        for (i = 0; i < l; ++i) {\n            t = b[i] - c;\n            if (t < 0) {\n                t += max;\n                c = 1;\n            }\n            else {\n                c = 0;\n            }\n            b[i] = t;\n        }\n        while (b[b.length - 1] === 0) {\n            b.pop();\n        }\n    };\n    Int10.prototype.toString = function (base) {\n        if ((base || 10) != 10) {\n            throw new Error(\"only base 10 is supported\");\n        }\n        var b = this.buf;\n        var s = b[b.length - 1].toString();\n        for (var i = b.length - 2; i >= 0; --i) {\n            s += (max + b[i]).toString().substring(1);\n        }\n        return s;\n    };\n    Int10.prototype.valueOf = function () {\n        var b = this.buf;\n        var v = 0;\n        for (var i = b.length - 1; i >= 0; --i) {\n            v = v * max + b[i];\n        }\n        return v;\n    };\n    Int10.prototype.simplify = function () {\n        var b = this.buf;\n        return (b.length == 1) ? b[0] : this;\n    };\n    return Int10;\n}());\nexport { Int10 };\n","// ASN.1 JavaScript decoder\n// Copyright (c) 2008-2014 Lapo Luchini <lapo@lapo.it>\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\n/*global oids */\nimport { Int10 } from \"./int10\";\nvar ellipsis = \"\\u2026\";\nvar reTimeS = /^(\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\nvar reTimeL = /^(\\d\\d\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\nfunction stringCut(str, len) {\n    if (str.length > len) {\n        str = str.substring(0, len) + ellipsis;\n    }\n    return str;\n}\nvar Stream = /** @class */ (function () {\n    function Stream(enc, pos) {\n        this.hexDigits = \"0123456789ABCDEF\";\n        if (enc instanceof Stream) {\n            this.enc = enc.enc;\n            this.pos = enc.pos;\n        }\n        else {\n            // enc should be an array or a binary string\n            this.enc = enc;\n            this.pos = pos;\n        }\n    }\n    Stream.prototype.get = function (pos) {\n        if (pos === undefined) {\n            pos = this.pos++;\n        }\n        if (pos >= this.enc.length) {\n            throw new Error(\"Requesting byte offset \".concat(pos, \" on a stream of length \").concat(this.enc.length));\n        }\n        return (\"string\" === typeof this.enc) ? this.enc.charCodeAt(pos) : this.enc[pos];\n    };\n    Stream.prototype.hexByte = function (b) {\n        return this.hexDigits.charAt((b >> 4) & 0xF) + this.hexDigits.charAt(b & 0xF);\n    };\n    Stream.prototype.hexDump = function (start, end, raw) {\n        var s = \"\";\n        for (var i = start; i < end; ++i) {\n            s += this.hexByte(this.get(i));\n            if (raw !== true) {\n                switch (i & 0xF) {\n                    case 0x7:\n                        s += \"  \";\n                        break;\n                    case 0xF:\n                        s += \"\\n\";\n                        break;\n                    default:\n                        s += \" \";\n                }\n            }\n        }\n        return s;\n    };\n    Stream.prototype.isASCII = function (start, end) {\n        for (var i = start; i < end; ++i) {\n            var c = this.get(i);\n            if (c < 32 || c > 176) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Stream.prototype.parseStringISO = function (start, end) {\n        var s = \"\";\n        for (var i = start; i < end; ++i) {\n            s += String.fromCharCode(this.get(i));\n        }\n        return s;\n    };\n    Stream.prototype.parseStringUTF = function (start, end) {\n        var s = \"\";\n        for (var i = start; i < end;) {\n            var c = this.get(i++);\n            if (c < 128) {\n                s += String.fromCharCode(c);\n            }\n            else if ((c > 191) && (c < 224)) {\n                s += String.fromCharCode(((c & 0x1F) << 6) | (this.get(i++) & 0x3F));\n            }\n            else {\n                s += String.fromCharCode(((c & 0x0F) << 12) | ((this.get(i++) & 0x3F) << 6) | (this.get(i++) & 0x3F));\n            }\n        }\n        return s;\n    };\n    Stream.prototype.parseStringBMP = function (start, end) {\n        var str = \"\";\n        var hi;\n        var lo;\n        for (var i = start; i < end;) {\n            hi = this.get(i++);\n            lo = this.get(i++);\n            str += String.fromCharCode((hi << 8) | lo);\n        }\n        return str;\n    };\n    Stream.prototype.parseTime = function (start, end, shortYear) {\n        var s = this.parseStringISO(start, end);\n        var m = (shortYear ? reTimeS : reTimeL).exec(s);\n        if (!m) {\n            return \"Unrecognized time: \" + s;\n        }\n        if (shortYear) {\n            // to avoid querying the timer, use the fixed range [1970, 2069]\n            // it will conform with ITU X.400 [-10, +40] sliding window until 2030\n            m[1] = +m[1];\n            m[1] += (+m[1] < 70) ? 2000 : 1900;\n        }\n        s = m[1] + \"-\" + m[2] + \"-\" + m[3] + \" \" + m[4];\n        if (m[5]) {\n            s += \":\" + m[5];\n            if (m[6]) {\n                s += \":\" + m[6];\n                if (m[7]) {\n                    s += \".\" + m[7];\n                }\n            }\n        }\n        if (m[8]) {\n            s += \" UTC\";\n            if (m[8] != \"Z\") {\n                s += m[8];\n                if (m[9]) {\n                    s += \":\" + m[9];\n                }\n            }\n        }\n        return s;\n    };\n    Stream.prototype.parseInteger = function (start, end) {\n        var v = this.get(start);\n        var neg = (v > 127);\n        var pad = neg ? 255 : 0;\n        var len;\n        var s = \"\";\n        // skip unuseful bits (not allowed in DER)\n        while (v == pad && ++start < end) {\n            v = this.get(start);\n        }\n        len = end - start;\n        if (len === 0) {\n            return neg ? -1 : 0;\n        }\n        // show bit length of huge integers\n        if (len > 4) {\n            s = v;\n            len <<= 3;\n            while (((+s ^ pad) & 0x80) == 0) {\n                s = +s << 1;\n                --len;\n            }\n            s = \"(\" + len + \" bit)\\n\";\n        }\n        // decode the integer\n        if (neg) {\n            v = v - 256;\n        }\n        var n = new Int10(v);\n        for (var i = start + 1; i < end; ++i) {\n            n.mulAdd(256, this.get(i));\n        }\n        return s + n.toString();\n    };\n    Stream.prototype.parseBitString = function (start, end, maxLength) {\n        var unusedBit = this.get(start);\n        var lenBit = ((end - start - 1) << 3) - unusedBit;\n        var intro = \"(\" + lenBit + \" bit)\\n\";\n        var s = \"\";\n        for (var i = start + 1; i < end; ++i) {\n            var b = this.get(i);\n            var skip = (i == end - 1) ? unusedBit : 0;\n            for (var j = 7; j >= skip; --j) {\n                s += (b >> j) & 1 ? \"1\" : \"0\";\n            }\n            if (s.length > maxLength) {\n                return intro + stringCut(s, maxLength);\n            }\n        }\n        return intro + s;\n    };\n    Stream.prototype.parseOctetString = function (start, end, maxLength) {\n        if (this.isASCII(start, end)) {\n            return stringCut(this.parseStringISO(start, end), maxLength);\n        }\n        var len = end - start;\n        var s = \"(\" + len + \" byte)\\n\";\n        maxLength /= 2; // we work in bytes\n        if (len > maxLength) {\n            end = start + maxLength;\n        }\n        for (var i = start; i < end; ++i) {\n            s += this.hexByte(this.get(i));\n        }\n        if (len > maxLength) {\n            s += ellipsis;\n        }\n        return s;\n    };\n    Stream.prototype.parseOID = function (start, end, maxLength) {\n        var s = \"\";\n        var n = new Int10();\n        var bits = 0;\n        for (var i = start; i < end; ++i) {\n            var v = this.get(i);\n            n.mulAdd(128, v & 0x7F);\n            bits += 7;\n            if (!(v & 0x80)) { // finished\n                if (s === \"\") {\n                    n = n.simplify();\n                    if (n instanceof Int10) {\n                        n.sub(80);\n                        s = \"2.\" + n.toString();\n                    }\n                    else {\n                        var m = n < 80 ? n < 40 ? 0 : 1 : 2;\n                        s = m + \".\" + (n - m * 40);\n                    }\n                }\n                else {\n                    s += \".\" + n.toString();\n                }\n                if (s.length > maxLength) {\n                    return stringCut(s, maxLength);\n                }\n                n = new Int10();\n                bits = 0;\n            }\n        }\n        if (bits > 0) {\n            s += \".incomplete\";\n        }\n        return s;\n    };\n    return Stream;\n}());\nexport { Stream };\nvar ASN1 = /** @class */ (function () {\n    function ASN1(stream, header, length, tag, sub) {\n        if (!(tag instanceof ASN1Tag)) {\n            throw new Error(\"Invalid tag value.\");\n        }\n        this.stream = stream;\n        this.header = header;\n        this.length = length;\n        this.tag = tag;\n        this.sub = sub;\n    }\n    ASN1.prototype.typeName = function () {\n        switch (this.tag.tagClass) {\n            case 0: // universal\n                switch (this.tag.tagNumber) {\n                    case 0x00:\n                        return \"EOC\";\n                    case 0x01:\n                        return \"BOOLEAN\";\n                    case 0x02:\n                        return \"INTEGER\";\n                    case 0x03:\n                        return \"BIT_STRING\";\n                    case 0x04:\n                        return \"OCTET_STRING\";\n                    case 0x05:\n                        return \"NULL\";\n                    case 0x06:\n                        return \"OBJECT_IDENTIFIER\";\n                    case 0x07:\n                        return \"ObjectDescriptor\";\n                    case 0x08:\n                        return \"EXTERNAL\";\n                    case 0x09:\n                        return \"REAL\";\n                    case 0x0A:\n                        return \"ENUMERATED\";\n                    case 0x0B:\n                        return \"EMBEDDED_PDV\";\n                    case 0x0C:\n                        return \"UTF8String\";\n                    case 0x10:\n                        return \"SEQUENCE\";\n                    case 0x11:\n                        return \"SET\";\n                    case 0x12:\n                        return \"NumericString\";\n                    case 0x13:\n                        return \"PrintableString\"; // ASCII subset\n                    case 0x14:\n                        return \"TeletexString\"; // aka T61String\n                    case 0x15:\n                        return \"VideotexString\";\n                    case 0x16:\n                        return \"IA5String\"; // ASCII\n                    case 0x17:\n                        return \"UTCTime\";\n                    case 0x18:\n                        return \"GeneralizedTime\";\n                    case 0x19:\n                        return \"GraphicString\";\n                    case 0x1A:\n                        return \"VisibleString\"; // ASCII subset\n                    case 0x1B:\n                        return \"GeneralString\";\n                    case 0x1C:\n                        return \"UniversalString\";\n                    case 0x1E:\n                        return \"BMPString\";\n                }\n                return \"Universal_\" + this.tag.tagNumber.toString();\n            case 1:\n                return \"Application_\" + this.tag.tagNumber.toString();\n            case 2:\n                return \"[\" + this.tag.tagNumber.toString() + \"]\"; // Context\n            case 3:\n                return \"Private_\" + this.tag.tagNumber.toString();\n        }\n    };\n    ASN1.prototype.content = function (maxLength) {\n        if (this.tag === undefined) {\n            return null;\n        }\n        if (maxLength === undefined) {\n            maxLength = Infinity;\n        }\n        var content = this.posContent();\n        var len = Math.abs(this.length);\n        if (!this.tag.isUniversal()) {\n            if (this.sub !== null) {\n                return \"(\" + this.sub.length + \" elem)\";\n            }\n            return this.stream.parseOctetString(content, content + len, maxLength);\n        }\n        switch (this.tag.tagNumber) {\n            case 0x01: // BOOLEAN\n                return (this.stream.get(content) === 0) ? \"false\" : \"true\";\n            case 0x02: // INTEGER\n                return this.stream.parseInteger(content, content + len);\n            case 0x03: // BIT_STRING\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\n                    this.stream.parseBitString(content, content + len, maxLength);\n            case 0x04: // OCTET_STRING\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\n                    this.stream.parseOctetString(content, content + len, maxLength);\n            // case 0x05: // NULL\n            case 0x06: // OBJECT_IDENTIFIER\n                return this.stream.parseOID(content, content + len, maxLength);\n            // case 0x07: // ObjectDescriptor\n            // case 0x08: // EXTERNAL\n            // case 0x09: // REAL\n            // case 0x0A: // ENUMERATED\n            // case 0x0B: // EMBEDDED_PDV\n            case 0x10: // SEQUENCE\n            case 0x11: // SET\n                if (this.sub !== null) {\n                    return \"(\" + this.sub.length + \" elem)\";\n                }\n                else {\n                    return \"(no elem)\";\n                }\n            case 0x0C: // UTF8String\n                return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);\n            case 0x12: // NumericString\n            case 0x13: // PrintableString\n            case 0x14: // TeletexString\n            case 0x15: // VideotexString\n            case 0x16: // IA5String\n            // case 0x19: // GraphicString\n            case 0x1A: // VisibleString\n                // case 0x1B: // GeneralString\n                // case 0x1C: // UniversalString\n                return stringCut(this.stream.parseStringISO(content, content + len), maxLength);\n            case 0x1E: // BMPString\n                return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);\n            case 0x17: // UTCTime\n            case 0x18: // GeneralizedTime\n                return this.stream.parseTime(content, content + len, (this.tag.tagNumber == 0x17));\n        }\n        return null;\n    };\n    ASN1.prototype.toString = function () {\n        return this.typeName() + \"@\" + this.stream.pos + \"[header:\" + this.header + \",length:\" + this.length + \",sub:\" + ((this.sub === null) ? \"null\" : this.sub.length) + \"]\";\n    };\n    ASN1.prototype.toPrettyString = function (indent) {\n        if (indent === undefined) {\n            indent = \"\";\n        }\n        var s = indent + this.typeName() + \" @\" + this.stream.pos;\n        if (this.length >= 0) {\n            s += \"+\";\n        }\n        s += this.length;\n        if (this.tag.tagConstructed) {\n            s += \" (constructed)\";\n        }\n        else if ((this.tag.isUniversal() && ((this.tag.tagNumber == 0x03) || (this.tag.tagNumber == 0x04))) && (this.sub !== null)) {\n            s += \" (encapsulates)\";\n        }\n        s += \"\\n\";\n        if (this.sub !== null) {\n            indent += \"  \";\n            for (var i = 0, max = this.sub.length; i < max; ++i) {\n                s += this.sub[i].toPrettyString(indent);\n            }\n        }\n        return s;\n    };\n    ASN1.prototype.posStart = function () {\n        return this.stream.pos;\n    };\n    ASN1.prototype.posContent = function () {\n        return this.stream.pos + this.header;\n    };\n    ASN1.prototype.posEnd = function () {\n        return this.stream.pos + this.header + Math.abs(this.length);\n    };\n    ASN1.prototype.toHexString = function () {\n        return this.stream.hexDump(this.posStart(), this.posEnd(), true);\n    };\n    ASN1.decodeLength = function (stream) {\n        var buf = stream.get();\n        var len = buf & 0x7F;\n        if (len == buf) {\n            return len;\n        }\n        // no reason to use Int10, as it would be a huge buffer anyways\n        if (len > 6) {\n            throw new Error(\"Length over 48 bits not supported at position \" + (stream.pos - 1));\n        }\n        if (len === 0) {\n            return null;\n        } // undefined\n        buf = 0;\n        for (var i = 0; i < len; ++i) {\n            buf = (buf * 256) + stream.get();\n        }\n        return buf;\n    };\n    /**\n     * Retrieve the hexadecimal value (as a string) of the current ASN.1 element\n     * @returns {string}\n     * @public\n     */\n    ASN1.prototype.getHexStringValue = function () {\n        var hexString = this.toHexString();\n        var offset = this.header * 2;\n        var length = this.length * 2;\n        return hexString.substr(offset, length);\n    };\n    ASN1.decode = function (str) {\n        var stream;\n        if (!(str instanceof Stream)) {\n            stream = new Stream(str, 0);\n        }\n        else {\n            stream = str;\n        }\n        var streamStart = new Stream(stream);\n        var tag = new ASN1Tag(stream);\n        var len = ASN1.decodeLength(stream);\n        var start = stream.pos;\n        var header = start - streamStart.pos;\n        var sub = null;\n        var getSub = function () {\n            var ret = [];\n            if (len !== null) {\n                // definite length\n                var end = start + len;\n                while (stream.pos < end) {\n                    ret[ret.length] = ASN1.decode(stream);\n                }\n                if (stream.pos != end) {\n                    throw new Error(\"Content size is not correct for container starting at offset \" + start);\n                }\n            }\n            else {\n                // undefined length\n                try {\n                    for (;;) {\n                        var s = ASN1.decode(stream);\n                        if (s.tag.isEOC()) {\n                            break;\n                        }\n                        ret[ret.length] = s;\n                    }\n                    len = start - stream.pos; // undefined lengths are represented as negative values\n                }\n                catch (e) {\n                    throw new Error(\"Exception while decoding undefined length content: \" + e);\n                }\n            }\n            return ret;\n        };\n        if (tag.tagConstructed) {\n            // must have valid content\n            sub = getSub();\n        }\n        else if (tag.isUniversal() && ((tag.tagNumber == 0x03) || (tag.tagNumber == 0x04))) {\n            // sometimes BitString and OctetString are used to encapsulate ASN.1\n            try {\n                if (tag.tagNumber == 0x03) {\n                    if (stream.get() != 0) {\n                        throw new Error(\"BIT STRINGs with unused bits cannot encapsulate.\");\n                    }\n                }\n                sub = getSub();\n                for (var i = 0; i < sub.length; ++i) {\n                    if (sub[i].tag.isEOC()) {\n                        throw new Error(\"EOC is not supposed to be actual content.\");\n                    }\n                }\n            }\n            catch (e) {\n                // but silently ignore when they don't\n                sub = null;\n            }\n        }\n        if (sub === null) {\n            if (len === null) {\n                throw new Error(\"We can't skip over an invalid tag with undefined length at offset \" + start);\n            }\n            stream.pos = start + Math.abs(len);\n        }\n        return new ASN1(streamStart, header, len, tag, sub);\n    };\n    return ASN1;\n}());\nexport { ASN1 };\nvar ASN1Tag = /** @class */ (function () {\n    function ASN1Tag(stream) {\n        var buf = stream.get();\n        this.tagClass = buf >> 6;\n        this.tagConstructed = ((buf & 0x20) !== 0);\n        this.tagNumber = buf & 0x1F;\n        if (this.tagNumber == 0x1F) { // long tag\n            var n = new Int10();\n            do {\n                buf = stream.get();\n                n.mulAdd(128, buf & 0x7F);\n            } while (buf & 0x80);\n            this.tagNumber = n.simplify();\n        }\n    }\n    ASN1Tag.prototype.isUniversal = function () {\n        return this.tagClass === 0x00;\n    };\n    ASN1Tag.prototype.isEOC = function () {\n        return this.tagClass === 0x00 && this.tagNumber === 0x00;\n    };\n    return ASN1Tag;\n}());\nexport { ASN1Tag };\n","// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n// Basic JavaScript BN library - subset useful for RSA encryption.\nimport { cbit, int2char, lbit, op_and, op_andnot, op_or, op_xor } from \"./util\";\n// Bits per digit\nvar dbits;\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary & 0xffffff) == 0xefcafe);\n//#region\nvar lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\nvar lplim = (1 << 26) / lowprimes[lowprimes.length - 1];\n//#endregion\n// (public) Constructor\nvar BigInteger = /** @class */ (function () {\n    function BigInteger(a, b, c) {\n        if (a != null) {\n            if (\"number\" == typeof a) {\n                this.fromNumber(a, b, c);\n            }\n            else if (b == null && \"string\" != typeof a) {\n                this.fromString(a, 256);\n            }\n            else {\n                this.fromString(a, b);\n            }\n        }\n    }\n    //#region PUBLIC\n    // BigInteger.prototype.toString = bnToString;\n    // (public) return string representation in given radix\n    BigInteger.prototype.toString = function (b) {\n        if (this.s < 0) {\n            return \"-\" + this.negate().toString(b);\n        }\n        var k;\n        if (b == 16) {\n            k = 4;\n        }\n        else if (b == 8) {\n            k = 3;\n        }\n        else if (b == 2) {\n            k = 1;\n        }\n        else if (b == 32) {\n            k = 5;\n        }\n        else if (b == 4) {\n            k = 2;\n        }\n        else {\n            return this.toRadix(b);\n        }\n        var km = (1 << k) - 1;\n        var d;\n        var m = false;\n        var r = \"\";\n        var i = this.t;\n        var p = this.DB - (i * this.DB) % k;\n        if (i-- > 0) {\n            if (p < this.DB && (d = this[i] >> p) > 0) {\n                m = true;\n                r = int2char(d);\n            }\n            while (i >= 0) {\n                if (p < k) {\n                    d = (this[i] & ((1 << p) - 1)) << (k - p);\n                    d |= this[--i] >> (p += this.DB - k);\n                }\n                else {\n                    d = (this[i] >> (p -= k)) & km;\n                    if (p <= 0) {\n                        p += this.DB;\n                        --i;\n                    }\n                }\n                if (d > 0) {\n                    m = true;\n                }\n                if (m) {\n                    r += int2char(d);\n                }\n            }\n        }\n        return m ? r : \"0\";\n    };\n    // BigInteger.prototype.negate = bnNegate;\n    // (public) -this\n    BigInteger.prototype.negate = function () {\n        var r = nbi();\n        BigInteger.ZERO.subTo(this, r);\n        return r;\n    };\n    // BigInteger.prototype.abs = bnAbs;\n    // (public) |this|\n    BigInteger.prototype.abs = function () {\n        return (this.s < 0) ? this.negate() : this;\n    };\n    // BigInteger.prototype.compareTo = bnCompareTo;\n    // (public) return + if this > a, - if this < a, 0 if equal\n    BigInteger.prototype.compareTo = function (a) {\n        var r = this.s - a.s;\n        if (r != 0) {\n            return r;\n        }\n        var i = this.t;\n        r = i - a.t;\n        if (r != 0) {\n            return (this.s < 0) ? -r : r;\n        }\n        while (--i >= 0) {\n            if ((r = this[i] - a[i]) != 0) {\n                return r;\n            }\n        }\n        return 0;\n    };\n    // BigInteger.prototype.bitLength = bnBitLength;\n    // (public) return the number of bits in \"this\"\n    BigInteger.prototype.bitLength = function () {\n        if (this.t <= 0) {\n            return 0;\n        }\n        return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\n    };\n    // BigInteger.prototype.mod = bnMod;\n    // (public) this mod a\n    BigInteger.prototype.mod = function (a) {\n        var r = nbi();\n        this.abs().divRemTo(a, null, r);\n        if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {\n            a.subTo(r, r);\n        }\n        return r;\n    };\n    // BigInteger.prototype.modPowInt = bnModPowInt;\n    // (public) this^e % m, 0 <= e < 2^32\n    BigInteger.prototype.modPowInt = function (e, m) {\n        var z;\n        if (e < 256 || m.isEven()) {\n            z = new Classic(m);\n        }\n        else {\n            z = new Montgomery(m);\n        }\n        return this.exp(e, z);\n    };\n    // BigInteger.prototype.clone = bnClone;\n    // (public)\n    BigInteger.prototype.clone = function () {\n        var r = nbi();\n        this.copyTo(r);\n        return r;\n    };\n    // BigInteger.prototype.intValue = bnIntValue;\n    // (public) return value as integer\n    BigInteger.prototype.intValue = function () {\n        if (this.s < 0) {\n            if (this.t == 1) {\n                return this[0] - this.DV;\n            }\n            else if (this.t == 0) {\n                return -1;\n            }\n        }\n        else if (this.t == 1) {\n            return this[0];\n        }\n        else if (this.t == 0) {\n            return 0;\n        }\n        // assumes 16 < DB < 32\n        return ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0];\n    };\n    // BigInteger.prototype.byteValue = bnByteValue;\n    // (public) return value as byte\n    BigInteger.prototype.byteValue = function () {\n        return (this.t == 0) ? this.s : (this[0] << 24) >> 24;\n    };\n    // BigInteger.prototype.shortValue = bnShortValue;\n    // (public) return value as short (assumes DB>=16)\n    BigInteger.prototype.shortValue = function () {\n        return (this.t == 0) ? this.s : (this[0] << 16) >> 16;\n    };\n    // BigInteger.prototype.signum = bnSigNum;\n    // (public) 0 if this == 0, 1 if this > 0\n    BigInteger.prototype.signum = function () {\n        if (this.s < 0) {\n            return -1;\n        }\n        else if (this.t <= 0 || (this.t == 1 && this[0] <= 0)) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    };\n    // BigInteger.prototype.toByteArray = bnToByteArray;\n    // (public) convert to bigendian byte array\n    BigInteger.prototype.toByteArray = function () {\n        var i = this.t;\n        var r = [];\n        r[0] = this.s;\n        var p = this.DB - (i * this.DB) % 8;\n        var d;\n        var k = 0;\n        if (i-- > 0) {\n            if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p) {\n                r[k++] = d | (this.s << (this.DB - p));\n            }\n            while (i >= 0) {\n                if (p < 8) {\n                    d = (this[i] & ((1 << p) - 1)) << (8 - p);\n                    d |= this[--i] >> (p += this.DB - 8);\n                }\n                else {\n                    d = (this[i] >> (p -= 8)) & 0xff;\n                    if (p <= 0) {\n                        p += this.DB;\n                        --i;\n                    }\n                }\n                if ((d & 0x80) != 0) {\n                    d |= -256;\n                }\n                if (k == 0 && (this.s & 0x80) != (d & 0x80)) {\n                    ++k;\n                }\n                if (k > 0 || d != this.s) {\n                    r[k++] = d;\n                }\n            }\n        }\n        return r;\n    };\n    // BigInteger.prototype.equals = bnEquals;\n    BigInteger.prototype.equals = function (a) {\n        return (this.compareTo(a) == 0);\n    };\n    // BigInteger.prototype.min = bnMin;\n    BigInteger.prototype.min = function (a) {\n        return (this.compareTo(a) < 0) ? this : a;\n    };\n    // BigInteger.prototype.max = bnMax;\n    BigInteger.prototype.max = function (a) {\n        return (this.compareTo(a) > 0) ? this : a;\n    };\n    // BigInteger.prototype.and = bnAnd;\n    BigInteger.prototype.and = function (a) {\n        var r = nbi();\n        this.bitwiseTo(a, op_and, r);\n        return r;\n    };\n    // BigInteger.prototype.or = bnOr;\n    BigInteger.prototype.or = function (a) {\n        var r = nbi();\n        this.bitwiseTo(a, op_or, r);\n        return r;\n    };\n    // BigInteger.prototype.xor = bnXor;\n    BigInteger.prototype.xor = function (a) {\n        var r = nbi();\n        this.bitwiseTo(a, op_xor, r);\n        return r;\n    };\n    // BigInteger.prototype.andNot = bnAndNot;\n    BigInteger.prototype.andNot = function (a) {\n        var r = nbi();\n        this.bitwiseTo(a, op_andnot, r);\n        return r;\n    };\n    // BigInteger.prototype.not = bnNot;\n    // (public) ~this\n    BigInteger.prototype.not = function () {\n        var r = nbi();\n        for (var i = 0; i < this.t; ++i) {\n            r[i] = this.DM & ~this[i];\n        }\n        r.t = this.t;\n        r.s = ~this.s;\n        return r;\n    };\n    // BigInteger.prototype.shiftLeft = bnShiftLeft;\n    // (public) this << n\n    BigInteger.prototype.shiftLeft = function (n) {\n        var r = nbi();\n        if (n < 0) {\n            this.rShiftTo(-n, r);\n        }\n        else {\n            this.lShiftTo(n, r);\n        }\n        return r;\n    };\n    // BigInteger.prototype.shiftRight = bnShiftRight;\n    // (public) this >> n\n    BigInteger.prototype.shiftRight = function (n) {\n        var r = nbi();\n        if (n < 0) {\n            this.lShiftTo(-n, r);\n        }\n        else {\n            this.rShiftTo(n, r);\n        }\n        return r;\n    };\n    // BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\n    // (public) returns index of lowest 1-bit (or -1 if none)\n    BigInteger.prototype.getLowestSetBit = function () {\n        for (var i = 0; i < this.t; ++i) {\n            if (this[i] != 0) {\n                return i * this.DB + lbit(this[i]);\n            }\n        }\n        if (this.s < 0) {\n            return this.t * this.DB;\n        }\n        return -1;\n    };\n    // BigInteger.prototype.bitCount = bnBitCount;\n    // (public) return number of set bits\n    BigInteger.prototype.bitCount = function () {\n        var r = 0;\n        var x = this.s & this.DM;\n        for (var i = 0; i < this.t; ++i) {\n            r += cbit(this[i] ^ x);\n        }\n        return r;\n    };\n    // BigInteger.prototype.testBit = bnTestBit;\n    // (public) true iff nth bit is set\n    BigInteger.prototype.testBit = function (n) {\n        var j = Math.floor(n / this.DB);\n        if (j >= this.t) {\n            return (this.s != 0);\n        }\n        return ((this[j] & (1 << (n % this.DB))) != 0);\n    };\n    // BigInteger.prototype.setBit = bnSetBit;\n    // (public) this | (1<<n)\n    BigInteger.prototype.setBit = function (n) {\n        return this.changeBit(n, op_or);\n    };\n    // BigInteger.prototype.clearBit = bnClearBit;\n    // (public) this & ~(1<<n)\n    BigInteger.prototype.clearBit = function (n) {\n        return this.changeBit(n, op_andnot);\n    };\n    // BigInteger.prototype.flipBit = bnFlipBit;\n    // (public) this ^ (1<<n)\n    BigInteger.prototype.flipBit = function (n) {\n        return this.changeBit(n, op_xor);\n    };\n    // BigInteger.prototype.add = bnAdd;\n    // (public) this + a\n    BigInteger.prototype.add = function (a) {\n        var r = nbi();\n        this.addTo(a, r);\n        return r;\n    };\n    // BigInteger.prototype.subtract = bnSubtract;\n    // (public) this - a\n    BigInteger.prototype.subtract = function (a) {\n        var r = nbi();\n        this.subTo(a, r);\n        return r;\n    };\n    // BigInteger.prototype.multiply = bnMultiply;\n    // (public) this * a\n    BigInteger.prototype.multiply = function (a) {\n        var r = nbi();\n        this.multiplyTo(a, r);\n        return r;\n    };\n    // BigInteger.prototype.divide = bnDivide;\n    // (public) this / a\n    BigInteger.prototype.divide = function (a) {\n        var r = nbi();\n        this.divRemTo(a, r, null);\n        return r;\n    };\n    // BigInteger.prototype.remainder = bnRemainder;\n    // (public) this % a\n    BigInteger.prototype.remainder = function (a) {\n        var r = nbi();\n        this.divRemTo(a, null, r);\n        return r;\n    };\n    // BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\n    // (public) [this/a,this%a]\n    BigInteger.prototype.divideAndRemainder = function (a) {\n        var q = nbi();\n        var r = nbi();\n        this.divRemTo(a, q, r);\n        return [q, r];\n    };\n    // BigInteger.prototype.modPow = bnModPow;\n    // (public) this^e % m (HAC 14.85)\n    BigInteger.prototype.modPow = function (e, m) {\n        var i = e.bitLength();\n        var k;\n        var r = nbv(1);\n        var z;\n        if (i <= 0) {\n            return r;\n        }\n        else if (i < 18) {\n            k = 1;\n        }\n        else if (i < 48) {\n            k = 3;\n        }\n        else if (i < 144) {\n            k = 4;\n        }\n        else if (i < 768) {\n            k = 5;\n        }\n        else {\n            k = 6;\n        }\n        if (i < 8) {\n            z = new Classic(m);\n        }\n        else if (m.isEven()) {\n            z = new Barrett(m);\n        }\n        else {\n            z = new Montgomery(m);\n        }\n        // precomputation\n        var g = [];\n        var n = 3;\n        var k1 = k - 1;\n        var km = (1 << k) - 1;\n        g[1] = z.convert(this);\n        if (k > 1) {\n            var g2 = nbi();\n            z.sqrTo(g[1], g2);\n            while (n <= km) {\n                g[n] = nbi();\n                z.mulTo(g2, g[n - 2], g[n]);\n                n += 2;\n            }\n        }\n        var j = e.t - 1;\n        var w;\n        var is1 = true;\n        var r2 = nbi();\n        var t;\n        i = nbits(e[j]) - 1;\n        while (j >= 0) {\n            if (i >= k1) {\n                w = (e[j] >> (i - k1)) & km;\n            }\n            else {\n                w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\n                if (j > 0) {\n                    w |= e[j - 1] >> (this.DB + i - k1);\n                }\n            }\n            n = k;\n            while ((w & 1) == 0) {\n                w >>= 1;\n                --n;\n            }\n            if ((i -= n) < 0) {\n                i += this.DB;\n                --j;\n            }\n            if (is1) { // ret == 1, don't bother squaring or multiplying it\n                g[w].copyTo(r);\n                is1 = false;\n            }\n            else {\n                while (n > 1) {\n                    z.sqrTo(r, r2);\n                    z.sqrTo(r2, r);\n                    n -= 2;\n                }\n                if (n > 0) {\n                    z.sqrTo(r, r2);\n                }\n                else {\n                    t = r;\n                    r = r2;\n                    r2 = t;\n                }\n                z.mulTo(r2, g[w], r);\n            }\n            while (j >= 0 && (e[j] & (1 << i)) == 0) {\n                z.sqrTo(r, r2);\n                t = r;\n                r = r2;\n                r2 = t;\n                if (--i < 0) {\n                    i = this.DB - 1;\n                    --j;\n                }\n            }\n        }\n        return z.revert(r);\n    };\n    // BigInteger.prototype.modInverse = bnModInverse;\n    // (public) 1/this % m (HAC 14.61)\n    BigInteger.prototype.modInverse = function (m) {\n        var ac = m.isEven();\n        if ((this.isEven() && ac) || m.signum() == 0) {\n            return BigInteger.ZERO;\n        }\n        var u = m.clone();\n        var v = this.clone();\n        var a = nbv(1);\n        var b = nbv(0);\n        var c = nbv(0);\n        var d = nbv(1);\n        while (u.signum() != 0) {\n            while (u.isEven()) {\n                u.rShiftTo(1, u);\n                if (ac) {\n                    if (!a.isEven() || !b.isEven()) {\n                        a.addTo(this, a);\n                        b.subTo(m, b);\n                    }\n                    a.rShiftTo(1, a);\n                }\n                else if (!b.isEven()) {\n                    b.subTo(m, b);\n                }\n                b.rShiftTo(1, b);\n            }\n            while (v.isEven()) {\n                v.rShiftTo(1, v);\n                if (ac) {\n                    if (!c.isEven() || !d.isEven()) {\n                        c.addTo(this, c);\n                        d.subTo(m, d);\n                    }\n                    c.rShiftTo(1, c);\n                }\n                else if (!d.isEven()) {\n                    d.subTo(m, d);\n                }\n                d.rShiftTo(1, d);\n            }\n            if (u.compareTo(v) >= 0) {\n                u.subTo(v, u);\n                if (ac) {\n                    a.subTo(c, a);\n                }\n                b.subTo(d, b);\n            }\n            else {\n                v.subTo(u, v);\n                if (ac) {\n                    c.subTo(a, c);\n                }\n                d.subTo(b, d);\n            }\n        }\n        if (v.compareTo(BigInteger.ONE) != 0) {\n            return BigInteger.ZERO;\n        }\n        if (d.compareTo(m) >= 0) {\n            return d.subtract(m);\n        }\n        if (d.signum() < 0) {\n            d.addTo(m, d);\n        }\n        else {\n            return d;\n        }\n        if (d.signum() < 0) {\n            return d.add(m);\n        }\n        else {\n            return d;\n        }\n    };\n    // BigInteger.prototype.pow = bnPow;\n    // (public) this^e\n    BigInteger.prototype.pow = function (e) {\n        return this.exp(e, new NullExp());\n    };\n    // BigInteger.prototype.gcd = bnGCD;\n    // (public) gcd(this,a) (HAC 14.54)\n    BigInteger.prototype.gcd = function (a) {\n        var x = (this.s < 0) ? this.negate() : this.clone();\n        var y = (a.s < 0) ? a.negate() : a.clone();\n        if (x.compareTo(y) < 0) {\n            var t = x;\n            x = y;\n            y = t;\n        }\n        var i = x.getLowestSetBit();\n        var g = y.getLowestSetBit();\n        if (g < 0) {\n            return x;\n        }\n        if (i < g) {\n            g = i;\n        }\n        if (g > 0) {\n            x.rShiftTo(g, x);\n            y.rShiftTo(g, y);\n        }\n        while (x.signum() > 0) {\n            if ((i = x.getLowestSetBit()) > 0) {\n                x.rShiftTo(i, x);\n            }\n            if ((i = y.getLowestSetBit()) > 0) {\n                y.rShiftTo(i, y);\n            }\n            if (x.compareTo(y) >= 0) {\n                x.subTo(y, x);\n                x.rShiftTo(1, x);\n            }\n            else {\n                y.subTo(x, y);\n                y.rShiftTo(1, y);\n            }\n        }\n        if (g > 0) {\n            y.lShiftTo(g, y);\n        }\n        return y;\n    };\n    // BigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n    // (public) test primality with certainty >= 1-.5^t\n    BigInteger.prototype.isProbablePrime = function (t) {\n        var i;\n        var x = this.abs();\n        if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {\n            for (i = 0; i < lowprimes.length; ++i) {\n                if (x[0] == lowprimes[i]) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (x.isEven()) {\n            return false;\n        }\n        i = 1;\n        while (i < lowprimes.length) {\n            var m = lowprimes[i];\n            var j = i + 1;\n            while (j < lowprimes.length && m < lplim) {\n                m *= lowprimes[j++];\n            }\n            m = x.modInt(m);\n            while (i < j) {\n                if (m % lowprimes[i++] == 0) {\n                    return false;\n                }\n            }\n        }\n        return x.millerRabin(t);\n    };\n    //#endregion PUBLIC\n    //#region PROTECTED\n    // BigInteger.prototype.copyTo = bnpCopyTo;\n    // (protected) copy this to r\n    BigInteger.prototype.copyTo = function (r) {\n        for (var i = this.t - 1; i >= 0; --i) {\n            r[i] = this[i];\n        }\n        r.t = this.t;\n        r.s = this.s;\n    };\n    // BigInteger.prototype.fromInt = bnpFromInt;\n    // (protected) set from integer value x, -DV <= x < DV\n    BigInteger.prototype.fromInt = function (x) {\n        this.t = 1;\n        this.s = (x < 0) ? -1 : 0;\n        if (x > 0) {\n            this[0] = x;\n        }\n        else if (x < -1) {\n            this[0] = x + this.DV;\n        }\n        else {\n            this.t = 0;\n        }\n    };\n    // BigInteger.prototype.fromString = bnpFromString;\n    // (protected) set from string and radix\n    BigInteger.prototype.fromString = function (s, b) {\n        var k;\n        if (b == 16) {\n            k = 4;\n        }\n        else if (b == 8) {\n            k = 3;\n        }\n        else if (b == 256) {\n            k = 8;\n            /* byte array */\n        }\n        else if (b == 2) {\n            k = 1;\n        }\n        else if (b == 32) {\n            k = 5;\n        }\n        else if (b == 4) {\n            k = 2;\n        }\n        else {\n            this.fromRadix(s, b);\n            return;\n        }\n        this.t = 0;\n        this.s = 0;\n        var i = s.length;\n        var mi = false;\n        var sh = 0;\n        while (--i >= 0) {\n            var x = (k == 8) ? (+s[i]) & 0xff : intAt(s, i);\n            if (x < 0) {\n                if (s.charAt(i) == \"-\") {\n                    mi = true;\n                }\n                continue;\n            }\n            mi = false;\n            if (sh == 0) {\n                this[this.t++] = x;\n            }\n            else if (sh + k > this.DB) {\n                this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\n                this[this.t++] = (x >> (this.DB - sh));\n            }\n            else {\n                this[this.t - 1] |= x << sh;\n            }\n            sh += k;\n            if (sh >= this.DB) {\n                sh -= this.DB;\n            }\n        }\n        if (k == 8 && ((+s[0]) & 0x80) != 0) {\n            this.s = -1;\n            if (sh > 0) {\n                this[this.t - 1] |= ((1 << (this.DB - sh)) - 1) << sh;\n            }\n        }\n        this.clamp();\n        if (mi) {\n            BigInteger.ZERO.subTo(this, this);\n        }\n    };\n    // BigInteger.prototype.clamp = bnpClamp;\n    // (protected) clamp off excess high words\n    BigInteger.prototype.clamp = function () {\n        var c = this.s & this.DM;\n        while (this.t > 0 && this[this.t - 1] == c) {\n            --this.t;\n        }\n    };\n    // BigInteger.prototype.dlShiftTo = bnpDLShiftTo;\n    // (protected) r = this << n*DB\n    BigInteger.prototype.dlShiftTo = function (n, r) {\n        var i;\n        for (i = this.t - 1; i >= 0; --i) {\n            r[i + n] = this[i];\n        }\n        for (i = n - 1; i >= 0; --i) {\n            r[i] = 0;\n        }\n        r.t = this.t + n;\n        r.s = this.s;\n    };\n    // BigInteger.prototype.drShiftTo = bnpDRShiftTo;\n    // (protected) r = this >> n*DB\n    BigInteger.prototype.drShiftTo = function (n, r) {\n        for (var i = n; i < this.t; ++i) {\n            r[i - n] = this[i];\n        }\n        r.t = Math.max(this.t - n, 0);\n        r.s = this.s;\n    };\n    // BigInteger.prototype.lShiftTo = bnpLShiftTo;\n    // (protected) r = this << n\n    BigInteger.prototype.lShiftTo = function (n, r) {\n        var bs = n % this.DB;\n        var cbs = this.DB - bs;\n        var bm = (1 << cbs) - 1;\n        var ds = Math.floor(n / this.DB);\n        var c = (this.s << bs) & this.DM;\n        for (var i = this.t - 1; i >= 0; --i) {\n            r[i + ds + 1] = (this[i] >> cbs) | c;\n            c = (this[i] & bm) << bs;\n        }\n        for (var i = ds - 1; i >= 0; --i) {\n            r[i] = 0;\n        }\n        r[ds] = c;\n        r.t = this.t + ds + 1;\n        r.s = this.s;\n        r.clamp();\n    };\n    // BigInteger.prototype.rShiftTo = bnpRShiftTo;\n    // (protected) r = this >> n\n    BigInteger.prototype.rShiftTo = function (n, r) {\n        r.s = this.s;\n        var ds = Math.floor(n / this.DB);\n        if (ds >= this.t) {\n            r.t = 0;\n            return;\n        }\n        var bs = n % this.DB;\n        var cbs = this.DB - bs;\n        var bm = (1 << bs) - 1;\n        r[0] = this[ds] >> bs;\n        for (var i = ds + 1; i < this.t; ++i) {\n            r[i - ds - 1] |= (this[i] & bm) << cbs;\n            r[i - ds] = this[i] >> bs;\n        }\n        if (bs > 0) {\n            r[this.t - ds - 1] |= (this.s & bm) << cbs;\n        }\n        r.t = this.t - ds;\n        r.clamp();\n    };\n    // BigInteger.prototype.subTo = bnpSubTo;\n    // (protected) r = this - a\n    BigInteger.prototype.subTo = function (a, r) {\n        var i = 0;\n        var c = 0;\n        var m = Math.min(a.t, this.t);\n        while (i < m) {\n            c += this[i] - a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        if (a.t < this.t) {\n            c -= a.s;\n            while (i < this.t) {\n                c += this[i];\n                r[i++] = c & this.DM;\n                c >>= this.DB;\n            }\n            c += this.s;\n        }\n        else {\n            c += this.s;\n            while (i < a.t) {\n                c -= a[i];\n                r[i++] = c & this.DM;\n                c >>= this.DB;\n            }\n            c -= a.s;\n        }\n        r.s = (c < 0) ? -1 : 0;\n        if (c < -1) {\n            r[i++] = this.DV + c;\n        }\n        else if (c > 0) {\n            r[i++] = c;\n        }\n        r.t = i;\n        r.clamp();\n    };\n    // BigInteger.prototype.multiplyTo = bnpMultiplyTo;\n    // (protected) r = this * a, r != this,a (HAC 14.12)\n    // \"this\" should be the larger one if appropriate.\n    BigInteger.prototype.multiplyTo = function (a, r) {\n        var x = this.abs();\n        var y = a.abs();\n        var i = x.t;\n        r.t = i + y.t;\n        while (--i >= 0) {\n            r[i] = 0;\n        }\n        for (i = 0; i < y.t; ++i) {\n            r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n        }\n        r.s = 0;\n        r.clamp();\n        if (this.s != a.s) {\n            BigInteger.ZERO.subTo(r, r);\n        }\n    };\n    // BigInteger.prototype.squareTo = bnpSquareTo;\n    // (protected) r = this^2, r != this (HAC 14.16)\n    BigInteger.prototype.squareTo = function (r) {\n        var x = this.abs();\n        var i = r.t = 2 * x.t;\n        while (--i >= 0) {\n            r[i] = 0;\n        }\n        for (i = 0; i < x.t - 1; ++i) {\n            var c = x.am(i, x[i], r, 2 * i, 0, 1);\n            if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n                r[i + x.t] -= x.DV;\n                r[i + x.t + 1] = 1;\n            }\n        }\n        if (r.t > 0) {\n            r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n        }\n        r.s = 0;\n        r.clamp();\n    };\n    // BigInteger.prototype.divRemTo = bnpDivRemTo;\n    // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n    // r != q, this != m.  q or r may be null.\n    BigInteger.prototype.divRemTo = function (m, q, r) {\n        var pm = m.abs();\n        if (pm.t <= 0) {\n            return;\n        }\n        var pt = this.abs();\n        if (pt.t < pm.t) {\n            if (q != null) {\n                q.fromInt(0);\n            }\n            if (r != null) {\n                this.copyTo(r);\n            }\n            return;\n        }\n        if (r == null) {\n            r = nbi();\n        }\n        var y = nbi();\n        var ts = this.s;\n        var ms = m.s;\n        var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus\n        if (nsh > 0) {\n            pm.lShiftTo(nsh, y);\n            pt.lShiftTo(nsh, r);\n        }\n        else {\n            pm.copyTo(y);\n            pt.copyTo(r);\n        }\n        var ys = y.t;\n        var y0 = y[ys - 1];\n        if (y0 == 0) {\n            return;\n        }\n        var yt = y0 * (1 << this.F1) + ((ys > 1) ? y[ys - 2] >> this.F2 : 0);\n        var d1 = this.FV / yt;\n        var d2 = (1 << this.F1) / yt;\n        var e = 1 << this.F2;\n        var i = r.t;\n        var j = i - ys;\n        var t = (q == null) ? nbi() : q;\n        y.dlShiftTo(j, t);\n        if (r.compareTo(t) >= 0) {\n            r[r.t++] = 1;\n            r.subTo(t, r);\n        }\n        BigInteger.ONE.dlShiftTo(ys, t);\n        t.subTo(y, y); // \"negative\" y so we can replace sub with am later\n        while (y.t < ys) {\n            y[y.t++] = 0;\n        }\n        while (--j >= 0) {\n            // Estimate quotient digit\n            var qd = (r[--i] == y0) ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n            if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) { // Try it out\n                y.dlShiftTo(j, t);\n                r.subTo(t, r);\n                while (r[i] < --qd) {\n                    r.subTo(t, r);\n                }\n            }\n        }\n        if (q != null) {\n            r.drShiftTo(ys, q);\n            if (ts != ms) {\n                BigInteger.ZERO.subTo(q, q);\n            }\n        }\n        r.t = ys;\n        r.clamp();\n        if (nsh > 0) {\n            r.rShiftTo(nsh, r);\n        } // Denormalize remainder\n        if (ts < 0) {\n            BigInteger.ZERO.subTo(r, r);\n        }\n    };\n    // BigInteger.prototype.invDigit = bnpInvDigit;\n    // (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n    // justification:\n    //         xy == 1 (mod m)\n    //         xy =  1+km\n    //   xy(2-xy) = (1+km)(1-km)\n    // x[y(2-xy)] = 1-k^2m^2\n    // x[y(2-xy)] == 1 (mod m^2)\n    // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n    // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n    // JS multiply \"overflows\" differently from C/C++, so care is needed here.\n    BigInteger.prototype.invDigit = function () {\n        if (this.t < 1) {\n            return 0;\n        }\n        var x = this[0];\n        if ((x & 1) == 0) {\n            return 0;\n        }\n        var y = x & 3; // y == 1/x mod 2^2\n        y = (y * (2 - (x & 0xf) * y)) & 0xf; // y == 1/x mod 2^4\n        y = (y * (2 - (x & 0xff) * y)) & 0xff; // y == 1/x mod 2^8\n        y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff; // y == 1/x mod 2^16\n        // last step - calculate inverse mod DV directly;\n        // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n        y = (y * (2 - x * y % this.DV)) % this.DV; // y == 1/x mod 2^dbits\n        // we really want the negative inverse, and -DV < y < DV\n        return (y > 0) ? this.DV - y : -y;\n    };\n    // BigInteger.prototype.isEven = bnpIsEven;\n    // (protected) true iff this is even\n    BigInteger.prototype.isEven = function () {\n        return ((this.t > 0) ? (this[0] & 1) : this.s) == 0;\n    };\n    // BigInteger.prototype.exp = bnpExp;\n    // (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\n    BigInteger.prototype.exp = function (e, z) {\n        if (e > 0xffffffff || e < 1) {\n            return BigInteger.ONE;\n        }\n        var r = nbi();\n        var r2 = nbi();\n        var g = z.convert(this);\n        var i = nbits(e) - 1;\n        g.copyTo(r);\n        while (--i >= 0) {\n            z.sqrTo(r, r2);\n            if ((e & (1 << i)) > 0) {\n                z.mulTo(r2, g, r);\n            }\n            else {\n                var t = r;\n                r = r2;\n                r2 = t;\n            }\n        }\n        return z.revert(r);\n    };\n    // BigInteger.prototype.chunkSize = bnpChunkSize;\n    // (protected) return x s.t. r^x < DV\n    BigInteger.prototype.chunkSize = function (r) {\n        return Math.floor(Math.LN2 * this.DB / Math.log(r));\n    };\n    // BigInteger.prototype.toRadix = bnpToRadix;\n    // (protected) convert to radix string\n    BigInteger.prototype.toRadix = function (b) {\n        if (b == null) {\n            b = 10;\n        }\n        if (this.signum() == 0 || b < 2 || b > 36) {\n            return \"0\";\n        }\n        var cs = this.chunkSize(b);\n        var a = Math.pow(b, cs);\n        var d = nbv(a);\n        var y = nbi();\n        var z = nbi();\n        var r = \"\";\n        this.divRemTo(d, y, z);\n        while (y.signum() > 0) {\n            r = (a + z.intValue()).toString(b).substr(1) + r;\n            y.divRemTo(d, y, z);\n        }\n        return z.intValue().toString(b) + r;\n    };\n    // BigInteger.prototype.fromRadix = bnpFromRadix;\n    // (protected) convert from radix string\n    BigInteger.prototype.fromRadix = function (s, b) {\n        this.fromInt(0);\n        if (b == null) {\n            b = 10;\n        }\n        var cs = this.chunkSize(b);\n        var d = Math.pow(b, cs);\n        var mi = false;\n        var j = 0;\n        var w = 0;\n        for (var i = 0; i < s.length; ++i) {\n            var x = intAt(s, i);\n            if (x < 0) {\n                if (s.charAt(i) == \"-\" && this.signum() == 0) {\n                    mi = true;\n                }\n                continue;\n            }\n            w = b * w + x;\n            if (++j >= cs) {\n                this.dMultiply(d);\n                this.dAddOffset(w, 0);\n                j = 0;\n                w = 0;\n            }\n        }\n        if (j > 0) {\n            this.dMultiply(Math.pow(b, j));\n            this.dAddOffset(w, 0);\n        }\n        if (mi) {\n            BigInteger.ZERO.subTo(this, this);\n        }\n    };\n    // BigInteger.prototype.fromNumber = bnpFromNumber;\n    // (protected) alternate constructor\n    BigInteger.prototype.fromNumber = function (a, b, c) {\n        if (\"number\" == typeof b) {\n            // new BigInteger(int,int,RNG)\n            if (a < 2) {\n                this.fromInt(1);\n            }\n            else {\n                this.fromNumber(a, c);\n                if (!this.testBit(a - 1)) {\n                    // force MSB set\n                    this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);\n                }\n                if (this.isEven()) {\n                    this.dAddOffset(1, 0);\n                } // force odd\n                while (!this.isProbablePrime(b)) {\n                    this.dAddOffset(2, 0);\n                    if (this.bitLength() > a) {\n                        this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);\n                    }\n                }\n            }\n        }\n        else {\n            // new BigInteger(int,RNG)\n            var x = [];\n            var t = a & 7;\n            x.length = (a >> 3) + 1;\n            b.nextBytes(x);\n            if (t > 0) {\n                x[0] &= ((1 << t) - 1);\n            }\n            else {\n                x[0] = 0;\n            }\n            this.fromString(x, 256);\n        }\n    };\n    // BigInteger.prototype.bitwiseTo = bnpBitwiseTo;\n    // (protected) r = this op a (bitwise)\n    BigInteger.prototype.bitwiseTo = function (a, op, r) {\n        var i;\n        var f;\n        var m = Math.min(a.t, this.t);\n        for (i = 0; i < m; ++i) {\n            r[i] = op(this[i], a[i]);\n        }\n        if (a.t < this.t) {\n            f = a.s & this.DM;\n            for (i = m; i < this.t; ++i) {\n                r[i] = op(this[i], f);\n            }\n            r.t = this.t;\n        }\n        else {\n            f = this.s & this.DM;\n            for (i = m; i < a.t; ++i) {\n                r[i] = op(f, a[i]);\n            }\n            r.t = a.t;\n        }\n        r.s = op(this.s, a.s);\n        r.clamp();\n    };\n    // BigInteger.prototype.changeBit = bnpChangeBit;\n    // (protected) this op (1<<n)\n    BigInteger.prototype.changeBit = function (n, op) {\n        var r = BigInteger.ONE.shiftLeft(n);\n        this.bitwiseTo(r, op, r);\n        return r;\n    };\n    // BigInteger.prototype.addTo = bnpAddTo;\n    // (protected) r = this + a\n    BigInteger.prototype.addTo = function (a, r) {\n        var i = 0;\n        var c = 0;\n        var m = Math.min(a.t, this.t);\n        while (i < m) {\n            c += this[i] + a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        if (a.t < this.t) {\n            c += a.s;\n            while (i < this.t) {\n                c += this[i];\n                r[i++] = c & this.DM;\n                c >>= this.DB;\n            }\n            c += this.s;\n        }\n        else {\n            c += this.s;\n            while (i < a.t) {\n                c += a[i];\n                r[i++] = c & this.DM;\n                c >>= this.DB;\n            }\n            c += a.s;\n        }\n        r.s = (c < 0) ? -1 : 0;\n        if (c > 0) {\n            r[i++] = c;\n        }\n        else if (c < -1) {\n            r[i++] = this.DV + c;\n        }\n        r.t = i;\n        r.clamp();\n    };\n    // BigInteger.prototype.dMultiply = bnpDMultiply;\n    // (protected) this *= n, this >= 0, 1 < n < DV\n    BigInteger.prototype.dMultiply = function (n) {\n        this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);\n        ++this.t;\n        this.clamp();\n    };\n    // BigInteger.prototype.dAddOffset = bnpDAddOffset;\n    // (protected) this += n << w words, this >= 0\n    BigInteger.prototype.dAddOffset = function (n, w) {\n        if (n == 0) {\n            return;\n        }\n        while (this.t <= w) {\n            this[this.t++] = 0;\n        }\n        this[w] += n;\n        while (this[w] >= this.DV) {\n            this[w] -= this.DV;\n            if (++w >= this.t) {\n                this[this.t++] = 0;\n            }\n            ++this[w];\n        }\n    };\n    // BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\n    // (protected) r = lower n words of \"this * a\", a.t <= n\n    // \"this\" should be the larger one if appropriate.\n    BigInteger.prototype.multiplyLowerTo = function (a, n, r) {\n        var i = Math.min(this.t + a.t, n);\n        r.s = 0; // assumes a,this >= 0\n        r.t = i;\n        while (i > 0) {\n            r[--i] = 0;\n        }\n        for (var j = r.t - this.t; i < j; ++i) {\n            r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);\n        }\n        for (var j = Math.min(a.t, n); i < j; ++i) {\n            this.am(0, a[i], r, i, 0, n - i);\n        }\n        r.clamp();\n    };\n    // BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\n    // (protected) r = \"this * a\" without lower n words, n > 0\n    // \"this\" should be the larger one if appropriate.\n    BigInteger.prototype.multiplyUpperTo = function (a, n, r) {\n        --n;\n        var i = r.t = this.t + a.t - n;\n        r.s = 0; // assumes a,this >= 0\n        while (--i >= 0) {\n            r[i] = 0;\n        }\n        for (i = Math.max(n - this.t, 0); i < a.t; ++i) {\n            r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);\n        }\n        r.clamp();\n        r.drShiftTo(1, r);\n    };\n    // BigInteger.prototype.modInt = bnpModInt;\n    // (protected) this % n, n < 2^26\n    BigInteger.prototype.modInt = function (n) {\n        if (n <= 0) {\n            return 0;\n        }\n        var d = this.DV % n;\n        var r = (this.s < 0) ? n - 1 : 0;\n        if (this.t > 0) {\n            if (d == 0) {\n                r = this[0] % n;\n            }\n            else {\n                for (var i = this.t - 1; i >= 0; --i) {\n                    r = (d * r + this[i]) % n;\n                }\n            }\n        }\n        return r;\n    };\n    // BigInteger.prototype.millerRabin = bnpMillerRabin;\n    // (protected) true if probably prime (HAC 4.24, Miller-Rabin)\n    BigInteger.prototype.millerRabin = function (t) {\n        var n1 = this.subtract(BigInteger.ONE);\n        var k = n1.getLowestSetBit();\n        if (k <= 0) {\n            return false;\n        }\n        var r = n1.shiftRight(k);\n        t = (t + 1) >> 1;\n        if (t > lowprimes.length) {\n            t = lowprimes.length;\n        }\n        var a = nbi();\n        for (var i = 0; i < t; ++i) {\n            // Pick bases at random, instead of starting at 2\n            a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);\n            var y = a.modPow(r, this);\n            if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n                var j = 1;\n                while (j++ < k && y.compareTo(n1) != 0) {\n                    y = y.modPowInt(2, this);\n                    if (y.compareTo(BigInteger.ONE) == 0) {\n                        return false;\n                    }\n                }\n                if (y.compareTo(n1) != 0) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    // BigInteger.prototype.square = bnSquare;\n    // (public) this^2\n    BigInteger.prototype.square = function () {\n        var r = nbi();\n        this.squareTo(r);\n        return r;\n    };\n    //#region ASYNC\n    // Public API method\n    BigInteger.prototype.gcda = function (a, callback) {\n        var x = (this.s < 0) ? this.negate() : this.clone();\n        var y = (a.s < 0) ? a.negate() : a.clone();\n        if (x.compareTo(y) < 0) {\n            var t = x;\n            x = y;\n            y = t;\n        }\n        var i = x.getLowestSetBit();\n        var g = y.getLowestSetBit();\n        if (g < 0) {\n            callback(x);\n            return;\n        }\n        if (i < g) {\n            g = i;\n        }\n        if (g > 0) {\n            x.rShiftTo(g, x);\n            y.rShiftTo(g, y);\n        }\n        // Workhorse of the algorithm, gets called 200 - 800 times per 512 bit keygen.\n        var gcda1 = function () {\n            if ((i = x.getLowestSetBit()) > 0) {\n                x.rShiftTo(i, x);\n            }\n            if ((i = y.getLowestSetBit()) > 0) {\n                y.rShiftTo(i, y);\n            }\n            if (x.compareTo(y) >= 0) {\n                x.subTo(y, x);\n                x.rShiftTo(1, x);\n            }\n            else {\n                y.subTo(x, y);\n                y.rShiftTo(1, y);\n            }\n            if (!(x.signum() > 0)) {\n                if (g > 0) {\n                    y.lShiftTo(g, y);\n                }\n                setTimeout(function () { callback(y); }, 0); // escape\n            }\n            else {\n                setTimeout(gcda1, 0);\n            }\n        };\n        setTimeout(gcda1, 10);\n    };\n    // (protected) alternate constructor\n    BigInteger.prototype.fromNumberAsync = function (a, b, c, callback) {\n        if (\"number\" == typeof b) {\n            if (a < 2) {\n                this.fromInt(1);\n            }\n            else {\n                this.fromNumber(a, c);\n                if (!this.testBit(a - 1)) {\n                    this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);\n                }\n                if (this.isEven()) {\n                    this.dAddOffset(1, 0);\n                }\n                var bnp_1 = this;\n                var bnpfn1_1 = function () {\n                    bnp_1.dAddOffset(2, 0);\n                    if (bnp_1.bitLength() > a) {\n                        bnp_1.subTo(BigInteger.ONE.shiftLeft(a - 1), bnp_1);\n                    }\n                    if (bnp_1.isProbablePrime(b)) {\n                        setTimeout(function () { callback(); }, 0); // escape\n                    }\n                    else {\n                        setTimeout(bnpfn1_1, 0);\n                    }\n                };\n                setTimeout(bnpfn1_1, 0);\n            }\n        }\n        else {\n            var x = [];\n            var t = a & 7;\n            x.length = (a >> 3) + 1;\n            b.nextBytes(x);\n            if (t > 0) {\n                x[0] &= ((1 << t) - 1);\n            }\n            else {\n                x[0] = 0;\n            }\n            this.fromString(x, 256);\n        }\n    };\n    return BigInteger;\n}());\nexport { BigInteger };\n//#region REDUCERS\n//#region NullExp\nvar NullExp = /** @class */ (function () {\n    function NullExp() {\n    }\n    // NullExp.prototype.convert = nNop;\n    NullExp.prototype.convert = function (x) {\n        return x;\n    };\n    // NullExp.prototype.revert = nNop;\n    NullExp.prototype.revert = function (x) {\n        return x;\n    };\n    // NullExp.prototype.mulTo = nMulTo;\n    NullExp.prototype.mulTo = function (x, y, r) {\n        x.multiplyTo(y, r);\n    };\n    // NullExp.prototype.sqrTo = nSqrTo;\n    NullExp.prototype.sqrTo = function (x, r) {\n        x.squareTo(r);\n    };\n    return NullExp;\n}());\n// Modular reduction using \"classic\" algorithm\nvar Classic = /** @class */ (function () {\n    function Classic(m) {\n        this.m = m;\n    }\n    // Classic.prototype.convert = cConvert;\n    Classic.prototype.convert = function (x) {\n        if (x.s < 0 || x.compareTo(this.m) >= 0) {\n            return x.mod(this.m);\n        }\n        else {\n            return x;\n        }\n    };\n    // Classic.prototype.revert = cRevert;\n    Classic.prototype.revert = function (x) {\n        return x;\n    };\n    // Classic.prototype.reduce = cReduce;\n    Classic.prototype.reduce = function (x) {\n        x.divRemTo(this.m, null, x);\n    };\n    // Classic.prototype.mulTo = cMulTo;\n    Classic.prototype.mulTo = function (x, y, r) {\n        x.multiplyTo(y, r);\n        this.reduce(r);\n    };\n    // Classic.prototype.sqrTo = cSqrTo;\n    Classic.prototype.sqrTo = function (x, r) {\n        x.squareTo(r);\n        this.reduce(r);\n    };\n    return Classic;\n}());\n//#endregion\n//#region Montgomery\n// Montgomery reduction\nvar Montgomery = /** @class */ (function () {\n    function Montgomery(m) {\n        this.m = m;\n        this.mp = m.invDigit();\n        this.mpl = this.mp & 0x7fff;\n        this.mph = this.mp >> 15;\n        this.um = (1 << (m.DB - 15)) - 1;\n        this.mt2 = 2 * m.t;\n    }\n    // Montgomery.prototype.convert = montConvert;\n    // xR mod m\n    Montgomery.prototype.convert = function (x) {\n        var r = nbi();\n        x.abs().dlShiftTo(this.m.t, r);\n        r.divRemTo(this.m, null, r);\n        if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {\n            this.m.subTo(r, r);\n        }\n        return r;\n    };\n    // Montgomery.prototype.revert = montRevert;\n    // x/R mod m\n    Montgomery.prototype.revert = function (x) {\n        var r = nbi();\n        x.copyTo(r);\n        this.reduce(r);\n        return r;\n    };\n    // Montgomery.prototype.reduce = montReduce;\n    // x = x/R mod m (HAC 14.32)\n    Montgomery.prototype.reduce = function (x) {\n        while (x.t <= this.mt2) {\n            // pad x so am has enough room later\n            x[x.t++] = 0;\n        }\n        for (var i = 0; i < this.m.t; ++i) {\n            // faster way of calculating u0 = x[i]*mp mod DV\n            var j = x[i] & 0x7fff;\n            var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & x.DM;\n            // use am to combine the multiply-shift-add into one call\n            j = i + this.m.t;\n            x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n            // propagate carry\n            while (x[j] >= x.DV) {\n                x[j] -= x.DV;\n                x[++j]++;\n            }\n        }\n        x.clamp();\n        x.drShiftTo(this.m.t, x);\n        if (x.compareTo(this.m) >= 0) {\n            x.subTo(this.m, x);\n        }\n    };\n    // Montgomery.prototype.mulTo = montMulTo;\n    // r = \"xy/R mod m\"; x,y != r\n    Montgomery.prototype.mulTo = function (x, y, r) {\n        x.multiplyTo(y, r);\n        this.reduce(r);\n    };\n    // Montgomery.prototype.sqrTo = montSqrTo;\n    // r = \"x^2/R mod m\"; x != r\n    Montgomery.prototype.sqrTo = function (x, r) {\n        x.squareTo(r);\n        this.reduce(r);\n    };\n    return Montgomery;\n}());\n//#endregion Montgomery\n//#region Barrett\n// Barrett modular reduction\nvar Barrett = /** @class */ (function () {\n    function Barrett(m) {\n        this.m = m;\n        // setup Barrett\n        this.r2 = nbi();\n        this.q3 = nbi();\n        BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);\n        this.mu = this.r2.divide(m);\n    }\n    // Barrett.prototype.convert = barrettConvert;\n    Barrett.prototype.convert = function (x) {\n        if (x.s < 0 || x.t > 2 * this.m.t) {\n            return x.mod(this.m);\n        }\n        else if (x.compareTo(this.m) < 0) {\n            return x;\n        }\n        else {\n            var r = nbi();\n            x.copyTo(r);\n            this.reduce(r);\n            return r;\n        }\n    };\n    // Barrett.prototype.revert = barrettRevert;\n    Barrett.prototype.revert = function (x) {\n        return x;\n    };\n    // Barrett.prototype.reduce = barrettReduce;\n    // x = x mod m (HAC 14.42)\n    Barrett.prototype.reduce = function (x) {\n        x.drShiftTo(this.m.t - 1, this.r2);\n        if (x.t > this.m.t + 1) {\n            x.t = this.m.t + 1;\n            x.clamp();\n        }\n        this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);\n        this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);\n        while (x.compareTo(this.r2) < 0) {\n            x.dAddOffset(1, this.m.t + 1);\n        }\n        x.subTo(this.r2, x);\n        while (x.compareTo(this.m) >= 0) {\n            x.subTo(this.m, x);\n        }\n    };\n    // Barrett.prototype.mulTo = barrettMulTo;\n    // r = x*y mod m; x,y != r\n    Barrett.prototype.mulTo = function (x, y, r) {\n        x.multiplyTo(y, r);\n        this.reduce(r);\n    };\n    // Barrett.prototype.sqrTo = barrettSqrTo;\n    // r = x^2 mod m; x != r\n    Barrett.prototype.sqrTo = function (x, r) {\n        x.squareTo(r);\n        this.reduce(r);\n    };\n    return Barrett;\n}());\n//#endregion\n//#endregion REDUCERS\n// return new, unset BigInteger\nexport function nbi() { return new BigInteger(null); }\nexport function parseBigInt(str, r) {\n    return new BigInteger(str, r);\n}\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\nvar inBrowser = typeof navigator !== \"undefined\";\nif (inBrowser && j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n    // am2 avoids a big mult-and-extract completely.\n    // Max digit bits should be <= 30 because we do bitwise ops\n    // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n    BigInteger.prototype.am = function am2(i, x, w, j, c, n) {\n        var xl = x & 0x7fff;\n        var xh = x >> 15;\n        while (--n >= 0) {\n            var l = this[i] & 0x7fff;\n            var h = this[i++] >> 15;\n            var m = xh * l + h * xl;\n            l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n            c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n            w[j++] = l & 0x3fffffff;\n        }\n        return c;\n    };\n    dbits = 30;\n}\nelse if (inBrowser && j_lm && (navigator.appName != \"Netscape\")) {\n    // am1: use a single mult and divide to get the high bits,\n    // max digit bits should be 26 because\n    // max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n    BigInteger.prototype.am = function am1(i, x, w, j, c, n) {\n        while (--n >= 0) {\n            var v = x * this[i++] + w[j] + c;\n            c = Math.floor(v / 0x4000000);\n            w[j++] = v & 0x3ffffff;\n        }\n        return c;\n    };\n    dbits = 26;\n}\nelse { // Mozilla/Netscape seems to prefer am3\n    // Alternately, set max digit bits to 28 since some\n    // browsers slow down when dealing with 32-bit numbers.\n    BigInteger.prototype.am = function am3(i, x, w, j, c, n) {\n        var xl = x & 0x3fff;\n        var xh = x >> 14;\n        while (--n >= 0) {\n            var l = this[i] & 0x3fff;\n            var h = this[i++] >> 14;\n            var m = xh * l + h * xl;\n            l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n            c = (l >> 28) + (m >> 14) + xh * h;\n            w[j++] = l & 0xfffffff;\n        }\n        return c;\n    };\n    dbits = 28;\n}\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1 << dbits) - 1);\nBigInteger.prototype.DV = (1 << dbits);\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n// Digit conversions\nvar BI_RC = [];\nvar rr;\nvar vv;\nrr = \"0\".charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv) {\n    BI_RC[rr++] = vv;\n}\nrr = \"a\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) {\n    BI_RC[rr++] = vv;\n}\nrr = \"A\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) {\n    BI_RC[rr++] = vv;\n}\nexport function intAt(s, i) {\n    var c = BI_RC[s.charCodeAt(i)];\n    return (c == null) ? -1 : c;\n}\n// return bigint initialized to value\nexport function nbv(i) {\n    var r = nbi();\n    r.fromInt(i);\n    return r;\n}\n// returns bit length of the integer x\nexport function nbits(x) {\n    var r = 1;\n    var t;\n    if ((t = x >>> 16) != 0) {\n        x = t;\n        r += 16;\n    }\n    if ((t = x >> 8) != 0) {\n        x = t;\n        r += 8;\n    }\n    if ((t = x >> 4) != 0) {\n        x = t;\n        r += 4;\n    }\n    if ((t = x >> 2) != 0) {\n        x = t;\n        r += 2;\n    }\n    if ((t = x >> 1) != 0) {\n        x = t;\n        r += 1;\n    }\n    return r;\n}\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n","// prng4.js - uses Arcfour as a PRNG\nvar Arcfour = /** @class */ (function () {\n    function Arcfour() {\n        this.i = 0;\n        this.j = 0;\n        this.S = [];\n    }\n    // Arcfour.prototype.init = ARC4init;\n    // Initialize arcfour context from key, an array of ints, each from [0..255]\n    Arcfour.prototype.init = function (key) {\n        var i;\n        var j;\n        var t;\n        for (i = 0; i < 256; ++i) {\n            this.S[i] = i;\n        }\n        j = 0;\n        for (i = 0; i < 256; ++i) {\n            j = (j + this.S[i] + key[i % key.length]) & 255;\n            t = this.S[i];\n            this.S[i] = this.S[j];\n            this.S[j] = t;\n        }\n        this.i = 0;\n        this.j = 0;\n    };\n    // Arcfour.prototype.next = ARC4next;\n    Arcfour.prototype.next = function () {\n        var t;\n        this.i = (this.i + 1) & 255;\n        this.j = (this.j + this.S[this.i]) & 255;\n        t = this.S[this.i];\n        this.S[this.i] = this.S[this.j];\n        this.S[this.j] = t;\n        return this.S[(t + this.S[this.i]) & 255];\n    };\n    return Arcfour;\n}());\nexport { Arcfour };\n// Plug in your RNG constructor here\nexport function prng_newstate() {\n    return new Arcfour();\n}\n// Pool size must be a multiple of 4 and greater than 32.\n// An array of bytes the size of the pool will be passed to init()\nexport var rng_psize = 256;\n","// Random number generator - requires a PRNG backend, e.g. prng4.js\nimport { prng_newstate, rng_psize } from \"./prng4\";\nvar rng_state;\nvar rng_pool = null;\nvar rng_pptr;\n// Initialize the pool with junk if needed.\nif (rng_pool == null) {\n    rng_pool = [];\n    rng_pptr = 0;\n    var t = void 0;\n    if (typeof window !== 'undefined' && window.crypto && window.crypto.getRandomValues) {\n        // Extract entropy (2048 bits) from RNG if available\n        var z = new Uint32Array(256);\n        window.crypto.getRandomValues(z);\n        for (t = 0; t < z.length; ++t) {\n            rng_pool[rng_pptr++] = z[t] & 255;\n        }\n    }\n    // Use mouse events for entropy, if we do not have enough entropy by the time\n    // we need it, entropy will be generated by Math.random.\n    var count = 0;\n    var onMouseMoveListener_1 = function (ev) {\n        count = count || 0;\n        if (count >= 256 || rng_pptr >= rng_psize) {\n            if (window.removeEventListener) {\n                window.removeEventListener(\"mousemove\", onMouseMoveListener_1, false);\n            }\n            else if (window.detachEvent) {\n                window.detachEvent(\"onmousemove\", onMouseMoveListener_1);\n            }\n            return;\n        }\n        try {\n            var mouseCoordinates = ev.x + ev.y;\n            rng_pool[rng_pptr++] = mouseCoordinates & 255;\n            count += 1;\n        }\n        catch (e) {\n            // Sometimes Firefox will deny permission to access event properties for some reason. Ignore.\n        }\n    };\n    if (typeof window !== 'undefined') {\n        if (window.addEventListener) {\n            window.addEventListener(\"mousemove\", onMouseMoveListener_1, false);\n        }\n        else if (window.attachEvent) {\n            window.attachEvent(\"onmousemove\", onMouseMoveListener_1);\n        }\n    }\n}\nfunction rng_get_byte() {\n    if (rng_state == null) {\n        rng_state = prng_newstate();\n        // At this point, we may not have collected enough entropy.  If not, fall back to Math.random\n        while (rng_pptr < rng_psize) {\n            var random = Math.floor(65536 * Math.random());\n            rng_pool[rng_pptr++] = random & 255;\n        }\n        rng_state.init(rng_pool);\n        for (rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr) {\n            rng_pool[rng_pptr] = 0;\n        }\n        rng_pptr = 0;\n    }\n    // TODO: allow reseeding after first request\n    return rng_state.next();\n}\nvar SecureRandom = /** @class */ (function () {\n    function SecureRandom() {\n    }\n    SecureRandom.prototype.nextBytes = function (ba) {\n        for (var i = 0; i < ba.length; ++i) {\n            ba[i] = rng_get_byte();\n        }\n    };\n    return SecureRandom;\n}());\nexport { SecureRandom };\n","// Depends on jsbn.js and rng.js\n// Version 1.1: support utf-8 encoding in pkcs1pad2\n// convert a (hex) string to a bignum object\nimport { BigInteger, nbi, parseBigInt } from \"./jsbn\";\nimport { SecureRandom } from \"./rng\";\n// function linebrk(s,n) {\n//   var ret = \"\";\n//   var i = 0;\n//   while(i + n < s.length) {\n//     ret += s.substring(i,i+n) + \"\\n\";\n//     i += n;\n//   }\n//   return ret + s.substring(i,s.length);\n// }\n// function byte2Hex(b) {\n//   if(b < 0x10)\n//     return \"0\" + b.toString(16);\n//   else\n//     return b.toString(16);\n// }\nfunction pkcs1pad1(s, n) {\n    if (n < s.length + 22) {\n        console.error(\"Message too long for RSA\");\n        return null;\n    }\n    var len = n - s.length - 6;\n    var filler = \"\";\n    for (var f = 0; f < len; f += 2) {\n        filler += \"ff\";\n    }\n    var m = \"0001\" + filler + \"00\" + s;\n    return parseBigInt(m, 16);\n}\n// PKCS#1 (type 2, random) pad input string s to n bytes, and return a bigint\nfunction pkcs1pad2(s, n) {\n    if (n < s.length + 11) { // TODO: fix for utf-8\n        console.error(\"Message too long for RSA\");\n        return null;\n    }\n    var ba = [];\n    var i = s.length - 1;\n    while (i >= 0 && n > 0) {\n        var c = s.charCodeAt(i--);\n        if (c < 128) { // encode using utf-8\n            ba[--n] = c;\n        }\n        else if ((c > 127) && (c < 2048)) {\n            ba[--n] = (c & 63) | 128;\n            ba[--n] = (c >> 6) | 192;\n        }\n        else {\n            ba[--n] = (c & 63) | 128;\n            ba[--n] = ((c >> 6) & 63) | 128;\n            ba[--n] = (c >> 12) | 224;\n        }\n    }\n    ba[--n] = 0;\n    var rng = new SecureRandom();\n    var x = [];\n    while (n > 2) { // random non-zero pad\n        x[0] = 0;\n        while (x[0] == 0) {\n            rng.nextBytes(x);\n        }\n        ba[--n] = x[0];\n    }\n    ba[--n] = 2;\n    ba[--n] = 0;\n    return new BigInteger(ba);\n}\n// \"empty\" RSA key constructor\nvar RSAKey = /** @class */ (function () {\n    function RSAKey() {\n        this.n = null;\n        this.e = 0;\n        this.d = null;\n        this.p = null;\n        this.q = null;\n        this.dmp1 = null;\n        this.dmq1 = null;\n        this.coeff = null;\n    }\n    //#region PROTECTED\n    // protected\n    // RSAKey.prototype.doPublic = RSADoPublic;\n    // Perform raw public operation on \"x\": return x^e (mod n)\n    RSAKey.prototype.doPublic = function (x) {\n        return x.modPowInt(this.e, this.n);\n    };\n    // RSAKey.prototype.doPrivate = RSADoPrivate;\n    // Perform raw private operation on \"x\": return x^d (mod n)\n    RSAKey.prototype.doPrivate = function (x) {\n        if (this.p == null || this.q == null) {\n            return x.modPow(this.d, this.n);\n        }\n        // TODO: re-calculate any missing CRT params\n        var xp = x.mod(this.p).modPow(this.dmp1, this.p);\n        var xq = x.mod(this.q).modPow(this.dmq1, this.q);\n        while (xp.compareTo(xq) < 0) {\n            xp = xp.add(this.p);\n        }\n        return xp.subtract(xq).multiply(this.coeff).mod(this.p).multiply(this.q).add(xq);\n    };\n    //#endregion PROTECTED\n    //#region PUBLIC\n    // RSAKey.prototype.setPublic = RSASetPublic;\n    // Set the public key fields N and e from hex strings\n    RSAKey.prototype.setPublic = function (N, E) {\n        if (N != null && E != null && N.length > 0 && E.length > 0) {\n            this.n = parseBigInt(N, 16);\n            this.e = parseInt(E, 16);\n        }\n        else {\n            console.error(\"Invalid RSA public key\");\n        }\n    };\n    // RSAKey.prototype.encrypt = RSAEncrypt;\n    // Return the PKCS#1 RSA encryption of \"text\" as an even-length hex string\n    RSAKey.prototype.encrypt = function (text) {\n        var maxLength = (this.n.bitLength() + 7) >> 3;\n        var m = pkcs1pad2(text, maxLength);\n        if (m == null) {\n            return null;\n        }\n        var c = this.doPublic(m);\n        if (c == null) {\n            return null;\n        }\n        var h = c.toString(16);\n        var length = h.length;\n        // fix zero before result\n        for (var i = 0; i < maxLength * 2 - length; i++) {\n            h = \"0\" + h;\n        }\n        return h;\n    };\n    // RSAKey.prototype.setPrivate = RSASetPrivate;\n    // Set the private key fields N, e, and d from hex strings\n    RSAKey.prototype.setPrivate = function (N, E, D) {\n        if (N != null && E != null && N.length > 0 && E.length > 0) {\n            this.n = parseBigInt(N, 16);\n            this.e = parseInt(E, 16);\n            this.d = parseBigInt(D, 16);\n        }\n        else {\n            console.error(\"Invalid RSA private key\");\n        }\n    };\n    // RSAKey.prototype.setPrivateEx = RSASetPrivateEx;\n    // Set the private key fields N, e, d and CRT params from hex strings\n    RSAKey.prototype.setPrivateEx = function (N, E, D, P, Q, DP, DQ, C) {\n        if (N != null && E != null && N.length > 0 && E.length > 0) {\n            this.n = parseBigInt(N, 16);\n            this.e = parseInt(E, 16);\n            this.d = parseBigInt(D, 16);\n            this.p = parseBigInt(P, 16);\n            this.q = parseBigInt(Q, 16);\n            this.dmp1 = parseBigInt(DP, 16);\n            this.dmq1 = parseBigInt(DQ, 16);\n            this.coeff = parseBigInt(C, 16);\n        }\n        else {\n            console.error(\"Invalid RSA private key\");\n        }\n    };\n    // RSAKey.prototype.generate = RSAGenerate;\n    // Generate a new random private key B bits long, using public expt E\n    RSAKey.prototype.generate = function (B, E) {\n        var rng = new SecureRandom();\n        var qs = B >> 1;\n        this.e = parseInt(E, 16);\n        var ee = new BigInteger(E, 16);\n        for (;;) {\n            for (;;) {\n                this.p = new BigInteger(B - qs, 1, rng);\n                if (this.p.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.p.isProbablePrime(10)) {\n                    break;\n                }\n            }\n            for (;;) {\n                this.q = new BigInteger(qs, 1, rng);\n                if (this.q.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.q.isProbablePrime(10)) {\n                    break;\n                }\n            }\n            if (this.p.compareTo(this.q) <= 0) {\n                var t = this.p;\n                this.p = this.q;\n                this.q = t;\n            }\n            var p1 = this.p.subtract(BigInteger.ONE);\n            var q1 = this.q.subtract(BigInteger.ONE);\n            var phi = p1.multiply(q1);\n            if (phi.gcd(ee).compareTo(BigInteger.ONE) == 0) {\n                this.n = this.p.multiply(this.q);\n                this.d = ee.modInverse(phi);\n                this.dmp1 = this.d.mod(p1);\n                this.dmq1 = this.d.mod(q1);\n                this.coeff = this.q.modInverse(this.p);\n                break;\n            }\n        }\n    };\n    // RSAKey.prototype.decrypt = RSADecrypt;\n    // Return the PKCS#1 RSA decryption of \"ctext\".\n    // \"ctext\" is an even-length hex string and the output is a plain string.\n    RSAKey.prototype.decrypt = function (ctext) {\n        var c = parseBigInt(ctext, 16);\n        var m = this.doPrivate(c);\n        if (m == null) {\n            return null;\n        }\n        return pkcs1unpad2(m, (this.n.bitLength() + 7) >> 3);\n    };\n    // Generate a new random private key B bits long, using public expt E\n    RSAKey.prototype.generateAsync = function (B, E, callback) {\n        var rng = new SecureRandom();\n        var qs = B >> 1;\n        this.e = parseInt(E, 16);\n        var ee = new BigInteger(E, 16);\n        var rsa = this;\n        // These functions have non-descript names because they were originally for(;;) loops.\n        // I don't know about cryptography to give them better names than loop1-4.\n        var loop1 = function () {\n            var loop4 = function () {\n                if (rsa.p.compareTo(rsa.q) <= 0) {\n                    var t = rsa.p;\n                    rsa.p = rsa.q;\n                    rsa.q = t;\n                }\n                var p1 = rsa.p.subtract(BigInteger.ONE);\n                var q1 = rsa.q.subtract(BigInteger.ONE);\n                var phi = p1.multiply(q1);\n                if (phi.gcd(ee).compareTo(BigInteger.ONE) == 0) {\n                    rsa.n = rsa.p.multiply(rsa.q);\n                    rsa.d = ee.modInverse(phi);\n                    rsa.dmp1 = rsa.d.mod(p1);\n                    rsa.dmq1 = rsa.d.mod(q1);\n                    rsa.coeff = rsa.q.modInverse(rsa.p);\n                    setTimeout(function () { callback(); }, 0); // escape\n                }\n                else {\n                    setTimeout(loop1, 0);\n                }\n            };\n            var loop3 = function () {\n                rsa.q = nbi();\n                rsa.q.fromNumberAsync(qs, 1, rng, function () {\n                    rsa.q.subtract(BigInteger.ONE).gcda(ee, function (r) {\n                        if (r.compareTo(BigInteger.ONE) == 0 && rsa.q.isProbablePrime(10)) {\n                            setTimeout(loop4, 0);\n                        }\n                        else {\n                            setTimeout(loop3, 0);\n                        }\n                    });\n                });\n            };\n            var loop2 = function () {\n                rsa.p = nbi();\n                rsa.p.fromNumberAsync(B - qs, 1, rng, function () {\n                    rsa.p.subtract(BigInteger.ONE).gcda(ee, function (r) {\n                        if (r.compareTo(BigInteger.ONE) == 0 && rsa.p.isProbablePrime(10)) {\n                            setTimeout(loop3, 0);\n                        }\n                        else {\n                            setTimeout(loop2, 0);\n                        }\n                    });\n                });\n            };\n            setTimeout(loop2, 0);\n        };\n        setTimeout(loop1, 0);\n    };\n    RSAKey.prototype.sign = function (text, digestMethod, digestName) {\n        var header = getDigestHeader(digestName);\n        var digest = header + digestMethod(text).toString();\n        var m = pkcs1pad1(digest, this.n.bitLength() / 4);\n        if (m == null) {\n            return null;\n        }\n        var c = this.doPrivate(m);\n        if (c == null) {\n            return null;\n        }\n        var h = c.toString(16);\n        if ((h.length & 1) == 0) {\n            return h;\n        }\n        else {\n            return \"0\" + h;\n        }\n    };\n    RSAKey.prototype.verify = function (text, signature, digestMethod) {\n        var c = parseBigInt(signature, 16);\n        var m = this.doPublic(c);\n        if (m == null) {\n            return null;\n        }\n        var unpadded = m.toString(16).replace(/^1f+00/, \"\");\n        var digest = removeDigestHeader(unpadded);\n        return digest == digestMethod(text).toString();\n    };\n    return RSAKey;\n}());\nexport { RSAKey };\n// Undo PKCS#1 (type 2, random) padding and, if valid, return the plaintext\nfunction pkcs1unpad2(d, n) {\n    var b = d.toByteArray();\n    var i = 0;\n    while (i < b.length && b[i] == 0) {\n        ++i;\n    }\n    if (b.length - i != n - 1 || b[i] != 2) {\n        return null;\n    }\n    ++i;\n    while (b[i] != 0) {\n        if (++i >= b.length) {\n            return null;\n        }\n    }\n    var ret = \"\";\n    while (++i < b.length) {\n        var c = b[i] & 255;\n        if (c < 128) { // utf-8 decode\n            ret += String.fromCharCode(c);\n        }\n        else if ((c > 191) && (c < 224)) {\n            ret += String.fromCharCode(((c & 31) << 6) | (b[i + 1] & 63));\n            ++i;\n        }\n        else {\n            ret += String.fromCharCode(((c & 15) << 12) | ((b[i + 1] & 63) << 6) | (b[i + 2] & 63));\n            i += 2;\n        }\n    }\n    return ret;\n}\n// https://tools.ietf.org/html/rfc3447#page-43\nvar DIGEST_HEADERS = {\n    md2: \"3020300c06082a864886f70d020205000410\",\n    md5: \"3020300c06082a864886f70d020505000410\",\n    sha1: \"3021300906052b0e03021a05000414\",\n    sha224: \"302d300d06096086480165030402040500041c\",\n    sha256: \"3031300d060960864801650304020105000420\",\n    sha384: \"3041300d060960864801650304020205000430\",\n    sha512: \"3051300d060960864801650304020305000440\",\n    ripemd160: \"3021300906052b2403020105000414\"\n};\nfunction getDigestHeader(name) {\n    return DIGEST_HEADERS[name] || \"\";\n}\nfunction removeDigestHeader(str) {\n    for (var name_1 in DIGEST_HEADERS) {\n        if (DIGEST_HEADERS.hasOwnProperty(name_1)) {\n            var header = DIGEST_HEADERS[name_1];\n            var len = header.length;\n            if (str.substr(0, len) == header) {\n                return str.substr(len);\n            }\n        }\n    }\n    return str;\n}\n// Return the PKCS#1 RSA encryption of \"text\" as a Base64-encoded string\n// function RSAEncryptB64(text) {\n//  var h = this.encrypt(text);\n//  if(h) return hex2b64(h); else return null;\n// }\n// public\n// RSAKey.prototype.encrypt_b64 = RSAEncryptB64;\n","/*!\nCopyright (c) 2011, Yahoo! Inc. All rights reserved.\nCode licensed under the BSD License:\nhttp://developer.yahoo.com/yui/license.html\nversion: 2.9.0\n*/\nexport var YAHOO = {};\nYAHOO.lang = {\n    /**\n     * Utility to set up the prototype, constructor and superclass properties to\n     * support an inheritance strategy that can chain constructors and methods.\n     * Static members will not be inherited.\n     *\n     * @method extend\n     * @static\n     * @param {Function} subc   the object to modify\n     * @param {Function} superc the object to inherit\n     * @param {Object} overrides  additional properties/methods to add to the\n     *                              subclass prototype.  These will override the\n     *                              matching items obtained from the superclass\n     *                              if present.\n     */\n    extend: function (subc, superc, overrides) {\n        if (!superc || !subc) {\n            throw new Error(\"YAHOO.lang.extend failed, please check that \" +\n                \"all dependencies are included.\");\n        }\n        var F = function () { };\n        F.prototype = superc.prototype;\n        subc.prototype = new F();\n        subc.prototype.constructor = subc;\n        subc.superclass = superc.prototype;\n        if (superc.prototype.constructor == Object.prototype.constructor) {\n            superc.prototype.constructor = superc;\n        }\n        if (overrides) {\n            var i;\n            for (i in overrides) {\n                subc.prototype[i] = overrides[i];\n            }\n            /*\n             * IE will not enumerate native functions in a derived object even if the\n             * function was overridden.  This is a workaround for specific functions\n             * we care about on the Object prototype.\n             * @property _IEEnumFix\n             * @param {Function} r  the object to receive the augmentation\n             * @param {Function} s  the object that supplies the properties to augment\n             * @static\n             * @private\n             */\n            var _IEEnumFix = function () { }, ADD = [\"toString\", \"valueOf\"];\n            try {\n                if (/MSIE/.test(navigator.userAgent)) {\n                    _IEEnumFix = function (r, s) {\n                        for (i = 0; i < ADD.length; i = i + 1) {\n                            var fname = ADD[i], f = s[fname];\n                            if (typeof f === 'function' && f != Object.prototype[fname]) {\n                                r[fname] = f;\n                            }\n                        }\n                    };\n                }\n            }\n            catch (ex) { }\n            ;\n            _IEEnumFix(subc.prototype, overrides);\n        }\n    }\n};\n","/* asn1-1.0.13.js (c) 2013-2017 Kenji Urushima | kjur.github.com/jsrsasign/license\n */\n/*\n * asn1.js - ASN.1 DER encoder classes\n *\n * Copyright (c) 2013-2017 Kenji Urushima (kenji.urushima@gmail.com)\n *\n * This software is licensed under the terms of the MIT License.\n * https://kjur.github.io/jsrsasign/license\n *\n * The above copyright and license notice shall be\n * included in all copies or substantial portions of the Software.\n */\nimport { BigInteger } from \"../jsbn/jsbn\";\nimport { YAHOO } from \"./yahoo\";\n/**\n * @fileOverview\n * @name asn1-1.0.js\n * @author Kenji Urushima kenji.urushima@gmail.com\n * @version asn1 1.0.13 (2017-Jun-02)\n * @since jsrsasign 2.1\n * @license <a href=\"https://kjur.github.io/jsrsasign/license/\">MIT License</a>\n */\n/**\n * kjur's class library name space\n * <p>\n * This name space provides following name spaces:\n * <ul>\n * <li>{@link KJUR.asn1} - ASN.1 primitive hexadecimal encoder</li>\n * <li>{@link KJUR.asn1.x509} - ASN.1 structure for X.509 certificate and CRL</li>\n * <li>{@link KJUR.crypto} - Java Cryptographic Extension(JCE) style MessageDigest/Signature\n * class and utilities</li>\n * </ul>\n * </p>\n * NOTE: Please ignore method summary and document of this namespace. This caused by a bug of jsdoc2.\n * @name KJUR\n * @namespace kjur's class library name space\n */\nexport var KJUR = {};\n/**\n * kjur's ASN.1 class library name space\n * <p>\n * This is ITU-T X.690 ASN.1 DER encoder class library and\n * class structure and methods is very similar to\n * org.bouncycastle.asn1 package of\n * well known BouncyCaslte Cryptography Library.\n * <h4>PROVIDING ASN.1 PRIMITIVES</h4>\n * Here are ASN.1 DER primitive classes.\n * <ul>\n * <li>0x01 {@link KJUR.asn1.DERBoolean}</li>\n * <li>0x02 {@link KJUR.asn1.DERInteger}</li>\n * <li>0x03 {@link KJUR.asn1.DERBitString}</li>\n * <li>0x04 {@link KJUR.asn1.DEROctetString}</li>\n * <li>0x05 {@link KJUR.asn1.DERNull}</li>\n * <li>0x06 {@link KJUR.asn1.DERObjectIdentifier}</li>\n * <li>0x0a {@link KJUR.asn1.DEREnumerated}</li>\n * <li>0x0c {@link KJUR.asn1.DERUTF8String}</li>\n * <li>0x12 {@link KJUR.asn1.DERNumericString}</li>\n * <li>0x13 {@link KJUR.asn1.DERPrintableString}</li>\n * <li>0x14 {@link KJUR.asn1.DERTeletexString}</li>\n * <li>0x16 {@link KJUR.asn1.DERIA5String}</li>\n * <li>0x17 {@link KJUR.asn1.DERUTCTime}</li>\n * <li>0x18 {@link KJUR.asn1.DERGeneralizedTime}</li>\n * <li>0x30 {@link KJUR.asn1.DERSequence}</li>\n * <li>0x31 {@link KJUR.asn1.DERSet}</li>\n * </ul>\n * <h4>OTHER ASN.1 CLASSES</h4>\n * <ul>\n * <li>{@link KJUR.asn1.ASN1Object}</li>\n * <li>{@link KJUR.asn1.DERAbstractString}</li>\n * <li>{@link KJUR.asn1.DERAbstractTime}</li>\n * <li>{@link KJUR.asn1.DERAbstractStructured}</li>\n * <li>{@link KJUR.asn1.DERTaggedObject}</li>\n * </ul>\n * <h4>SUB NAME SPACES</h4>\n * <ul>\n * <li>{@link KJUR.asn1.cades} - CAdES long term signature format</li>\n * <li>{@link KJUR.asn1.cms} - Cryptographic Message Syntax</li>\n * <li>{@link KJUR.asn1.csr} - Certificate Signing Request (CSR/PKCS#10)</li>\n * <li>{@link KJUR.asn1.tsp} - RFC 3161 Timestamping Protocol Format</li>\n * <li>{@link KJUR.asn1.x509} - RFC 5280 X.509 certificate and CRL</li>\n * </ul>\n * </p>\n * NOTE: Please ignore method summary and document of this namespace.\n * This caused by a bug of jsdoc2.\n * @name KJUR.asn1\n * @namespace\n */\nif (typeof KJUR.asn1 == \"undefined\" || !KJUR.asn1)\n    KJUR.asn1 = {};\n/**\n * ASN1 utilities class\n * @name KJUR.asn1.ASN1Util\n * @class ASN1 utilities class\n * @since asn1 1.0.2\n */\nKJUR.asn1.ASN1Util = new function () {\n    this.integerToByteHex = function (i) {\n        var h = i.toString(16);\n        if ((h.length % 2) == 1)\n            h = '0' + h;\n        return h;\n    };\n    this.bigIntToMinTwosComplementsHex = function (bigIntegerValue) {\n        var h = bigIntegerValue.toString(16);\n        if (h.substr(0, 1) != '-') {\n            if (h.length % 2 == 1) {\n                h = '0' + h;\n            }\n            else {\n                if (!h.match(/^[0-7]/)) {\n                    h = '00' + h;\n                }\n            }\n        }\n        else {\n            var hPos = h.substr(1);\n            var xorLen = hPos.length;\n            if (xorLen % 2 == 1) {\n                xorLen += 1;\n            }\n            else {\n                if (!h.match(/^[0-7]/)) {\n                    xorLen += 2;\n                }\n            }\n            var hMask = '';\n            for (var i = 0; i < xorLen; i++) {\n                hMask += 'f';\n            }\n            var biMask = new BigInteger(hMask, 16);\n            var biNeg = biMask.xor(bigIntegerValue).add(BigInteger.ONE);\n            h = biNeg.toString(16).replace(/^-/, '');\n        }\n        return h;\n    };\n    /**\n     * get PEM string from hexadecimal data and header string\n     * @name getPEMStringFromHex\n     * @memberOf KJUR.asn1.ASN1Util\n     * @function\n     * @param {String} dataHex hexadecimal string of PEM body\n     * @param {String} pemHeader PEM header string (ex. 'RSA PRIVATE KEY')\n     * @return {String} PEM formatted string of input data\n     * @description\n     * This method converts a hexadecimal string to a PEM string with\n     * a specified header. Its line break will be CRLF(\"\\r\\n\").\n     * @example\n     * var pem  = KJUR.asn1.ASN1Util.getPEMStringFromHex('616161', 'RSA PRIVATE KEY');\n     * // value of pem will be:\n     * -----BEGIN PRIVATE KEY-----\n     * YWFh\n     * -----END PRIVATE KEY-----\n     */\n    this.getPEMStringFromHex = function (dataHex, pemHeader) {\n        return hextopem(dataHex, pemHeader);\n    };\n    /**\n     * generate ASN1Object specifed by JSON parameters\n     * @name newObject\n     * @memberOf KJUR.asn1.ASN1Util\n     * @function\n     * @param {Array} param JSON parameter to generate ASN1Object\n     * @return {KJUR.asn1.ASN1Object} generated object\n     * @since asn1 1.0.3\n     * @description\n     * generate any ASN1Object specified by JSON param\n     * including ASN.1 primitive or structured.\n     * Generally 'param' can be described as follows:\n     * <blockquote>\n     * {TYPE-OF-ASNOBJ: ASN1OBJ-PARAMETER}\n     * </blockquote>\n     * 'TYPE-OF-ASN1OBJ' can be one of following symbols:\n     * <ul>\n     * <li>'bool' - DERBoolean</li>\n     * <li>'int' - DERInteger</li>\n     * <li>'bitstr' - DERBitString</li>\n     * <li>'octstr' - DEROctetString</li>\n     * <li>'null' - DERNull</li>\n     * <li>'oid' - DERObjectIdentifier</li>\n     * <li>'enum' - DEREnumerated</li>\n     * <li>'utf8str' - DERUTF8String</li>\n     * <li>'numstr' - DERNumericString</li>\n     * <li>'prnstr' - DERPrintableString</li>\n     * <li>'telstr' - DERTeletexString</li>\n     * <li>'ia5str' - DERIA5String</li>\n     * <li>'utctime' - DERUTCTime</li>\n     * <li>'gentime' - DERGeneralizedTime</li>\n     * <li>'seq' - DERSequence</li>\n     * <li>'set' - DERSet</li>\n     * <li>'tag' - DERTaggedObject</li>\n     * </ul>\n     * @example\n     * newObject({'prnstr': 'aaa'});\n     * newObject({'seq': [{'int': 3}, {'prnstr': 'aaa'}]})\n     * // ASN.1 Tagged Object\n     * newObject({'tag': {'tag': 'a1',\n     *                    'explicit': true,\n     *                    'obj': {'seq': [{'int': 3}, {'prnstr': 'aaa'}]}}});\n     * // more simple representation of ASN.1 Tagged Object\n     * newObject({'tag': ['a1',\n     *                    true,\n     *                    {'seq': [\n     *                      {'int': 3},\n     *                      {'prnstr': 'aaa'}]}\n     *                   ]});\n     */\n    this.newObject = function (param) {\n        var _KJUR = KJUR, _KJUR_asn1 = _KJUR.asn1, _DERBoolean = _KJUR_asn1.DERBoolean, _DERInteger = _KJUR_asn1.DERInteger, _DERBitString = _KJUR_asn1.DERBitString, _DEROctetString = _KJUR_asn1.DEROctetString, _DERNull = _KJUR_asn1.DERNull, _DERObjectIdentifier = _KJUR_asn1.DERObjectIdentifier, _DEREnumerated = _KJUR_asn1.DEREnumerated, _DERUTF8String = _KJUR_asn1.DERUTF8String, _DERNumericString = _KJUR_asn1.DERNumericString, _DERPrintableString = _KJUR_asn1.DERPrintableString, _DERTeletexString = _KJUR_asn1.DERTeletexString, _DERIA5String = _KJUR_asn1.DERIA5String, _DERUTCTime = _KJUR_asn1.DERUTCTime, _DERGeneralizedTime = _KJUR_asn1.DERGeneralizedTime, _DERSequence = _KJUR_asn1.DERSequence, _DERSet = _KJUR_asn1.DERSet, _DERTaggedObject = _KJUR_asn1.DERTaggedObject, _newObject = _KJUR_asn1.ASN1Util.newObject;\n        var keys = Object.keys(param);\n        if (keys.length != 1)\n            throw \"key of param shall be only one.\";\n        var key = keys[0];\n        if (\":bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:\".indexOf(\":\" + key + \":\") == -1)\n            throw \"undefined key: \" + key;\n        if (key == \"bool\")\n            return new _DERBoolean(param[key]);\n        if (key == \"int\")\n            return new _DERInteger(param[key]);\n        if (key == \"bitstr\")\n            return new _DERBitString(param[key]);\n        if (key == \"octstr\")\n            return new _DEROctetString(param[key]);\n        if (key == \"null\")\n            return new _DERNull(param[key]);\n        if (key == \"oid\")\n            return new _DERObjectIdentifier(param[key]);\n        if (key == \"enum\")\n            return new _DEREnumerated(param[key]);\n        if (key == \"utf8str\")\n            return new _DERUTF8String(param[key]);\n        if (key == \"numstr\")\n            return new _DERNumericString(param[key]);\n        if (key == \"prnstr\")\n            return new _DERPrintableString(param[key]);\n        if (key == \"telstr\")\n            return new _DERTeletexString(param[key]);\n        if (key == \"ia5str\")\n            return new _DERIA5String(param[key]);\n        if (key == \"utctime\")\n            return new _DERUTCTime(param[key]);\n        if (key == \"gentime\")\n            return new _DERGeneralizedTime(param[key]);\n        if (key == \"seq\") {\n            var paramList = param[key];\n            var a = [];\n            for (var i = 0; i < paramList.length; i++) {\n                var asn1Obj = _newObject(paramList[i]);\n                a.push(asn1Obj);\n            }\n            return new _DERSequence({ 'array': a });\n        }\n        if (key == \"set\") {\n            var paramList = param[key];\n            var a = [];\n            for (var i = 0; i < paramList.length; i++) {\n                var asn1Obj = _newObject(paramList[i]);\n                a.push(asn1Obj);\n            }\n            return new _DERSet({ 'array': a });\n        }\n        if (key == \"tag\") {\n            var tagParam = param[key];\n            if (Object.prototype.toString.call(tagParam) === '[object Array]' &&\n                tagParam.length == 3) {\n                var obj = _newObject(tagParam[2]);\n                return new _DERTaggedObject({ tag: tagParam[0],\n                    explicit: tagParam[1],\n                    obj: obj });\n            }\n            else {\n                var newParam = {};\n                if (tagParam.explicit !== undefined)\n                    newParam.explicit = tagParam.explicit;\n                if (tagParam.tag !== undefined)\n                    newParam.tag = tagParam.tag;\n                if (tagParam.obj === undefined)\n                    throw \"obj shall be specified for 'tag'.\";\n                newParam.obj = _newObject(tagParam.obj);\n                return new _DERTaggedObject(newParam);\n            }\n        }\n    };\n    /**\n     * get encoded hexadecimal string of ASN1Object specifed by JSON parameters\n     * @name jsonToASN1HEX\n     * @memberOf KJUR.asn1.ASN1Util\n     * @function\n     * @param {Array} param JSON parameter to generate ASN1Object\n     * @return hexadecimal string of ASN1Object\n     * @since asn1 1.0.4\n     * @description\n     * As for ASN.1 object representation of JSON object,\n     * please see {@link newObject}.\n     * @example\n     * jsonToASN1HEX({'prnstr': 'aaa'});\n     */\n    this.jsonToASN1HEX = function (param) {\n        var asn1Obj = this.newObject(param);\n        return asn1Obj.getEncodedHex();\n    };\n};\n/**\n * get dot noted oid number string from hexadecimal value of OID\n * @name oidHexToInt\n * @memberOf KJUR.asn1.ASN1Util\n * @function\n * @param {String} hex hexadecimal value of object identifier\n * @return {String} dot noted string of object identifier\n * @since jsrsasign 4.8.3 asn1 1.0.7\n * @description\n * This static method converts from hexadecimal string representation of\n * ASN.1 value of object identifier to oid number string.\n * @example\n * KJUR.asn1.ASN1Util.oidHexToInt('550406') &rarr; \"2.5.4.6\"\n */\nKJUR.asn1.ASN1Util.oidHexToInt = function (hex) {\n    var s = \"\";\n    var i01 = parseInt(hex.substr(0, 2), 16);\n    var i0 = Math.floor(i01 / 40);\n    var i1 = i01 % 40;\n    var s = i0 + \".\" + i1;\n    var binbuf = \"\";\n    for (var i = 2; i < hex.length; i += 2) {\n        var value = parseInt(hex.substr(i, 2), 16);\n        var bin = (\"00000000\" + value.toString(2)).slice(-8);\n        binbuf = binbuf + bin.substr(1, 7);\n        if (bin.substr(0, 1) == \"0\") {\n            var bi = new BigInteger(binbuf, 2);\n            s = s + \".\" + bi.toString(10);\n            binbuf = \"\";\n        }\n    }\n    ;\n    return s;\n};\n/**\n * get hexadecimal value of object identifier from dot noted oid value\n * @name oidIntToHex\n * @memberOf KJUR.asn1.ASN1Util\n * @function\n * @param {String} oidString dot noted string of object identifier\n * @return {String} hexadecimal value of object identifier\n * @since jsrsasign 4.8.3 asn1 1.0.7\n * @description\n * This static method converts from object identifier value string.\n * to hexadecimal string representation of it.\n * @example\n * KJUR.asn1.ASN1Util.oidIntToHex(\"2.5.4.6\") &rarr; \"550406\"\n */\nKJUR.asn1.ASN1Util.oidIntToHex = function (oidString) {\n    var itox = function (i) {\n        var h = i.toString(16);\n        if (h.length == 1)\n            h = '0' + h;\n        return h;\n    };\n    var roidtox = function (roid) {\n        var h = '';\n        var bi = new BigInteger(roid, 10);\n        var b = bi.toString(2);\n        var padLen = 7 - b.length % 7;\n        if (padLen == 7)\n            padLen = 0;\n        var bPad = '';\n        for (var i = 0; i < padLen; i++)\n            bPad += '0';\n        b = bPad + b;\n        for (var i = 0; i < b.length - 1; i += 7) {\n            var b8 = b.substr(i, 7);\n            if (i != b.length - 7)\n                b8 = '1' + b8;\n            h += itox(parseInt(b8, 2));\n        }\n        return h;\n    };\n    if (!oidString.match(/^[0-9.]+$/)) {\n        throw \"malformed oid string: \" + oidString;\n    }\n    var h = '';\n    var a = oidString.split('.');\n    var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);\n    h += itox(i0);\n    a.splice(0, 2);\n    for (var i = 0; i < a.length; i++) {\n        h += roidtox(a[i]);\n    }\n    return h;\n};\n// ********************************************************************\n//  Abstract ASN.1 Classes\n// ********************************************************************\n// ********************************************************************\n/**\n * base class for ASN.1 DER encoder object\n * @name KJUR.asn1.ASN1Object\n * @class base class for ASN.1 DER encoder object\n * @property {Boolean} isModified flag whether internal data was changed\n * @property {String} hTLV hexadecimal string of ASN.1 TLV\n * @property {String} hT hexadecimal string of ASN.1 TLV tag(T)\n * @property {String} hL hexadecimal string of ASN.1 TLV length(L)\n * @property {String} hV hexadecimal string of ASN.1 TLV value(V)\n * @description\n */\nKJUR.asn1.ASN1Object = function () {\n    var isModified = true;\n    var hTLV = null;\n    var hT = '00';\n    var hL = '00';\n    var hV = '';\n    /**\n     * get hexadecimal ASN.1 TLV length(L) bytes from TLV value(V)\n     * @name getLengthHexFromValue\n     * @memberOf KJUR.asn1.ASN1Object#\n     * @function\n     * @return {String} hexadecimal string of ASN.1 TLV length(L)\n     */\n    this.getLengthHexFromValue = function () {\n        if (typeof this.hV == \"undefined\" || this.hV == null) {\n            throw \"this.hV is null or undefined.\";\n        }\n        if (this.hV.length % 2 == 1) {\n            throw \"value hex must be even length: n=\" + hV.length + \",v=\" + this.hV;\n        }\n        var n = this.hV.length / 2;\n        var hN = n.toString(16);\n        if (hN.length % 2 == 1) {\n            hN = \"0\" + hN;\n        }\n        if (n < 128) {\n            return hN;\n        }\n        else {\n            var hNlen = hN.length / 2;\n            if (hNlen > 15) {\n                throw \"ASN.1 length too long to represent by 8x: n = \" + n.toString(16);\n            }\n            var head = 128 + hNlen;\n            return head.toString(16) + hN;\n        }\n    };\n    /**\n     * get hexadecimal string of ASN.1 TLV bytes\n     * @name getEncodedHex\n     * @memberOf KJUR.asn1.ASN1Object#\n     * @function\n     * @return {String} hexadecimal string of ASN.1 TLV\n     */\n    this.getEncodedHex = function () {\n        if (this.hTLV == null || this.isModified) {\n            this.hV = this.getFreshValueHex();\n            this.hL = this.getLengthHexFromValue();\n            this.hTLV = this.hT + this.hL + this.hV;\n            this.isModified = false;\n            //alert(\"first time: \" + this.hTLV);\n        }\n        return this.hTLV;\n    };\n    /**\n     * get hexadecimal string of ASN.1 TLV value(V) bytes\n     * @name getValueHex\n     * @memberOf KJUR.asn1.ASN1Object#\n     * @function\n     * @return {String} hexadecimal string of ASN.1 TLV value(V) bytes\n     */\n    this.getValueHex = function () {\n        this.getEncodedHex();\n        return this.hV;\n    };\n    this.getFreshValueHex = function () {\n        return '';\n    };\n};\n// == BEGIN DERAbstractString ================================================\n/**\n * base class for ASN.1 DER string classes\n * @name KJUR.asn1.DERAbstractString\n * @class base class for ASN.1 DER string classes\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @property {String} s internal string of value\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>str - specify initial ASN.1 value(V) by a string</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n */\nKJUR.asn1.DERAbstractString = function (params) {\n    KJUR.asn1.DERAbstractString.superclass.constructor.call(this);\n    var s = null;\n    var hV = null;\n    /**\n     * get string value of this string object\n     * @name getString\n     * @memberOf KJUR.asn1.DERAbstractString#\n     * @function\n     * @return {String} string value of this string object\n     */\n    this.getString = function () {\n        return this.s;\n    };\n    /**\n     * set value by a string\n     * @name setString\n     * @memberOf KJUR.asn1.DERAbstractString#\n     * @function\n     * @param {String} newS value by a string to set\n     */\n    this.setString = function (newS) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.s = newS;\n        this.hV = stohex(this.s);\n    };\n    /**\n     * set value by a hexadecimal string\n     * @name setStringHex\n     * @memberOf KJUR.asn1.DERAbstractString#\n     * @function\n     * @param {String} newHexString value by a hexadecimal string to set\n     */\n    this.setStringHex = function (newHexString) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.s = null;\n        this.hV = newHexString;\n    };\n    this.getFreshValueHex = function () {\n        return this.hV;\n    };\n    if (typeof params != \"undefined\") {\n        if (typeof params == \"string\") {\n            this.setString(params);\n        }\n        else if (typeof params['str'] != \"undefined\") {\n            this.setString(params['str']);\n        }\n        else if (typeof params['hex'] != \"undefined\") {\n            this.setStringHex(params['hex']);\n        }\n    }\n};\nYAHOO.lang.extend(KJUR.asn1.DERAbstractString, KJUR.asn1.ASN1Object);\n// == END   DERAbstractString ================================================\n// == BEGIN DERAbstractTime ==================================================\n/**\n * base class for ASN.1 DER Generalized/UTCTime class\n * @name KJUR.asn1.DERAbstractTime\n * @class base class for ASN.1 DER Generalized/UTCTime class\n * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})\n * @extends KJUR.asn1.ASN1Object\n * @description\n * @see KJUR.asn1.ASN1Object - superclass\n */\nKJUR.asn1.DERAbstractTime = function (params) {\n    KJUR.asn1.DERAbstractTime.superclass.constructor.call(this);\n    var s = null;\n    var date = null;\n    // --- PRIVATE METHODS --------------------\n    this.localDateToUTC = function (d) {\n        utc = d.getTime() + (d.getTimezoneOffset() * 60000);\n        var utcDate = new Date(utc);\n        return utcDate;\n    };\n    /*\n     * format date string by Data object\n     * @name formatDate\n     * @memberOf KJUR.asn1.AbstractTime;\n     * @param {Date} dateObject\n     * @param {string} type 'utc' or 'gen'\n     * @param {boolean} withMillis flag for with millisections or not\n     * @description\n     * 'withMillis' flag is supported from asn1 1.0.6.\n     */\n    this.formatDate = function (dateObject, type, withMillis) {\n        var pad = this.zeroPadding;\n        var d = this.localDateToUTC(dateObject);\n        var year = String(d.getFullYear());\n        if (type == 'utc')\n            year = year.substr(2, 2);\n        var month = pad(String(d.getMonth() + 1), 2);\n        var day = pad(String(d.getDate()), 2);\n        var hour = pad(String(d.getHours()), 2);\n        var min = pad(String(d.getMinutes()), 2);\n        var sec = pad(String(d.getSeconds()), 2);\n        var s = year + month + day + hour + min + sec;\n        if (withMillis === true) {\n            var millis = d.getMilliseconds();\n            if (millis != 0) {\n                var sMillis = pad(String(millis), 3);\n                sMillis = sMillis.replace(/[0]+$/, \"\");\n                s = s + \".\" + sMillis;\n            }\n        }\n        return s + \"Z\";\n    };\n    this.zeroPadding = function (s, len) {\n        if (s.length >= len)\n            return s;\n        return new Array(len - s.length + 1).join('0') + s;\n    };\n    // --- PUBLIC METHODS --------------------\n    /**\n     * get string value of this string object\n     * @name getString\n     * @memberOf KJUR.asn1.DERAbstractTime#\n     * @function\n     * @return {String} string value of this time object\n     */\n    this.getString = function () {\n        return this.s;\n    };\n    /**\n     * set value by a string\n     * @name setString\n     * @memberOf KJUR.asn1.DERAbstractTime#\n     * @function\n     * @param {String} newS value by a string to set such like \"130430235959Z\"\n     */\n    this.setString = function (newS) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.s = newS;\n        this.hV = stohex(newS);\n    };\n    /**\n     * set value by a Date object\n     * @name setByDateValue\n     * @memberOf KJUR.asn1.DERAbstractTime#\n     * @function\n     * @param {Integer} year year of date (ex. 2013)\n     * @param {Integer} month month of date between 1 and 12 (ex. 12)\n     * @param {Integer} day day of month\n     * @param {Integer} hour hours of date\n     * @param {Integer} min minutes of date\n     * @param {Integer} sec seconds of date\n     */\n    this.setByDateValue = function (year, month, day, hour, min, sec) {\n        var dateObject = new Date(Date.UTC(year, month - 1, day, hour, min, sec, 0));\n        this.setByDate(dateObject);\n    };\n    this.getFreshValueHex = function () {\n        return this.hV;\n    };\n};\nYAHOO.lang.extend(KJUR.asn1.DERAbstractTime, KJUR.asn1.ASN1Object);\n// == END   DERAbstractTime ==================================================\n// == BEGIN DERAbstractStructured ============================================\n/**\n * base class for ASN.1 DER structured class\n * @name KJUR.asn1.DERAbstractStructured\n * @class base class for ASN.1 DER structured class\n * @property {Array} asn1Array internal array of ASN1Object\n * @extends KJUR.asn1.ASN1Object\n * @description\n * @see KJUR.asn1.ASN1Object - superclass\n */\nKJUR.asn1.DERAbstractStructured = function (params) {\n    KJUR.asn1.DERAbstractString.superclass.constructor.call(this);\n    var asn1Array = null;\n    /**\n     * set value by array of ASN1Object\n     * @name setByASN1ObjectArray\n     * @memberOf KJUR.asn1.DERAbstractStructured#\n     * @function\n     * @param {array} asn1ObjectArray array of ASN1Object to set\n     */\n    this.setByASN1ObjectArray = function (asn1ObjectArray) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.asn1Array = asn1ObjectArray;\n    };\n    /**\n     * append an ASN1Object to internal array\n     * @name appendASN1Object\n     * @memberOf KJUR.asn1.DERAbstractStructured#\n     * @function\n     * @param {ASN1Object} asn1Object to add\n     */\n    this.appendASN1Object = function (asn1Object) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.asn1Array.push(asn1Object);\n    };\n    this.asn1Array = new Array();\n    if (typeof params != \"undefined\") {\n        if (typeof params['array'] != \"undefined\") {\n            this.asn1Array = params['array'];\n        }\n    }\n};\nYAHOO.lang.extend(KJUR.asn1.DERAbstractStructured, KJUR.asn1.ASN1Object);\n// ********************************************************************\n//  ASN.1 Object Classes\n// ********************************************************************\n// ********************************************************************\n/**\n * class for ASN.1 DER Boolean\n * @name KJUR.asn1.DERBoolean\n * @class class for ASN.1 DER Boolean\n * @extends KJUR.asn1.ASN1Object\n * @description\n * @see KJUR.asn1.ASN1Object - superclass\n */\nKJUR.asn1.DERBoolean = function () {\n    KJUR.asn1.DERBoolean.superclass.constructor.call(this);\n    this.hT = \"01\";\n    this.hTLV = \"0101ff\";\n};\nYAHOO.lang.extend(KJUR.asn1.DERBoolean, KJUR.asn1.ASN1Object);\n// ********************************************************************\n/**\n * class for ASN.1 DER Integer\n * @name KJUR.asn1.DERInteger\n * @class class for ASN.1 DER Integer\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>int - specify initial ASN.1 value(V) by integer value</li>\n * <li>bigint - specify initial ASN.1 value(V) by BigInteger object</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n */\nKJUR.asn1.DERInteger = function (params) {\n    KJUR.asn1.DERInteger.superclass.constructor.call(this);\n    this.hT = \"02\";\n    /**\n     * set value by Tom Wu's BigInteger object\n     * @name setByBigInteger\n     * @memberOf KJUR.asn1.DERInteger#\n     * @function\n     * @param {BigInteger} bigIntegerValue to set\n     */\n    this.setByBigInteger = function (bigIntegerValue) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);\n    };\n    /**\n     * set value by integer value\n     * @name setByInteger\n     * @memberOf KJUR.asn1.DERInteger\n     * @function\n     * @param {Integer} integer value to set\n     */\n    this.setByInteger = function (intValue) {\n        var bi = new BigInteger(String(intValue), 10);\n        this.setByBigInteger(bi);\n    };\n    /**\n     * set value by integer value\n     * @name setValueHex\n     * @memberOf KJUR.asn1.DERInteger#\n     * @function\n     * @param {String} hexadecimal string of integer value\n     * @description\n     * <br/>\n     * NOTE: Value shall be represented by minimum octet length of\n     * two's complement representation.\n     * @example\n     * new KJUR.asn1.DERInteger(123);\n     * new KJUR.asn1.DERInteger({'int': 123});\n     * new KJUR.asn1.DERInteger({'hex': '1fad'});\n     */\n    this.setValueHex = function (newHexString) {\n        this.hV = newHexString;\n    };\n    this.getFreshValueHex = function () {\n        return this.hV;\n    };\n    if (typeof params != \"undefined\") {\n        if (typeof params['bigint'] != \"undefined\") {\n            this.setByBigInteger(params['bigint']);\n        }\n        else if (typeof params['int'] != \"undefined\") {\n            this.setByInteger(params['int']);\n        }\n        else if (typeof params == \"number\") {\n            this.setByInteger(params);\n        }\n        else if (typeof params['hex'] != \"undefined\") {\n            this.setValueHex(params['hex']);\n        }\n    }\n};\nYAHOO.lang.extend(KJUR.asn1.DERInteger, KJUR.asn1.ASN1Object);\n// ********************************************************************\n/**\n * class for ASN.1 DER encoded BitString primitive\n * @name KJUR.asn1.DERBitString\n * @class class for ASN.1 DER encoded BitString primitive\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>bin - specify binary string (ex. '10111')</li>\n * <li>array - specify array of boolean (ex. [true,false,true,true])</li>\n * <li>hex - specify hexadecimal string of ASN.1 value(V) including unused bits</li>\n * <li>obj - specify {@link KJUR.asn1.ASN1Util.newObject}\n * argument for \"BitString encapsulates\" structure.</li>\n * </ul>\n * NOTE1: 'params' can be omitted.<br/>\n * NOTE2: 'obj' parameter have been supported since\n * asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).<br/>\n * @example\n * // default constructor\n * o = new KJUR.asn1.DERBitString();\n * // initialize with binary string\n * o = new KJUR.asn1.DERBitString({bin: \"1011\"});\n * // initialize with boolean array\n * o = new KJUR.asn1.DERBitString({array: [true,false,true,true]});\n * // initialize with hexadecimal string (04 is unused bits)\n * o = new KJUR.asn1.DEROctetString({hex: \"04bac0\"});\n * // initialize with ASN1Util.newObject argument for encapsulated\n * o = new KJUR.asn1.DERBitString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});\n * // above generates a ASN.1 data like this:\n * // BIT STRING, encapsulates {\n * //   SEQUENCE {\n * //     INTEGER 3\n * //     PrintableString 'aaa'\n * //     }\n * //   }\n */\nKJUR.asn1.DERBitString = function (params) {\n    if (params !== undefined && typeof params.obj !== \"undefined\") {\n        var o = KJUR.asn1.ASN1Util.newObject(params.obj);\n        params.hex = \"00\" + o.getEncodedHex();\n    }\n    KJUR.asn1.DERBitString.superclass.constructor.call(this);\n    this.hT = \"03\";\n    /**\n     * set ASN.1 value(V) by a hexadecimal string including unused bits\n     * @name setHexValueIncludingUnusedBits\n     * @memberOf KJUR.asn1.DERBitString#\n     * @function\n     * @param {String} newHexStringIncludingUnusedBits\n     */\n    this.setHexValueIncludingUnusedBits = function (newHexStringIncludingUnusedBits) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.hV = newHexStringIncludingUnusedBits;\n    };\n    /**\n     * set ASN.1 value(V) by unused bit and hexadecimal string of value\n     * @name setUnusedBitsAndHexValue\n     * @memberOf KJUR.asn1.DERBitString#\n     * @function\n     * @param {Integer} unusedBits\n     * @param {String} hValue\n     */\n    this.setUnusedBitsAndHexValue = function (unusedBits, hValue) {\n        if (unusedBits < 0 || 7 < unusedBits) {\n            throw \"unused bits shall be from 0 to 7: u = \" + unusedBits;\n        }\n        var hUnusedBits = \"0\" + unusedBits;\n        this.hTLV = null;\n        this.isModified = true;\n        this.hV = hUnusedBits + hValue;\n    };\n    /**\n     * set ASN.1 DER BitString by binary string<br/>\n     * @name setByBinaryString\n     * @memberOf KJUR.asn1.DERBitString#\n     * @function\n     * @param {String} binaryString binary value string (i.e. '10111')\n     * @description\n     * Its unused bits will be calculated automatically by length of\n     * 'binaryValue'. <br/>\n     * NOTE: Trailing zeros '0' will be ignored.\n     * @example\n     * o = new KJUR.asn1.DERBitString();\n     * o.setByBooleanArray(\"01011\");\n     */\n    this.setByBinaryString = function (binaryString) {\n        binaryString = binaryString.replace(/0+$/, '');\n        var unusedBits = 8 - binaryString.length % 8;\n        if (unusedBits == 8)\n            unusedBits = 0;\n        for (var i = 0; i <= unusedBits; i++) {\n            binaryString += '0';\n        }\n        var h = '';\n        for (var i = 0; i < binaryString.length - 1; i += 8) {\n            var b = binaryString.substr(i, 8);\n            var x = parseInt(b, 2).toString(16);\n            if (x.length == 1)\n                x = '0' + x;\n            h += x;\n        }\n        this.hTLV = null;\n        this.isModified = true;\n        this.hV = '0' + unusedBits + h;\n    };\n    /**\n     * set ASN.1 TLV value(V) by an array of boolean<br/>\n     * @name setByBooleanArray\n     * @memberOf KJUR.asn1.DERBitString#\n     * @function\n     * @param {array} booleanArray array of boolean (ex. [true, false, true])\n     * @description\n     * NOTE: Trailing falses will be ignored in the ASN.1 DER Object.\n     * @example\n     * o = new KJUR.asn1.DERBitString();\n     * o.setByBooleanArray([false, true, false, true, true]);\n     */\n    this.setByBooleanArray = function (booleanArray) {\n        var s = '';\n        for (var i = 0; i < booleanArray.length; i++) {\n            if (booleanArray[i] == true) {\n                s += '1';\n            }\n            else {\n                s += '0';\n            }\n        }\n        this.setByBinaryString(s);\n    };\n    /**\n     * generate an array of falses with specified length<br/>\n     * @name newFalseArray\n     * @memberOf KJUR.asn1.DERBitString\n     * @function\n     * @param {Integer} nLength length of array to generate\n     * @return {array} array of boolean falses\n     * @description\n     * This static method may be useful to initialize boolean array.\n     * @example\n     * o = new KJUR.asn1.DERBitString();\n     * o.newFalseArray(3) &rarr; [false, false, false]\n     */\n    this.newFalseArray = function (nLength) {\n        var a = new Array(nLength);\n        for (var i = 0; i < nLength; i++) {\n            a[i] = false;\n        }\n        return a;\n    };\n    this.getFreshValueHex = function () {\n        return this.hV;\n    };\n    if (typeof params != \"undefined\") {\n        if (typeof params == \"string\" && params.toLowerCase().match(/^[0-9a-f]+$/)) {\n            this.setHexValueIncludingUnusedBits(params);\n        }\n        else if (typeof params['hex'] != \"undefined\") {\n            this.setHexValueIncludingUnusedBits(params['hex']);\n        }\n        else if (typeof params['bin'] != \"undefined\") {\n            this.setByBinaryString(params['bin']);\n        }\n        else if (typeof params['array'] != \"undefined\") {\n            this.setByBooleanArray(params['array']);\n        }\n    }\n};\nYAHOO.lang.extend(KJUR.asn1.DERBitString, KJUR.asn1.ASN1Object);\n// ********************************************************************\n/**\n * class for ASN.1 DER OctetString<br/>\n * @name KJUR.asn1.DEROctetString\n * @class class for ASN.1 DER OctetString\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * This class provides ASN.1 OctetString simple type.<br/>\n * Supported \"params\" attributes are:\n * <ul>\n * <li>str - to set a string as a value</li>\n * <li>hex - to set a hexadecimal string as a value</li>\n * <li>obj - to set a encapsulated ASN.1 value by JSON object\n * which is defined in {@link KJUR.asn1.ASN1Util.newObject}</li>\n * </ul>\n * NOTE: A parameter 'obj' have been supported\n * for \"OCTET STRING, encapsulates\" structure.\n * since asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).\n * @see KJUR.asn1.DERAbstractString - superclass\n * @example\n * // default constructor\n * o = new KJUR.asn1.DEROctetString();\n * // initialize with string\n * o = new KJUR.asn1.DEROctetString({str: \"aaa\"});\n * // initialize with hexadecimal string\n * o = new KJUR.asn1.DEROctetString({hex: \"616161\"});\n * // initialize with ASN1Util.newObject argument\n * o = new KJUR.asn1.DEROctetString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});\n * // above generates a ASN.1 data like this:\n * // OCTET STRING, encapsulates {\n * //   SEQUENCE {\n * //     INTEGER 3\n * //     PrintableString 'aaa'\n * //     }\n * //   }\n */\nKJUR.asn1.DEROctetString = function (params) {\n    if (params !== undefined && typeof params.obj !== \"undefined\") {\n        var o = KJUR.asn1.ASN1Util.newObject(params.obj);\n        params.hex = o.getEncodedHex();\n    }\n    KJUR.asn1.DEROctetString.superclass.constructor.call(this, params);\n    this.hT = \"04\";\n};\nYAHOO.lang.extend(KJUR.asn1.DEROctetString, KJUR.asn1.DERAbstractString);\n// ********************************************************************\n/**\n * class for ASN.1 DER Null\n * @name KJUR.asn1.DERNull\n * @class class for ASN.1 DER Null\n * @extends KJUR.asn1.ASN1Object\n * @description\n * @see KJUR.asn1.ASN1Object - superclass\n */\nKJUR.asn1.DERNull = function () {\n    KJUR.asn1.DERNull.superclass.constructor.call(this);\n    this.hT = \"05\";\n    this.hTLV = \"0500\";\n};\nYAHOO.lang.extend(KJUR.asn1.DERNull, KJUR.asn1.ASN1Object);\n// ********************************************************************\n/**\n * class for ASN.1 DER ObjectIdentifier\n * @name KJUR.asn1.DERObjectIdentifier\n * @class class for ASN.1 DER ObjectIdentifier\n * @param {Array} params associative array of parameters (ex. {'oid': '2.5.4.5'})\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>oid - specify initial ASN.1 value(V) by a oid string (ex. 2.5.4.13)</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n */\nKJUR.asn1.DERObjectIdentifier = function (params) {\n    var itox = function (i) {\n        var h = i.toString(16);\n        if (h.length == 1)\n            h = '0' + h;\n        return h;\n    };\n    var roidtox = function (roid) {\n        var h = '';\n        var bi = new BigInteger(roid, 10);\n        var b = bi.toString(2);\n        var padLen = 7 - b.length % 7;\n        if (padLen == 7)\n            padLen = 0;\n        var bPad = '';\n        for (var i = 0; i < padLen; i++)\n            bPad += '0';\n        b = bPad + b;\n        for (var i = 0; i < b.length - 1; i += 7) {\n            var b8 = b.substr(i, 7);\n            if (i != b.length - 7)\n                b8 = '1' + b8;\n            h += itox(parseInt(b8, 2));\n        }\n        return h;\n    };\n    KJUR.asn1.DERObjectIdentifier.superclass.constructor.call(this);\n    this.hT = \"06\";\n    /**\n     * set value by a hexadecimal string\n     * @name setValueHex\n     * @memberOf KJUR.asn1.DERObjectIdentifier#\n     * @function\n     * @param {String} newHexString hexadecimal value of OID bytes\n     */\n    this.setValueHex = function (newHexString) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.s = null;\n        this.hV = newHexString;\n    };\n    /**\n     * set value by a OID string<br/>\n     * @name setValueOidString\n     * @memberOf KJUR.asn1.DERObjectIdentifier#\n     * @function\n     * @param {String} oidString OID string (ex. 2.5.4.13)\n     * @example\n     * o = new KJUR.asn1.DERObjectIdentifier();\n     * o.setValueOidString(\"2.5.4.13\");\n     */\n    this.setValueOidString = function (oidString) {\n        if (!oidString.match(/^[0-9.]+$/)) {\n            throw \"malformed oid string: \" + oidString;\n        }\n        var h = '';\n        var a = oidString.split('.');\n        var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);\n        h += itox(i0);\n        a.splice(0, 2);\n        for (var i = 0; i < a.length; i++) {\n            h += roidtox(a[i]);\n        }\n        this.hTLV = null;\n        this.isModified = true;\n        this.s = null;\n        this.hV = h;\n    };\n    /**\n     * set value by a OID name\n     * @name setValueName\n     * @memberOf KJUR.asn1.DERObjectIdentifier#\n     * @function\n     * @param {String} oidName OID name (ex. 'serverAuth')\n     * @since 1.0.1\n     * @description\n     * OID name shall be defined in 'KJUR.asn1.x509.OID.name2oidList'.\n     * Otherwise raise error.\n     * @example\n     * o = new KJUR.asn1.DERObjectIdentifier();\n     * o.setValueName(\"serverAuth\");\n     */\n    this.setValueName = function (oidName) {\n        var oid = KJUR.asn1.x509.OID.name2oid(oidName);\n        if (oid !== '') {\n            this.setValueOidString(oid);\n        }\n        else {\n            throw \"DERObjectIdentifier oidName undefined: \" + oidName;\n        }\n    };\n    this.getFreshValueHex = function () {\n        return this.hV;\n    };\n    if (params !== undefined) {\n        if (typeof params === \"string\") {\n            if (params.match(/^[0-2].[0-9.]+$/)) {\n                this.setValueOidString(params);\n            }\n            else {\n                this.setValueName(params);\n            }\n        }\n        else if (params.oid !== undefined) {\n            this.setValueOidString(params.oid);\n        }\n        else if (params.hex !== undefined) {\n            this.setValueHex(params.hex);\n        }\n        else if (params.name !== undefined) {\n            this.setValueName(params.name);\n        }\n    }\n};\nYAHOO.lang.extend(KJUR.asn1.DERObjectIdentifier, KJUR.asn1.ASN1Object);\n// ********************************************************************\n/**\n * class for ASN.1 DER Enumerated\n * @name KJUR.asn1.DEREnumerated\n * @class class for ASN.1 DER Enumerated\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>int - specify initial ASN.1 value(V) by integer value</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n * @example\n * new KJUR.asn1.DEREnumerated(123);\n * new KJUR.asn1.DEREnumerated({int: 123});\n * new KJUR.asn1.DEREnumerated({hex: '1fad'});\n */\nKJUR.asn1.DEREnumerated = function (params) {\n    KJUR.asn1.DEREnumerated.superclass.constructor.call(this);\n    this.hT = \"0a\";\n    /**\n     * set value by Tom Wu's BigInteger object\n     * @name setByBigInteger\n     * @memberOf KJUR.asn1.DEREnumerated#\n     * @function\n     * @param {BigInteger} bigIntegerValue to set\n     */\n    this.setByBigInteger = function (bigIntegerValue) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);\n    };\n    /**\n     * set value by integer value\n     * @name setByInteger\n     * @memberOf KJUR.asn1.DEREnumerated#\n     * @function\n     * @param {Integer} integer value to set\n     */\n    this.setByInteger = function (intValue) {\n        var bi = new BigInteger(String(intValue), 10);\n        this.setByBigInteger(bi);\n    };\n    /**\n     * set value by integer value\n     * @name setValueHex\n     * @memberOf KJUR.asn1.DEREnumerated#\n     * @function\n     * @param {String} hexadecimal string of integer value\n     * @description\n     * <br/>\n     * NOTE: Value shall be represented by minimum octet length of\n     * two's complement representation.\n     */\n    this.setValueHex = function (newHexString) {\n        this.hV = newHexString;\n    };\n    this.getFreshValueHex = function () {\n        return this.hV;\n    };\n    if (typeof params != \"undefined\") {\n        if (typeof params['int'] != \"undefined\") {\n            this.setByInteger(params['int']);\n        }\n        else if (typeof params == \"number\") {\n            this.setByInteger(params);\n        }\n        else if (typeof params['hex'] != \"undefined\") {\n            this.setValueHex(params['hex']);\n        }\n    }\n};\nYAHOO.lang.extend(KJUR.asn1.DEREnumerated, KJUR.asn1.ASN1Object);\n// ********************************************************************\n/**\n * class for ASN.1 DER UTF8String\n * @name KJUR.asn1.DERUTF8String\n * @class class for ASN.1 DER UTF8String\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DERUTF8String = function (params) {\n    KJUR.asn1.DERUTF8String.superclass.constructor.call(this, params);\n    this.hT = \"0c\";\n};\nYAHOO.lang.extend(KJUR.asn1.DERUTF8String, KJUR.asn1.DERAbstractString);\n// ********************************************************************\n/**\n * class for ASN.1 DER NumericString\n * @name KJUR.asn1.DERNumericString\n * @class class for ASN.1 DER NumericString\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DERNumericString = function (params) {\n    KJUR.asn1.DERNumericString.superclass.constructor.call(this, params);\n    this.hT = \"12\";\n};\nYAHOO.lang.extend(KJUR.asn1.DERNumericString, KJUR.asn1.DERAbstractString);\n// ********************************************************************\n/**\n * class for ASN.1 DER PrintableString\n * @name KJUR.asn1.DERPrintableString\n * @class class for ASN.1 DER PrintableString\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DERPrintableString = function (params) {\n    KJUR.asn1.DERPrintableString.superclass.constructor.call(this, params);\n    this.hT = \"13\";\n};\nYAHOO.lang.extend(KJUR.asn1.DERPrintableString, KJUR.asn1.DERAbstractString);\n// ********************************************************************\n/**\n * class for ASN.1 DER TeletexString\n * @name KJUR.asn1.DERTeletexString\n * @class class for ASN.1 DER TeletexString\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DERTeletexString = function (params) {\n    KJUR.asn1.DERTeletexString.superclass.constructor.call(this, params);\n    this.hT = \"14\";\n};\nYAHOO.lang.extend(KJUR.asn1.DERTeletexString, KJUR.asn1.DERAbstractString);\n// ********************************************************************\n/**\n * class for ASN.1 DER IA5String\n * @name KJUR.asn1.DERIA5String\n * @class class for ASN.1 DER IA5String\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DERIA5String = function (params) {\n    KJUR.asn1.DERIA5String.superclass.constructor.call(this, params);\n    this.hT = \"16\";\n};\nYAHOO.lang.extend(KJUR.asn1.DERIA5String, KJUR.asn1.DERAbstractString);\n// ********************************************************************\n/**\n * class for ASN.1 DER UTCTime\n * @name KJUR.asn1.DERUTCTime\n * @class class for ASN.1 DER UTCTime\n * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})\n * @extends KJUR.asn1.DERAbstractTime\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>str - specify initial ASN.1 value(V) by a string (ex.'130430235959Z')</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * <li>date - specify Date object.</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n * <h4>EXAMPLES</h4>\n * @example\n * d1 = new KJUR.asn1.DERUTCTime();\n * d1.setString('130430125959Z');\n *\n * d2 = new KJUR.asn1.DERUTCTime({'str': '130430125959Z'});\n * d3 = new KJUR.asn1.DERUTCTime({'date': new Date(Date.UTC(2015, 0, 31, 0, 0, 0, 0))});\n * d4 = new KJUR.asn1.DERUTCTime('130430125959Z');\n */\nKJUR.asn1.DERUTCTime = function (params) {\n    KJUR.asn1.DERUTCTime.superclass.constructor.call(this, params);\n    this.hT = \"17\";\n    /**\n     * set value by a Date object<br/>\n     * @name setByDate\n     * @memberOf KJUR.asn1.DERUTCTime#\n     * @function\n     * @param {Date} dateObject Date object to set ASN.1 value(V)\n     * @example\n     * o = new KJUR.asn1.DERUTCTime();\n     * o.setByDate(new Date(\"2016/12/31\"));\n     */\n    this.setByDate = function (dateObject) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.date = dateObject;\n        this.s = this.formatDate(this.date, 'utc');\n        this.hV = stohex(this.s);\n    };\n    this.getFreshValueHex = function () {\n        if (typeof this.date == \"undefined\" && typeof this.s == \"undefined\") {\n            this.date = new Date();\n            this.s = this.formatDate(this.date, 'utc');\n            this.hV = stohex(this.s);\n        }\n        return this.hV;\n    };\n    if (params !== undefined) {\n        if (params.str !== undefined) {\n            this.setString(params.str);\n        }\n        else if (typeof params == \"string\" && params.match(/^[0-9]{12}Z$/)) {\n            this.setString(params);\n        }\n        else if (params.hex !== undefined) {\n            this.setStringHex(params.hex);\n        }\n        else if (params.date !== undefined) {\n            this.setByDate(params.date);\n        }\n    }\n};\nYAHOO.lang.extend(KJUR.asn1.DERUTCTime, KJUR.asn1.DERAbstractTime);\n// ********************************************************************\n/**\n * class for ASN.1 DER GeneralizedTime\n * @name KJUR.asn1.DERGeneralizedTime\n * @class class for ASN.1 DER GeneralizedTime\n * @param {Array} params associative array of parameters (ex. {'str': '20130430235959Z'})\n * @property {Boolean} withMillis flag to show milliseconds or not\n * @extends KJUR.asn1.DERAbstractTime\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>str - specify initial ASN.1 value(V) by a string (ex.'20130430235959Z')</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * <li>date - specify Date object.</li>\n * <li>millis - specify flag to show milliseconds (from 1.0.6)</li>\n * </ul>\n * NOTE1: 'params' can be omitted.\n * NOTE2: 'withMillis' property is supported from asn1 1.0.6.\n */\nKJUR.asn1.DERGeneralizedTime = function (params) {\n    KJUR.asn1.DERGeneralizedTime.superclass.constructor.call(this, params);\n    this.hT = \"18\";\n    this.withMillis = false;\n    /**\n     * set value by a Date object\n     * @name setByDate\n     * @memberOf KJUR.asn1.DERGeneralizedTime#\n     * @function\n     * @param {Date} dateObject Date object to set ASN.1 value(V)\n     * @example\n     * When you specify UTC time, use 'Date.UTC' method like this:<br/>\n     * o1 = new DERUTCTime();\n     * o1.setByDate(date);\n     *\n     * date = new Date(Date.UTC(2015, 0, 31, 23, 59, 59, 0)); #2015JAN31 23:59:59\n     */\n    this.setByDate = function (dateObject) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.date = dateObject;\n        this.s = this.formatDate(this.date, 'gen', this.withMillis);\n        this.hV = stohex(this.s);\n    };\n    this.getFreshValueHex = function () {\n        if (this.date === undefined && this.s === undefined) {\n            this.date = new Date();\n            this.s = this.formatDate(this.date, 'gen', this.withMillis);\n            this.hV = stohex(this.s);\n        }\n        return this.hV;\n    };\n    if (params !== undefined) {\n        if (params.str !== undefined) {\n            this.setString(params.str);\n        }\n        else if (typeof params == \"string\" && params.match(/^[0-9]{14}Z$/)) {\n            this.setString(params);\n        }\n        else if (params.hex !== undefined) {\n            this.setStringHex(params.hex);\n        }\n        else if (params.date !== undefined) {\n            this.setByDate(params.date);\n        }\n        if (params.millis === true) {\n            this.withMillis = true;\n        }\n    }\n};\nYAHOO.lang.extend(KJUR.asn1.DERGeneralizedTime, KJUR.asn1.DERAbstractTime);\n// ********************************************************************\n/**\n * class for ASN.1 DER Sequence\n * @name KJUR.asn1.DERSequence\n * @class class for ASN.1 DER Sequence\n * @extends KJUR.asn1.DERAbstractStructured\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>array - specify array of ASN1Object to set elements of content</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n */\nKJUR.asn1.DERSequence = function (params) {\n    KJUR.asn1.DERSequence.superclass.constructor.call(this, params);\n    this.hT = \"30\";\n    this.getFreshValueHex = function () {\n        var h = '';\n        for (var i = 0; i < this.asn1Array.length; i++) {\n            var asn1Obj = this.asn1Array[i];\n            h += asn1Obj.getEncodedHex();\n        }\n        this.hV = h;\n        return this.hV;\n    };\n};\nYAHOO.lang.extend(KJUR.asn1.DERSequence, KJUR.asn1.DERAbstractStructured);\n// ********************************************************************\n/**\n * class for ASN.1 DER Set\n * @name KJUR.asn1.DERSet\n * @class class for ASN.1 DER Set\n * @extends KJUR.asn1.DERAbstractStructured\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>array - specify array of ASN1Object to set elements of content</li>\n * <li>sortflag - flag for sort (default: true). ASN.1 BER is not sorted in 'SET OF'.</li>\n * </ul>\n * NOTE1: 'params' can be omitted.<br/>\n * NOTE2: sortflag is supported since 1.0.5.\n */\nKJUR.asn1.DERSet = function (params) {\n    KJUR.asn1.DERSet.superclass.constructor.call(this, params);\n    this.hT = \"31\";\n    this.sortFlag = true; // item shall be sorted only in ASN.1 DER\n    this.getFreshValueHex = function () {\n        var a = new Array();\n        for (var i = 0; i < this.asn1Array.length; i++) {\n            var asn1Obj = this.asn1Array[i];\n            a.push(asn1Obj.getEncodedHex());\n        }\n        if (this.sortFlag == true)\n            a.sort();\n        this.hV = a.join('');\n        return this.hV;\n    };\n    if (typeof params != \"undefined\") {\n        if (typeof params.sortflag != \"undefined\" &&\n            params.sortflag == false)\n            this.sortFlag = false;\n    }\n};\nYAHOO.lang.extend(KJUR.asn1.DERSet, KJUR.asn1.DERAbstractStructured);\n// ********************************************************************\n/**\n * class for ASN.1 DER TaggedObject\n * @name KJUR.asn1.DERTaggedObject\n * @class class for ASN.1 DER TaggedObject\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * Parameter 'tagNoNex' is ASN.1 tag(T) value for this object.\n * For example, if you find '[1]' tag in a ASN.1 dump,\n * 'tagNoHex' will be 'a1'.\n * <br/>\n * As for optional argument 'params' for constructor, you can specify *ANY* of\n * following properties:\n * <ul>\n * <li>explicit - specify true if this is explicit tag otherwise false\n *     (default is 'true').</li>\n * <li>tag - specify tag (default is 'a0' which means [0])</li>\n * <li>obj - specify ASN1Object which is tagged</li>\n * </ul>\n * @example\n * d1 = new KJUR.asn1.DERUTF8String({'str':'a'});\n * d2 = new KJUR.asn1.DERTaggedObject({'obj': d1});\n * hex = d2.getEncodedHex();\n */\nKJUR.asn1.DERTaggedObject = function (params) {\n    KJUR.asn1.DERTaggedObject.superclass.constructor.call(this);\n    this.hT = \"a0\";\n    this.hV = '';\n    this.isExplicit = true;\n    this.asn1Object = null;\n    /**\n     * set value by an ASN1Object\n     * @name setString\n     * @memberOf KJUR.asn1.DERTaggedObject#\n     * @function\n     * @param {Boolean} isExplicitFlag flag for explicit/implicit tag\n     * @param {Integer} tagNoHex hexadecimal string of ASN.1 tag\n     * @param {ASN1Object} asn1Object ASN.1 to encapsulate\n     */\n    this.setASN1Object = function (isExplicitFlag, tagNoHex, asn1Object) {\n        this.hT = tagNoHex;\n        this.isExplicit = isExplicitFlag;\n        this.asn1Object = asn1Object;\n        if (this.isExplicit) {\n            this.hV = this.asn1Object.getEncodedHex();\n            this.hTLV = null;\n            this.isModified = true;\n        }\n        else {\n            this.hV = null;\n            this.hTLV = asn1Object.getEncodedHex();\n            this.hTLV = this.hTLV.replace(/^../, tagNoHex);\n            this.isModified = false;\n        }\n    };\n    this.getFreshValueHex = function () {\n        return this.hV;\n    };\n    if (typeof params != \"undefined\") {\n        if (typeof params['tag'] != \"undefined\") {\n            this.hT = params['tag'];\n        }\n        if (typeof params['explicit'] != \"undefined\") {\n            this.isExplicit = params['explicit'];\n        }\n        if (typeof params['obj'] != \"undefined\") {\n            this.asn1Object = params['obj'];\n            this.setASN1Object(this.isExplicit, this.hT, this.asn1Object);\n        }\n    }\n};\nYAHOO.lang.extend(KJUR.asn1.DERTaggedObject, KJUR.asn1.ASN1Object);\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { hex2b64 } from \"./lib/jsbn/base64\";\nimport { Hex } from \"./lib/asn1js/hex\";\nimport { Base64 } from \"./lib/asn1js/base64\";\nimport { ASN1 } from \"./lib/asn1js/asn1\";\nimport { RSAKey } from \"./lib/jsbn/rsa\";\nimport { parseBigInt } from \"./lib/jsbn/jsbn\";\nimport { KJUR } from \"./lib/jsrsasign/asn1-1.0\";\n/**\n * Create a new JSEncryptRSAKey that extends Tom Wu's RSA key object.\n * This object is just a decorator for parsing the key parameter\n * @param {string|Object} key - The key in string format, or an object containing\n * the parameters needed to build a RSAKey object.\n * @constructor\n */\nvar JSEncryptRSAKey = /** @class */ (function (_super) {\n    __extends(JSEncryptRSAKey, _super);\n    function JSEncryptRSAKey(key) {\n        var _this = _super.call(this) || this;\n        // Call the super constructor.\n        //  RSAKey.call(this);\n        // If a key key was provided.\n        if (key) {\n            // If this is a string...\n            if (typeof key === \"string\") {\n                _this.parseKey(key);\n            }\n            else if (JSEncryptRSAKey.hasPrivateKeyProperty(key) ||\n                JSEncryptRSAKey.hasPublicKeyProperty(key)) {\n                // Set the values for the key.\n                _this.parsePropertiesFrom(key);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Method to parse a pem encoded string containing both a public or private key.\n     * The method will translate the pem encoded string in a der encoded string and\n     * will parse private key and public key parameters. This method accepts public key\n     * in the rsaencryption pkcs #1 format (oid: 1.2.840.113549.1.1.1).\n     *\n     * @todo Check how many rsa formats use the same format of pkcs #1.\n     *\n     * The format is defined as:\n     * PublicKeyInfo ::= SEQUENCE {\n     *   algorithm       AlgorithmIdentifier,\n     *   PublicKey       BIT STRING\n     * }\n     * Where AlgorithmIdentifier is:\n     * AlgorithmIdentifier ::= SEQUENCE {\n     *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm\n     *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)\n     * }\n     * and PublicKey is a SEQUENCE encapsulated in a BIT STRING\n     * RSAPublicKey ::= SEQUENCE {\n     *   modulus           INTEGER,  -- n\n     *   publicExponent    INTEGER   -- e\n     * }\n     * it's possible to examine the structure of the keys obtained from openssl using\n     * an asn.1 dumper as the one used here to parse the components: http://lapo.it/asn1js/\n     * @argument {string} pem the pem encoded string, can include the BEGIN/END header/footer\n     * @private\n     */\n    JSEncryptRSAKey.prototype.parseKey = function (pem) {\n        try {\n            var modulus = 0;\n            var public_exponent = 0;\n            var reHex = /^\\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\\s*)+$/;\n            var der = reHex.test(pem) ? Hex.decode(pem) : Base64.unarmor(pem);\n            var asn1 = ASN1.decode(der);\n            // Fixes a bug with OpenSSL 1.0+ private keys\n            if (asn1.sub.length === 3) {\n                asn1 = asn1.sub[2].sub[0];\n            }\n            if (asn1.sub.length === 9) {\n                // Parse the private key.\n                modulus = asn1.sub[1].getHexStringValue(); // bigint\n                this.n = parseBigInt(modulus, 16);\n                public_exponent = asn1.sub[2].getHexStringValue(); // int\n                this.e = parseInt(public_exponent, 16);\n                var private_exponent = asn1.sub[3].getHexStringValue(); // bigint\n                this.d = parseBigInt(private_exponent, 16);\n                var prime1 = asn1.sub[4].getHexStringValue(); // bigint\n                this.p = parseBigInt(prime1, 16);\n                var prime2 = asn1.sub[5].getHexStringValue(); // bigint\n                this.q = parseBigInt(prime2, 16);\n                var exponent1 = asn1.sub[6].getHexStringValue(); // bigint\n                this.dmp1 = parseBigInt(exponent1, 16);\n                var exponent2 = asn1.sub[7].getHexStringValue(); // bigint\n                this.dmq1 = parseBigInt(exponent2, 16);\n                var coefficient = asn1.sub[8].getHexStringValue(); // bigint\n                this.coeff = parseBigInt(coefficient, 16);\n            }\n            else if (asn1.sub.length === 2) {\n                if (asn1.sub[0].sub) {\n                    // Parse ASN.1 SubjectPublicKeyInfo type as defined by X.509\n                    var bit_string = asn1.sub[1];\n                    var sequence = bit_string.sub[0];\n                    modulus = sequence.sub[0].getHexStringValue();\n                    this.n = parseBigInt(modulus, 16);\n                    public_exponent = sequence.sub[1].getHexStringValue();\n                    this.e = parseInt(public_exponent, 16);\n                }\n                else {\n                    // Parse ASN.1 RSAPublicKey type as defined by PKCS #1\n                    modulus = asn1.sub[0].getHexStringValue();\n                    this.n = parseBigInt(modulus, 16);\n                    public_exponent = asn1.sub[1].getHexStringValue();\n                    this.e = parseInt(public_exponent, 16);\n                }\n            }\n            else {\n                return false;\n            }\n            return true;\n        }\n        catch (ex) {\n            return false;\n        }\n    };\n    /**\n     * Translate rsa parameters in a hex encoded string representing the rsa key.\n     *\n     * The translation follow the ASN.1 notation :\n     * RSAPrivateKey ::= SEQUENCE {\n     *   version           Version,\n     *   modulus           INTEGER,  -- n\n     *   publicExponent    INTEGER,  -- e\n     *   privateExponent   INTEGER,  -- d\n     *   prime1            INTEGER,  -- p\n     *   prime2            INTEGER,  -- q\n     *   exponent1         INTEGER,  -- d mod (p1)\n     *   exponent2         INTEGER,  -- d mod (q-1)\n     *   coefficient       INTEGER,  -- (inverse of q) mod p\n     * }\n     * @returns {string}  DER Encoded String representing the rsa private key\n     * @private\n     */\n    JSEncryptRSAKey.prototype.getPrivateBaseKey = function () {\n        var options = {\n            array: [\n                new KJUR.asn1.DERInteger({ int: 0 }),\n                new KJUR.asn1.DERInteger({ bigint: this.n }),\n                new KJUR.asn1.DERInteger({ int: this.e }),\n                new KJUR.asn1.DERInteger({ bigint: this.d }),\n                new KJUR.asn1.DERInteger({ bigint: this.p }),\n                new KJUR.asn1.DERInteger({ bigint: this.q }),\n                new KJUR.asn1.DERInteger({ bigint: this.dmp1 }),\n                new KJUR.asn1.DERInteger({ bigint: this.dmq1 }),\n                new KJUR.asn1.DERInteger({ bigint: this.coeff }),\n            ],\n        };\n        var seq = new KJUR.asn1.DERSequence(options);\n        return seq.getEncodedHex();\n    };\n    /**\n     * base64 (pem) encoded version of the DER encoded representation\n     * @returns {string} pem encoded representation without header and footer\n     * @public\n     */\n    JSEncryptRSAKey.prototype.getPrivateBaseKeyB64 = function () {\n        return hex2b64(this.getPrivateBaseKey());\n    };\n    /**\n     * Translate rsa parameters in a hex encoded string representing the rsa public key.\n     * The representation follow the ASN.1 notation :\n     * PublicKeyInfo ::= SEQUENCE {\n     *   algorithm       AlgorithmIdentifier,\n     *   PublicKey       BIT STRING\n     * }\n     * Where AlgorithmIdentifier is:\n     * AlgorithmIdentifier ::= SEQUENCE {\n     *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm\n     *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)\n     * }\n     * and PublicKey is a SEQUENCE encapsulated in a BIT STRING\n     * RSAPublicKey ::= SEQUENCE {\n     *   modulus           INTEGER,  -- n\n     *   publicExponent    INTEGER   -- e\n     * }\n     * @returns {string} DER Encoded String representing the rsa public key\n     * @private\n     */\n    JSEncryptRSAKey.prototype.getPublicBaseKey = function () {\n        var first_sequence = new KJUR.asn1.DERSequence({\n            array: [\n                new KJUR.asn1.DERObjectIdentifier({ oid: \"1.2.840.113549.1.1.1\" }),\n                new KJUR.asn1.DERNull(),\n            ],\n        });\n        var second_sequence = new KJUR.asn1.DERSequence({\n            array: [\n                new KJUR.asn1.DERInteger({ bigint: this.n }),\n                new KJUR.asn1.DERInteger({ int: this.e }),\n            ],\n        });\n        var bit_string = new KJUR.asn1.DERBitString({\n            hex: \"00\" + second_sequence.getEncodedHex(),\n        });\n        var seq = new KJUR.asn1.DERSequence({\n            array: [first_sequence, bit_string],\n        });\n        return seq.getEncodedHex();\n    };\n    /**\n     * base64 (pem) encoded version of the DER encoded representation\n     * @returns {string} pem encoded representation without header and footer\n     * @public\n     */\n    JSEncryptRSAKey.prototype.getPublicBaseKeyB64 = function () {\n        return hex2b64(this.getPublicBaseKey());\n    };\n    /**\n     * wrap the string in block of width chars. The default value for rsa keys is 64\n     * characters.\n     * @param {string} str the pem encoded string without header and footer\n     * @param {Number} [width=64] - the length the string has to be wrapped at\n     * @returns {string}\n     * @private\n     */\n    JSEncryptRSAKey.wordwrap = function (str, width) {\n        width = width || 64;\n        if (!str) {\n            return str;\n        }\n        var regex = \"(.{1,\" + width + \"})( +|$\\n?)|(.{1,\" + width + \"})\";\n        return str.match(RegExp(regex, \"g\")).join(\"\\n\");\n    };\n    /**\n     * Retrieve the pem encoded private key\n     * @returns {string} the pem encoded private key with header/footer\n     * @public\n     */\n    JSEncryptRSAKey.prototype.getPrivateKey = function () {\n        var key = \"-----BEGIN RSA PRIVATE KEY-----\\n\";\n        key += JSEncryptRSAKey.wordwrap(this.getPrivateBaseKeyB64()) + \"\\n\";\n        key += \"-----END RSA PRIVATE KEY-----\";\n        return key;\n    };\n    /**\n     * Retrieve the pem encoded public key\n     * @returns {string} the pem encoded public key with header/footer\n     * @public\n     */\n    JSEncryptRSAKey.prototype.getPublicKey = function () {\n        var key = \"-----BEGIN PUBLIC KEY-----\\n\";\n        key += JSEncryptRSAKey.wordwrap(this.getPublicBaseKeyB64()) + \"\\n\";\n        key += \"-----END PUBLIC KEY-----\";\n        return key;\n    };\n    /**\n     * Check if the object contains the necessary parameters to populate the rsa modulus\n     * and public exponent parameters.\n     * @param {Object} [obj={}] - An object that may contain the two public key\n     * parameters\n     * @returns {boolean} true if the object contains both the modulus and the public exponent\n     * properties (n and e)\n     * @todo check for types of n and e. N should be a parseable bigInt object, E should\n     * be a parseable integer number\n     * @private\n     */\n    JSEncryptRSAKey.hasPublicKeyProperty = function (obj) {\n        obj = obj || {};\n        return obj.hasOwnProperty(\"n\") && obj.hasOwnProperty(\"e\");\n    };\n    /**\n     * Check if the object contains ALL the parameters of an RSA key.\n     * @param {Object} [obj={}] - An object that may contain nine rsa key\n     * parameters\n     * @returns {boolean} true if the object contains all the parameters needed\n     * @todo check for types of the parameters all the parameters but the public exponent\n     * should be parseable bigint objects, the public exponent should be a parseable integer number\n     * @private\n     */\n    JSEncryptRSAKey.hasPrivateKeyProperty = function (obj) {\n        obj = obj || {};\n        return (obj.hasOwnProperty(\"n\") &&\n            obj.hasOwnProperty(\"e\") &&\n            obj.hasOwnProperty(\"d\") &&\n            obj.hasOwnProperty(\"p\") &&\n            obj.hasOwnProperty(\"q\") &&\n            obj.hasOwnProperty(\"dmp1\") &&\n            obj.hasOwnProperty(\"dmq1\") &&\n            obj.hasOwnProperty(\"coeff\"));\n    };\n    /**\n     * Parse the properties of obj in the current rsa object. Obj should AT LEAST\n     * include the modulus and public exponent (n, e) parameters.\n     * @param {Object} obj - the object containing rsa parameters\n     * @private\n     */\n    JSEncryptRSAKey.prototype.parsePropertiesFrom = function (obj) {\n        this.n = obj.n;\n        this.e = obj.e;\n        if (obj.hasOwnProperty(\"d\")) {\n            this.d = obj.d;\n            this.p = obj.p;\n            this.q = obj.q;\n            this.dmp1 = obj.dmp1;\n            this.dmq1 = obj.dmq1;\n            this.coeff = obj.coeff;\n        }\n    };\n    return JSEncryptRSAKey;\n}(RSAKey));\nexport { JSEncryptRSAKey };\n","var _a;\nimport { b64tohex, hex2b64 } from \"./lib/jsbn/base64\";\nimport { JSEncryptRSAKey } from \"./JSEncryptRSAKey\";\nvar version = typeof process !== 'undefined'\n    ? (_a = process.env) === null || _a === void 0 ? void 0 : _a.npm_package_version\n    : undefined;\n/**\n *\n * @param {Object} [options = {}] - An object to customize JSEncrypt behaviour\n * possible parameters are:\n * - default_key_size        {number}  default: 1024 the key size in bit\n * - default_public_exponent {string}  default: '010001' the hexadecimal representation of the public exponent\n * - log                     {boolean} default: false whether log warn/error or not\n * @constructor\n */\nvar JSEncrypt = /** @class */ (function () {\n    function JSEncrypt(options) {\n        if (options === void 0) { options = {}; }\n        options = options || {};\n        this.default_key_size = options.default_key_size\n            ? parseInt(options.default_key_size, 10)\n            : 1024;\n        this.default_public_exponent = options.default_public_exponent || \"010001\"; // 65537 default openssl public exponent for rsa key type\n        this.log = options.log || false;\n        // The private and public key.\n        this.key = null;\n    }\n    /**\n     * Method to set the rsa key parameter (one method is enough to set both the public\n     * and the private key, since the private key contains the public key paramenters)\n     * Log a warning if logs are enabled\n     * @param {Object|string} key the pem encoded string or an object (with or without header/footer)\n     * @public\n     */\n    JSEncrypt.prototype.setKey = function (key) {\n        if (this.log && this.key) {\n            console.warn(\"A key was already set, overriding existing.\");\n        }\n        this.key = new JSEncryptRSAKey(key);\n    };\n    /**\n     * Proxy method for setKey, for api compatibility\n     * @see setKey\n     * @public\n     */\n    JSEncrypt.prototype.setPrivateKey = function (privkey) {\n        // Create the key.\n        this.setKey(privkey);\n    };\n    /**\n     * Proxy method for setKey, for api compatibility\n     * @see setKey\n     * @public\n     */\n    JSEncrypt.prototype.setPublicKey = function (pubkey) {\n        // Sets the public key.\n        this.setKey(pubkey);\n    };\n    /**\n     * Proxy method for RSAKey object's decrypt, decrypt the string using the private\n     * components of the rsa key object. Note that if the object was not set will be created\n     * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor\n     * @param {string} str base64 encoded crypted string to decrypt\n     * @return {string} the decrypted string\n     * @public\n     */\n    JSEncrypt.prototype.decrypt = function (str) {\n        // Return the decrypted string.\n        try {\n            return this.getKey().decrypt(b64tohex(str));\n        }\n        catch (ex) {\n            return false;\n        }\n    };\n    /**\n     * Proxy method for RSAKey object's encrypt, encrypt the string using the public\n     * components of the rsa key object. Note that if the object was not set will be created\n     * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor\n     * @param {string} str the string to encrypt\n     * @return {string} the encrypted string encoded in base64\n     * @public\n     */\n    JSEncrypt.prototype.encrypt = function (str) {\n        // Return the encrypted string.\n        try {\n            return hex2b64(this.getKey().encrypt(str));\n        }\n        catch (ex) {\n            return false;\n        }\n    };\n    /**\n     * Proxy method for RSAKey object's sign.\n     * @param {string} str the string to sign\n     * @param {function} digestMethod hash method\n     * @param {string} digestName the name of the hash algorithm\n     * @return {string} the signature encoded in base64\n     * @public\n     */\n    JSEncrypt.prototype.sign = function (str, digestMethod, digestName) {\n        // return the RSA signature of 'str' in 'hex' format.\n        try {\n            return hex2b64(this.getKey().sign(str, digestMethod, digestName));\n        }\n        catch (ex) {\n            return false;\n        }\n    };\n    /**\n     * Proxy method for RSAKey object's verify.\n     * @param {string} str the string to verify\n     * @param {string} signature the signature encoded in base64 to compare the string to\n     * @param {function} digestMethod hash method\n     * @return {boolean} whether the data and signature match\n     * @public\n     */\n    JSEncrypt.prototype.verify = function (str, signature, digestMethod) {\n        // Return the decrypted 'digest' of the signature.\n        try {\n            return this.getKey().verify(str, b64tohex(signature), digestMethod);\n        }\n        catch (ex) {\n            return false;\n        }\n    };\n    /**\n     * Getter for the current JSEncryptRSAKey object. If it doesn't exists a new object\n     * will be created and returned\n     * @param {callback} [cb] the callback to be called if we want the key to be generated\n     * in an async fashion\n     * @returns {JSEncryptRSAKey} the JSEncryptRSAKey object\n     * @public\n     */\n    JSEncrypt.prototype.getKey = function (cb) {\n        // Only create new if it does not exist.\n        if (!this.key) {\n            // Get a new private key.\n            this.key = new JSEncryptRSAKey();\n            if (cb && {}.toString.call(cb) === \"[object Function]\") {\n                this.key.generateAsync(this.default_key_size, this.default_public_exponent, cb);\n                return;\n            }\n            // Generate the key.\n            this.key.generate(this.default_key_size, this.default_public_exponent);\n        }\n        return this.key;\n    };\n    /**\n     * Returns the pem encoded representation of the private key\n     * If the key doesn't exists a new key will be created\n     * @returns {string} pem encoded representation of the private key WITH header and footer\n     * @public\n     */\n    JSEncrypt.prototype.getPrivateKey = function () {\n        // Return the private representation of this key.\n        return this.getKey().getPrivateKey();\n    };\n    /**\n     * Returns the pem encoded representation of the private key\n     * If the key doesn't exists a new key will be created\n     * @returns {string} pem encoded representation of the private key WITHOUT header and footer\n     * @public\n     */\n    JSEncrypt.prototype.getPrivateKeyB64 = function () {\n        // Return the private representation of this key.\n        return this.getKey().getPrivateBaseKeyB64();\n    };\n    /**\n     * Returns the pem encoded representation of the public key\n     * If the key doesn't exists a new key will be created\n     * @returns {string} pem encoded representation of the public key WITH header and footer\n     * @public\n     */\n    JSEncrypt.prototype.getPublicKey = function () {\n        // Return the private representation of this key.\n        return this.getKey().getPublicKey();\n    };\n    /**\n     * Returns the pem encoded representation of the public key\n     * If the key doesn't exists a new key will be created\n     * @returns {string} pem encoded representation of the public key WITHOUT header and footer\n     * @public\n     */\n    JSEncrypt.prototype.getPublicKeyB64 = function () {\n        // Return the private representation of this key.\n        return this.getKey().getPublicBaseKeyB64();\n    };\n    JSEncrypt.version = version;\n    return JSEncrypt;\n}());\nexport { JSEncrypt };\n","import { JSEncrypt } from './JSEncrypt';\nexport { JSEncrypt };\nexport default JSEncrypt;\n","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.7';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = typeof btoa === 'function' ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = typeof atob === 'function' ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n"],"names":["int2char","n","charAt","op_and","x","y","op_or","op_xor","op_andnot","lbit","r","cbit","decoder","b64map","hex2b64","h","i","c","ret","length","parseInt","substring","b64tohex","s","k","slop","v","indexOf","Hex","a","undefined","hex","ignore","toLowerCase","out","bits","char_count","Error","Base64","decode","Object","create","re","unarmor","m","exec","max","Int10","value","this","buf","prototype","mulAdd","t","b","l","sub","pop","toString","base","valueOf","simplify","reTimeS","reTimeL","stringCut","str","len","dbits","Stream","enc","pos","hexDigits","get","concat","charCodeAt","hexByte","hexDump","start","end","raw","isASCII","parseStringISO","String","fromCharCode","parseStringUTF","parseStringBMP","hi","lo","parseTime","shortYear","parseInteger","neg","pad","parseBitString","maxLength","unusedBit","intro","skip","j","parseOctetString","parseOID","ASN1","stream","header","tag","ASN1Tag","typeName","tagClass","tagNumber","content","Infinity","posContent","Math","abs","isUniversal","toPrettyString","indent","tagConstructed","posStart","posEnd","toHexString","decodeLength","getHexStringValue","hexString","offset","substr","streamStart","getSub","isEOC","e","lowprimes","lplim","BigInteger","fromNumber","fromString","negate","toRadix","d","km","p","DB","nbi","ZERO","subTo","compareTo","bitLength","nbits","DM","mod","divRemTo","modPowInt","z","isEven","Classic","Montgomery","exp","clone","copyTo","intValue","DV","byteValue","shortValue","signum","toByteArray","equals","min","and","bitwiseTo","or","xor","andNot","not","shiftLeft","rShiftTo","lShiftTo","shiftRight","getLowestSetBit","bitCount","testBit","floor","setBit","changeBit","clearBit","flipBit","add","addTo","subtract","multiply","multiplyTo","divide","remainder","divideAndRemainder","q","modPow","nbv","Barrett","g","k1","convert","g2","sqrTo","mulTo","w","is1","r2","revert","modInverse","ac","u","ONE","pow","NullExp","gcd","isProbablePrime","modInt","millerRabin","fromInt","fromRadix","mi","sh","intAt","clamp","dlShiftTo","drShiftTo","bs","cbs","bm","ds","am","squareTo","pm","pt","ts","ms","nsh","ys","y0","yt","F1","F2","d1","FV","d2","qd","invDigit","chunkSize","LN2","log","cs","dMultiply","dAddOffset","nextBytes","op","f","multiplyLowerTo","multiplyUpperTo","n1","random","square","gcda","callback","gcda1","setTimeout","fromNumberAsync","bnp_1","bnpfn1_1","reduce","mp","mpl","mph","um","mt2","u0","q3","mu","parseBigInt","inBrowser","navigator","appName","xl","xh","rr","vv","BI_RC","Arcfour","S","init","key","next","rng_state","rng_pptr","rng_pool","window","crypto","getRandomValues","Uint32Array","count","onMouseMoveListener_1","ev","removeEventListener","detachEvent","mouseCoordinates","addEventListener","attachEvent","rng_get_byte","SecureRandom","ba","RSAKey","dmp1","dmq1","coeff","doPublic","doPrivate","xp","xq","setPublic","N","E","console","error","encrypt","text","rng","pkcs1pad2","setPrivate","D","setPrivateEx","P","Q","DP","DQ","C","generate","B","qs","ee","p1","q1","phi","decrypt","ctext","pkcs1unpad2","generateAsync","rsa","loop1","loop4","loop3","loop2","sign","digestMethod","digestName","filler","pkcs1pad1","DIGEST_HEADERS","verify","signature","name_1","hasOwnProperty","removeDigestHeader","replace","md2","md5","sha1","sha224","sha256","sha384","sha512","ripemd160","YAHOO","lang","extend","subc","superc","overrides","F","constructor","superclass","_IEEnumFix","ADD","test","userAgent","fname","ex","KJUR","asn1","ASN1Util","integerToByteHex","bigIntToMinTwosComplementsHex","bigIntegerValue","match","xorLen","hMask","getPEMStringFromHex","dataHex","pemHeader","hextopem","newObject","param","_KJUR_asn1","_DERBoolean","DERBoolean","_DERInteger","DERInteger","_DERBitString","DERBitString","_DEROctetString","DEROctetString","_DERNull","DERNull","_DERObjectIdentifier","DERObjectIdentifier","_DEREnumerated","DEREnumerated","_DERUTF8String","DERUTF8String","_DERNumericString","DERNumericString","_DERPrintableString","DERPrintableString","_DERTeletexString","DERTeletexString","_DERIA5String","DERIA5String","_DERUTCTime","DERUTCTime","_DERGeneralizedTime","DERGeneralizedTime","_DERSequence","DERSequence","_DERSet","DERSet","_DERTaggedObject","DERTaggedObject","_newObject","keys","paramList","asn1Obj","push","tagParam","call","obj","explicit","newParam","jsonToASN1HEX","getEncodedHex","oidHexToInt","i01","binbuf","bin","slice","oidIntToHex","oidString","itox","roidtox","roid","padLen","bPad","b8","split","i0","splice","ASN1Object","getLengthHexFromValue","hV","hN","hNlen","hTLV","isModified","getFreshValueHex","hL","hT","getValueHex","DERAbstractString","params","getString","setString","newS","stohex","setStringHex","newHexString","DERAbstractTime","localDateToUTC","utc","getTime","getTimezoneOffset","Date","formatDate","dateObject","type","withMillis","zeroPadding","year","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","millis","getMilliseconds","sMillis","Array","join","setByDateValue","month","day","hour","sec","UTC","setByDate","DERAbstractStructured","setByASN1ObjectArray","asn1ObjectArray","asn1Array","appendASN1Object","asn1Object","setByBigInteger","setByInteger","bi","setValueHex","o","setHexValueIncludingUnusedBits","newHexStringIncludingUnusedBits","setUnusedBitsAndHexValue","unusedBits","hValue","hUnusedBits","setByBinaryString","binaryString","setByBooleanArray","booleanArray","newFalseArray","nLength","setValueOidString","setValueName","oidName","oid","x509","OID","name2oid","name","date","sortFlag","sort","sortflag","isExplicit","setASN1Object","isExplicitFlag","tagNoHex","extendStatics","_a","__extends","setPrototypeOf","__proto__","TypeError","__","JSEncryptRSAKey","_super","_this","parseKey","hasPrivateKeyProperty","hasPublicKeyProperty","parsePropertiesFrom","pem","modulus","public_exponent","der","private_exponent","prime1","prime2","exponent1","exponent2","coefficient","sequence","getPrivateBaseKey","options","array","int","bigint","getPrivateBaseKeyB64","getPublicBaseKey","first_sequence","second_sequence","bit_string","getPublicBaseKeyB64","wordwrap","width","regex","RegExp","getPrivateKey","getPublicKey","version","npm_package_version","JSEncrypt","default_key_size","default_public_exponent","setKey","warn","setPrivateKey","privkey","setPublicKey","pubkey","getKey","cb","getPrivateKeyB64","getPublicKeyB64","VERSION","_hasBuffer","Buffer","_TD","TextDecoder","_TE","TextEncoder","b64chs","b64tab","tab","forEach","b64re","_fromCC","bind","_U8Afrom","Uint8Array","from","it","_mkUriSafe","src","m0","_tidyB64","btoaPolyfill","u32","c0","c1","c2","asc","_btoa","btoa","_fromUint8Array","u8a","strs","apply","subarray","fromUint8Array","urlsafe","cb_utob","cc","re_utob","utob","_encode","encode","encodeURI","re_btou","cb_btou","cccc","btou","atobPolyfill","u24","r1","_atob","atob","_toUint8Array","map","toUint8Array","_unURI","_decode","_noEnum","enumerable","writable","configurable","extendString","_add","body","defineProperty","extendUint8Array","gBase64","fromBase64","toBase64","encodeURL","isValid","extendBuiltins"],"sourceRoot":""}