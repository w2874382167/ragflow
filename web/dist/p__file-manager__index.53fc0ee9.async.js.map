{"version":3,"file":"p__file-manager__index.53fc0ee9.async.js","mappings":"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","sources":["webpack://web/./src/components/file-upload-modal/index.less?4e00","webpack://web/./src/components/file-upload-modal/index.tsx","webpack://web/./src/components/new-document-link.tsx","webpack://web/./src/components/rename-modal/index.tsx","webpack://web/./src/components/svg-icon.tsx","webpack://web/./src/hooks/file-manager-hooks.ts","webpack://web/./src/pages/file-manager/hooks.ts","webpack://web/./src/pages/file-manager/action-cell/index.tsx","webpack://web/./src/pages/file-manager/index.less?4007","webpack://web/./src/pages/file-manager/file-toolbar.tsx","webpack://web/./src/pages/file-manager/connect-to-knowledge-modal/index.tsx","webpack://web/./src/pages/file-manager/folder-create-modal/index.tsx","webpack://web/./src/pages/file-manager/move-file-modal/async-tree-select.tsx","webpack://web/./src/pages/file-manager/move-file-modal/index.tsx","webpack://web/./src/pages/file-manager/index.tsx","webpack://web/./src/services/file-manager-service.ts","webpack://web/./src/utils/date.ts","webpack://web/./src/utils/document-util.ts","webpack://web/./src/utils/file-util.ts","webpack://web/./src/assets/svg/ sync \\.svg$"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"uploader\":\"uploader___ezBcw\",\"uploadLimit\":\"uploadLimit___bpygu\"};","import { useTranslate } from '@/hooks/common-hooks';\nimport { IModalProps } from '@/interfaces/common';\nimport { InboxOutlined } from '@ant-design/icons';\nimport {\n  Checkbox,\n  Flex,\n  Modal,\n  Progress,\n  Segmented,\n  Tabs,\n  TabsProps,\n  Upload,\n  UploadFile,\n  UploadProps,\n} from 'antd';\nimport { Dispatch, SetStateAction, useState } from 'react';\n\nimport styles from './index.less';\n\nconst { Dragger } = Upload;\n\nconst FileUpload = ({\n  directory,\n  fileList,\n  setFileList,\n  uploadProgress,\n}: {\n  directory: boolean;\n  fileList: UploadFile[];\n  setFileList: Dispatch<SetStateAction<UploadFile[]>>;\n  uploadProgress?: number;\n}) => {\n  const { t } = useTranslate('fileManager');\n  const props: UploadProps = {\n    multiple: true,\n    onRemove: (file) => {\n      const index = fileList.indexOf(file);\n      const newFileList = fileList.slice();\n      newFileList.splice(index, 1);\n      setFileList(newFileList);\n    },\n    beforeUpload: (file: UploadFile) => {\n      setFileList((pre) => {\n        return [...pre, file];\n      });\n\n      return false;\n    },\n    directory,\n    fileList,\n    progress: {\n      strokeWidth: 2,\n    },\n  };\n\n  return (\n    <>\n      <Progress percent={uploadProgress} showInfo={false} />\n      <Dragger {...props} className={styles.uploader}>\n        <p className=\"ant-upload-drag-icon\">\n          <InboxOutlined />\n        </p>\n        <p className=\"ant-upload-text\">{t('uploadTitle')}</p>\n        <p className=\"ant-upload-hint\">{t('uploadDescription')}</p>\n        {false && <p className={styles.uploadLimit}>{t('uploadLimit')}</p>}\n      </Dragger>\n    </>\n  );\n};\n\ninterface IFileUploadModalProps\n  extends IModalProps<\n    { parseOnCreation: boolean; directoryFileList: UploadFile[] } | UploadFile[]\n  > {\n  uploadFileList?: UploadFile[];\n  setUploadFileList?: Dispatch<SetStateAction<UploadFile[]>>;\n  uploadProgress?: number;\n  setUploadProgress?: Dispatch<SetStateAction<number>>;\n}\n\nconst FileUploadModal = ({\n  visible,\n  hideModal,\n  loading,\n  onOk: onFileUploadOk,\n  uploadFileList: fileList,\n  setUploadFileList: setFileList,\n  uploadProgress,\n  setUploadProgress,\n}: IFileUploadModalProps) => {\n  const { t } = useTranslate('fileManager');\n  const [value, setValue] = useState<string | number>('local');\n  const [parseOnCreation, setParseOnCreation] = useState(false);\n  const [currentFileList, setCurrentFileList] = useState<UploadFile[]>([]);\n  const [directoryFileList, setDirectoryFileList] = useState<UploadFile[]>([]);\n\n  const clearFileList = () => {\n    if (setFileList) {\n      setFileList([]);\n      setUploadProgress?.(0);\n    } else {\n      setCurrentFileList([]);\n    }\n    setDirectoryFileList([]);\n  };\n\n  const onOk = async () => {\n    if (uploadProgress === 100) {\n      hideModal?.();\n      return;\n    }\n\n    const ret = await onFileUploadOk?.(\n      fileList\n        ? { parseOnCreation, directoryFileList }\n        : [...currentFileList, ...directoryFileList],\n    );\n    return ret;\n  };\n\n  const afterClose = () => {\n    clearFileList();\n  };\n\n  const items: TabsProps['items'] = [\n    {\n      key: '1',\n      label: t('file'),\n      children: (\n        <FileUpload\n          directory={false}\n          fileList={fileList ? fileList : currentFileList}\n          setFileList={setFileList ? setFileList : setCurrentFileList}\n          uploadProgress={uploadProgress}\n        ></FileUpload>\n      ),\n    },\n    {\n      key: '2',\n      label: t('directory'),\n      children: (\n        <FileUpload\n          directory\n          fileList={directoryFileList}\n          setFileList={setDirectoryFileList}\n          uploadProgress={uploadProgress}\n        ></FileUpload>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <Modal\n        title={t('uploadFile')}\n        open={visible}\n        onOk={onOk}\n        onCancel={hideModal}\n        confirmLoading={loading}\n        afterClose={afterClose}\n      >\n        <Flex gap={'large'} vertical>\n          <Segmented\n            options={[\n              { label: t('local'), value: 'local' },\n              { label: t('s3'), value: 's3' },\n            ]}\n            block\n            value={value}\n            onChange={setValue}\n          />\n          {value === 'local' ? (\n            <>\n              <Checkbox\n                checked={parseOnCreation}\n                onChange={(e) => setParseOnCreation(e.target.checked)}\n              >\n                {t('parseOnCreation')}\n              </Checkbox>\n              <Tabs defaultActiveKey=\"1\" items={items} />\n            </>\n          ) : (\n            t('comingSoon', { keyPrefix: 'common' })\n          )}\n        </Flex>\n      </Modal>\n    </>\n  );\n};\n\nexport default FileUploadModal;\n","import {\n  getExtension,\n  isSupportedPreviewDocumentType,\n} from '@/utils/document-util';\nimport React from 'react';\n\ninterface IProps extends React.PropsWithChildren {\n  link?: string;\n  preventDefault?: boolean;\n  color?: string;\n  documentName: string;\n  documentId?: string;\n  prefix?: string;\n}\n\nconst NewDocumentLink = ({\n  children,\n  link,\n  preventDefault = false,\n  color = 'rgb(15, 79, 170)',\n  documentId,\n  documentName,\n  prefix = 'file',\n}: IProps) => {\n  let nextLink = link;\n  const extension = getExtension(documentName);\n  if (!link) {\n    nextLink = `/document/${documentId}?ext=${extension}&prefix=${prefix}`;\n  }\n\n  return (\n    <a\n      target=\"_blank\"\n      onClick={\n        !preventDefault || isSupportedPreviewDocumentType(extension)\n          ? undefined\n          : (e) => e.preventDefault()\n      }\n      href={nextLink}\n      rel=\"noreferrer\"\n      style={{ color, wordBreak: 'break-all' }}\n    >\n      {children}\n    </a>\n  );\n};\n\nexport default NewDocumentLink;\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Input, Modal } from 'antd';\nimport { useEffect } from 'react';\nimport { IModalManagerChildrenProps } from '../modal-manager';\n\ninterface IProps extends Omit<IModalManagerChildrenProps, 'showModal'> {\n  loading: boolean;\n  initialName: string;\n  onOk: (name: string) => void;\n  showModal?(): void;\n}\n\nconst RenameModal = ({\n  visible,\n  hideModal,\n  loading,\n  initialName,\n  onOk,\n}: IProps) => {\n  const [form] = Form.useForm();\n  const { t } = useTranslate('common');\n\n  type FieldType = {\n    name?: string;\n  };\n\n  const handleOk = async () => {\n    const ret = await form.validateFields();\n\n    return onOk(ret.name);\n  };\n\n  const handleCancel = () => {\n    hideModal();\n  };\n\n  const onFinish = (values: any) => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  useEffect(() => {\n    if (visible) {\n      form.setFieldValue('name', initialName);\n    }\n  }, [initialName, form, visible]);\n\n  return (\n    <Modal\n      title={t('rename')}\n      open={visible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      okButtonProps={{ loading }}\n      confirmLoading={loading}\n    >\n      <Form\n        name=\"basic\"\n        labelCol={{ span: 4 }}\n        wrapperCol={{ span: 20 }}\n        style={{ maxWidth: 600 }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"off\"\n        form={form}\n      >\n        <Form.Item<FieldType>\n          label={t('name')}\n          name=\"name\"\n          rules={[{ required: true, message: t('namePlaceholder') }]}\n        >\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default RenameModal;\n","import { IconMap } from '@/constants/llm';\nimport { cn } from '@/lib/utils';\nimport Icon, { UserOutlined } from '@ant-design/icons';\nimport { IconComponentProps } from '@ant-design/icons/lib/components/Icon';\nimport { Avatar } from 'antd';\nimport { AvatarSize } from 'antd/es/avatar/AvatarContext';\n\nconst importAll = (requireContext: __WebpackModuleApi.RequireContext) => {\n  const list = requireContext.keys().map((key) => {\n    const name = key.replace(/\\.\\/(.*)\\.\\w+$/, '$1');\n    return { name, value: requireContext(key) };\n  });\n  return list;\n};\n\nlet routeList: { name: string; value: string }[] = [];\n\ntry {\n  routeList = importAll(require.context('@/assets/svg', true, /\\.svg$/));\n} catch (error) {\n  console.warn(error);\n  routeList = [];\n}\n\ninterface IProps extends IconComponentProps {\n  name: string;\n  width: string | number;\n  height?: string | number;\n  imgClass?: string;\n}\n\nconst SvgIcon = ({ name, width, height, imgClass, ...restProps }: IProps) => {\n  const ListItem = routeList.find((item) => item.name === name);\n  return (\n    <Icon\n      component={() => (\n        <img\n          src={ListItem?.value}\n          alt=\"\"\n          width={width}\n          height={height}\n          className={cn(imgClass, 'max-w-full')}\n        />\n      )}\n      {...(restProps as any)}\n    />\n  );\n};\n\nexport const LlmIcon = ({\n  name,\n  height = 48,\n  width = 48,\n  size = 'large',\n  imgClass,\n}: {\n  name: string;\n  height?: number;\n  width?: number;\n  size?: AvatarSize;\n  imgClass?: string;\n}) => {\n  const icon = IconMap[name as keyof typeof IconMap];\n\n  return icon ? (\n    <SvgIcon\n      name={`llm/${icon}`}\n      width={width}\n      height={height}\n      imgClass={imgClass}\n    ></SvgIcon>\n  ) : (\n    <Avatar shape=\"square\" size={size} icon={<UserOutlined />} />\n  );\n};\n\nexport default SvgIcon;\n","import { ResponseType } from '@/interfaces/database/base';\nimport { IFolder } from '@/interfaces/database/file-manager';\nimport { IConnectRequestBody } from '@/interfaces/request/file-manager';\nimport fileManagerService from '@/services/file-manager-service';\nimport { downloadFileFromBlob } from '@/utils/file-util';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { PaginationProps, UploadFile, message } from 'antd';\nimport React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSearchParams } from 'umi';\nimport {\n  useGetPaginationWithRouter,\n  useHandleSearchChange,\n} from './logic-hooks';\nimport { useSetPaginationParams } from './route-hook';\n\nexport const useGetFolderId = () => {\n  const [searchParams] = useSearchParams();\n  const id = searchParams.get('folderId') as string;\n\n  return id ?? '';\n};\n\nexport interface IListResult {\n  searchString: string;\n  handleInputChange: React.ChangeEventHandler<HTMLInputElement>;\n  pagination: PaginationProps;\n  setPagination: (pagination: { page: number; pageSize: number }) => void;\n  loading: boolean;\n}\n\nexport const useFetchPureFileList = () => {\n  const { mutateAsync, isPending: loading } = useMutation({\n    mutationKey: ['fetchPureFileList'],\n    gcTime: 0,\n\n    mutationFn: async (parentId: string) => {\n      const { data } = await fileManagerService.listFile({\n        parent_id: parentId,\n      });\n\n      return data;\n    },\n  });\n\n  return { loading, fetchList: mutateAsync };\n};\n\nexport const useFetchFileList = (): ResponseType<any> & IListResult => {\n  const { searchString, handleInputChange } = useHandleSearchChange();\n  const { pagination, setPagination } = useGetPaginationWithRouter();\n  const id = useGetFolderId();\n\n  const { data, isFetching: loading } = useQuery({\n    queryKey: [\n      'fetchFileList',\n      {\n        id,\n        searchString,\n        ...pagination,\n      },\n    ],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await fileManagerService.listFile({\n        parent_id: id,\n        keywords: searchString,\n        page_size: pagination.pageSize,\n        page: pagination.current,\n      });\n\n      return data;\n    },\n  });\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = useCallback(\n    (e) => {\n      setPagination({ page: 1 });\n      handleInputChange(e);\n    },\n    [handleInputChange, setPagination],\n  );\n\n  return {\n    ...data,\n    searchString,\n    handleInputChange: onInputChange,\n    pagination: { ...pagination, total: data?.data?.total },\n    setPagination,\n    loading,\n  };\n};\n\nexport const useDeleteFile = () => {\n  const { setPaginationParams } = useSetPaginationParams();\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteFile'],\n    mutationFn: async (params: { fileIds: string[]; parentId: string }) => {\n      const { data } = await fileManagerService.removeFile(params);\n      if (data.code === 0) {\n        setPaginationParams(1); // TODO: There should be a better way to paginate the request list\n        queryClient.invalidateQueries({ queryKey: ['fetchFileList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteFile: mutateAsync };\n};\n\nexport const useDownloadFile = () => {\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['downloadFile'],\n    mutationFn: async (params: { id: string; filename?: string }) => {\n      const response = await fileManagerService.getFile({}, params.id);\n      const blob = new Blob([response.data], { type: response.data.type });\n      downloadFileFromBlob(blob, params.filename);\n    },\n  });\n  return { data, loading, downloadFile: mutateAsync };\n};\n\nexport const useRenameFile = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['renameFile'],\n    mutationFn: async (params: { fileId: string; name: string }) => {\n      const { data } = await fileManagerService.renameFile(params);\n      if (data.code === 0) {\n        message.success(t('message.renamed'));\n        queryClient.invalidateQueries({ queryKey: ['fetchFileList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, renameFile: mutateAsync };\n};\n\nexport const useFetchParentFolderList = (): IFolder[] => {\n  const id = useGetFolderId();\n  const { data } = useQuery({\n    queryKey: ['fetchParentFolderList', id],\n    initialData: [],\n    enabled: !!id,\n    queryFn: async () => {\n      const { data } = await fileManagerService.getAllParentFolder({\n        fileId: id,\n      });\n\n      return data?.data?.parent_folders?.toReversed() ?? [];\n    },\n  });\n\n  return data;\n};\n\nexport const useCreateFolder = () => {\n  const { setPaginationParams } = useSetPaginationParams();\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['createFolder'],\n    mutationFn: async (params: { parentId: string; name: string }) => {\n      const { data } = await fileManagerService.createFolder({\n        ...params,\n        type: 'folder',\n      });\n      if (data.code === 0) {\n        message.success(t('message.created'));\n        setPaginationParams(1);\n        queryClient.invalidateQueries({ queryKey: ['fetchFileList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, createFolder: mutateAsync };\n};\n\nexport const useUploadFile = () => {\n  const { setPaginationParams } = useSetPaginationParams();\n  const { t } = useTranslation();\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['uploadFile'],\n    mutationFn: async (params: {\n      fileList: UploadFile[];\n      parentId: string;\n    }) => {\n      const fileList = params.fileList;\n      const pathList = params.fileList.map(\n        (file) => (file as any).webkitRelativePath,\n      );\n      const formData = new FormData();\n      formData.append('parent_id', params.parentId);\n      fileList.forEach((file: any, index: number) => {\n        formData.append('file', file);\n        formData.append('path', pathList[index]);\n      });\n      try {\n        const ret = await fileManagerService.uploadFile(formData);\n        if (ret?.data.code === 0) {\n          message.success(t('message.uploaded'));\n          setPaginationParams(1);\n          queryClient.invalidateQueries({ queryKey: ['fetchFileList'] });\n        }\n        return ret?.data?.code;\n      } catch (error) {\n        console.log('🚀 ~ useUploadFile ~ error:', error);\n      }\n    },\n  });\n\n  return { data, loading, uploadFile: mutateAsync };\n};\n\nexport const useConnectToKnowledge = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['connectFileToKnowledge'],\n    mutationFn: async (params: IConnectRequestBody) => {\n      const { data } = await fileManagerService.connectFileToKnowledge(params);\n      if (data.code === 0) {\n        message.success(t('message.operated'));\n        queryClient.invalidateQueries({ queryKey: ['fetchFileList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, connectFileToKnowledge: mutateAsync };\n};\n\nexport interface IMoveFileBody {\n  src_file_ids: string[];\n  dest_file_id: string; // target folder id\n}\n\nexport const useMoveFile = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['moveFile'],\n    mutationFn: async (params: IMoveFileBody) => {\n      const { data } = await fileManagerService.moveFile(params);\n      if (data.code === 0) {\n        message.success(t('message.operated'));\n        queryClient.invalidateQueries({ queryKey: ['fetchFileList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, moveFile: mutateAsync };\n};\n","import { useSetModalState, useShowDeleteConfirm } from '@/hooks/common-hooks';\nimport {\n  useConnectToKnowledge,\n  useCreateFolder,\n  useDeleteFile,\n  useFetchParentFolderList,\n  useMoveFile,\n  useRenameFile,\n  useUploadFile,\n} from '@/hooks/file-manager-hooks';\nimport { IFile } from '@/interfaces/database/file-manager';\nimport { TableRowSelection } from 'antd/es/table/interface';\nimport { UploadFile } from 'antd/lib';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'umi';\n\nexport const useGetFolderId = () => {\n  const [searchParams] = useSearchParams();\n  const id = searchParams.get('folderId') as string;\n\n  return id ?? '';\n};\n\nexport const useGetRowSelection = () => {\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n\n  const rowSelection: TableRowSelection<IFile> = {\n    selectedRowKeys,\n    getCheckboxProps: (record) => {\n      return { disabled: record.source_type === 'knowledgebase' };\n    },\n    onChange: (newSelectedRowKeys: React.Key[]) => {\n      setSelectedRowKeys(newSelectedRowKeys);\n    },\n  };\n\n  return { rowSelection, setSelectedRowKeys };\n};\n\nexport const useNavigateToOtherFolder = () => {\n  const navigate = useNavigate();\n  const navigateToOtherFolder = useCallback(\n    (folderId: string) => {\n      navigate(`/file?folderId=${folderId}`);\n    },\n    [navigate],\n  );\n\n  return navigateToOtherFolder;\n};\n\nexport const useRenameCurrentFile = () => {\n  const [file, setFile] = useState<IFile>({} as IFile);\n  const {\n    visible: fileRenameVisible,\n    hideModal: hideFileRenameModal,\n    showModal: showFileRenameModal,\n  } = useSetModalState();\n  const { renameFile, loading } = useRenameFile();\n\n  const onFileRenameOk = useCallback(\n    async (name: string) => {\n      const ret = await renameFile({\n        fileId: file.id,\n        name,\n      });\n\n      if (ret === 0) {\n        hideFileRenameModal();\n      }\n    },\n    [renameFile, file, hideFileRenameModal],\n  );\n\n  const handleShowFileRenameModal = useCallback(\n    async (record: IFile) => {\n      setFile(record);\n      showFileRenameModal();\n    },\n    [showFileRenameModal],\n  );\n\n  return {\n    fileRenameLoading: loading,\n    initialFileName: file.name,\n    onFileRenameOk,\n    fileRenameVisible,\n    hideFileRenameModal,\n    showFileRenameModal: handleShowFileRenameModal,\n  };\n};\n\nexport const useSelectBreadcrumbItems = () => {\n  const parentFolderList = useFetchParentFolderList();\n\n  return parentFolderList.length === 1\n    ? []\n    : parentFolderList.map((x) => ({\n        title: x.name === '/' ? 'root' : x.name,\n        path: `/file?folderId=${x.id}`,\n      }));\n};\n\nexport const useHandleCreateFolder = () => {\n  const {\n    visible: folderCreateModalVisible,\n    hideModal: hideFolderCreateModal,\n    showModal: showFolderCreateModal,\n  } = useSetModalState();\n  const { createFolder, loading } = useCreateFolder();\n  const id = useGetFolderId();\n\n  const onFolderCreateOk = useCallback(\n    async (name: string) => {\n      const ret = await createFolder({ parentId: id, name });\n\n      if (ret === 0) {\n        hideFolderCreateModal();\n      }\n    },\n    [createFolder, hideFolderCreateModal, id],\n  );\n\n  return {\n    folderCreateLoading: loading,\n    onFolderCreateOk,\n    folderCreateModalVisible,\n    hideFolderCreateModal,\n    showFolderCreateModal,\n  };\n};\n\nexport const useHandleDeleteFile = (\n  fileIds: string[],\n  setSelectedRowKeys: (keys: string[]) => void,\n) => {\n  const { deleteFile: removeDocument } = useDeleteFile();\n  const showDeleteConfirm = useShowDeleteConfirm();\n  const parentId = useGetFolderId();\n\n  const handleRemoveFile = () => {\n    showDeleteConfirm({\n      onOk: async () => {\n        const code = await removeDocument({ fileIds, parentId });\n        if (code === 0) {\n          setSelectedRowKeys([]);\n        }\n        return;\n      },\n    });\n  };\n\n  return { handleRemoveFile };\n};\n\nexport const useHandleUploadFile = () => {\n  const {\n    visible: fileUploadVisible,\n    hideModal: hideFileUploadModal,\n    showModal: showFileUploadModal,\n  } = useSetModalState();\n  const { uploadFile, loading } = useUploadFile();\n  const id = useGetFolderId();\n\n  const onFileUploadOk = useCallback(\n    async (fileList: UploadFile[]): Promise<number | undefined> => {\n      if (fileList.length > 0) {\n        const ret: number = await uploadFile({ fileList, parentId: id });\n        if (ret === 0) {\n          hideFileUploadModal();\n        }\n        return ret;\n      }\n    },\n    [uploadFile, hideFileUploadModal, id],\n  );\n\n  return {\n    fileUploadLoading: loading,\n    onFileUploadOk,\n    fileUploadVisible,\n    hideFileUploadModal,\n    showFileUploadModal,\n  };\n};\n\nexport const useHandleConnectToKnowledge = () => {\n  const {\n    visible: connectToKnowledgeVisible,\n    hideModal: hideConnectToKnowledgeModal,\n    showModal: showConnectToKnowledgeModal,\n  } = useSetModalState();\n  const { connectFileToKnowledge: connectToKnowledge, loading } =\n    useConnectToKnowledge();\n  const [record, setRecord] = useState<IFile>({} as IFile);\n\n  const initialValue = useMemo(() => {\n    return Array.isArray(record?.kbs_info)\n      ? record?.kbs_info?.map((x) => x.kb_id)\n      : [];\n  }, [record?.kbs_info]);\n\n  const onConnectToKnowledgeOk = useCallback(\n    async (knowledgeIds: string[]) => {\n      const ret = await connectToKnowledge({\n        fileIds: [record.id],\n        kbIds: knowledgeIds,\n      });\n\n      if (ret === 0) {\n        hideConnectToKnowledgeModal();\n      }\n      return ret;\n    },\n    [connectToKnowledge, hideConnectToKnowledgeModal, record.id],\n  );\n\n  const handleShowConnectToKnowledgeModal = useCallback(\n    (record: IFile) => {\n      setRecord(record);\n      showConnectToKnowledgeModal();\n    },\n    [showConnectToKnowledgeModal],\n  );\n\n  return {\n    initialValue,\n    connectToKnowledgeLoading: loading,\n    onConnectToKnowledgeOk,\n    connectToKnowledgeVisible,\n    hideConnectToKnowledgeModal,\n    showConnectToKnowledgeModal: handleShowConnectToKnowledgeModal,\n  };\n};\n\nexport const useHandleBreadcrumbClick = () => {\n  const navigate = useNavigate();\n\n  const handleBreadcrumbClick = useCallback(\n    (path?: string) => {\n      if (path) {\n        navigate(path);\n      }\n    },\n    [navigate],\n  );\n\n  return { handleBreadcrumbClick };\n};\n\nexport const useHandleMoveFile = (\n  setSelectedRowKeys: (keys: string[]) => void,\n) => {\n  const {\n    visible: moveFileVisible,\n    hideModal: hideMoveFileModal,\n    showModal: showMoveFileModal,\n  } = useSetModalState();\n  const { moveFile, loading } = useMoveFile();\n  const [sourceFileIds, setSourceFileIds] = useState<string[]>([]);\n\n  const onMoveFileOk = useCallback(\n    async (targetFolderId: string) => {\n      const ret = await moveFile({\n        src_file_ids: sourceFileIds,\n        dest_file_id: targetFolderId,\n      });\n\n      if (ret === 0) {\n        setSelectedRowKeys([]);\n        hideMoveFileModal();\n      }\n      return ret;\n    },\n    [moveFile, hideMoveFileModal, sourceFileIds, setSelectedRowKeys],\n  );\n\n  const handleShowMoveFileModal = useCallback(\n    (ids: string[]) => {\n      setSourceFileIds(ids);\n      showMoveFileModal();\n    },\n    [showMoveFileModal],\n  );\n\n  return {\n    initialValue: '',\n    moveFileLoading: loading,\n    onMoveFileOk,\n    moveFileVisible,\n    hideMoveFileModal,\n    showMoveFileModal: handleShowMoveFileModal,\n  };\n};\n","import NewDocumentLink from '@/components/new-document-link';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useDownloadFile } from '@/hooks/file-manager-hooks';\nimport { IFile } from '@/interfaces/database/file-manager';\nimport {\n  getExtension,\n  isSupportedPreviewDocumentType,\n} from '@/utils/document-util';\nimport {\n  DownloadOutlined,\n  EditOutlined,\n  EyeOutlined,\n  LinkOutlined,\n} from '@ant-design/icons';\nimport { Button, Space, Tooltip } from 'antd';\nimport { FolderInput, Trash2 } from 'lucide-react';\nimport { useHandleDeleteFile } from '../hooks';\n\ninterface IProps {\n  record: IFile;\n  setCurrentRecord: (record: any) => void;\n  showRenameModal: (record: IFile) => void;\n  showMoveFileModal: (ids: string[]) => void;\n  showConnectToKnowledgeModal: (record: IFile) => void;\n  setSelectedRowKeys(keys: string[]): void;\n}\n\nconst ActionCell = ({\n  record,\n  setCurrentRecord,\n  showRenameModal,\n  showConnectToKnowledgeModal,\n  setSelectedRowKeys,\n  showMoveFileModal,\n}: IProps) => {\n  const documentId = record.id;\n  const beingUsed = false;\n  const { t } = useTranslate('fileManager');\n  const { handleRemoveFile } = useHandleDeleteFile(\n    [documentId],\n    setSelectedRowKeys,\n  );\n  const { downloadFile, loading } = useDownloadFile();\n  const extension = getExtension(record.name);\n  const isKnowledgeBase = record.source_type === 'knowledgebase';\n\n  const onDownloadDocument = () => {\n    downloadFile({\n      id: documentId,\n      filename: record.name,\n    });\n  };\n\n  const setRecord = () => {\n    setCurrentRecord(record);\n  };\n\n  const onShowRenameModal = () => {\n    setRecord();\n    showRenameModal(record);\n  };\n\n  const onShowConnectToKnowledgeModal = () => {\n    showConnectToKnowledgeModal(record);\n  };\n\n  const onShowMoveFileModal = () => {\n    showMoveFileModal([documentId]);\n  };\n\n  return (\n    <Space size={0}>\n      {isKnowledgeBase || (\n        <Tooltip title={t('addToKnowledge')}>\n          <Button type=\"text\" onClick={onShowConnectToKnowledgeModal}>\n            <LinkOutlined size={20} />\n          </Button>\n        </Tooltip>\n      )}\n\n      {isKnowledgeBase || (\n        <Tooltip title={t('rename', { keyPrefix: 'common' })}>\n          <Button type=\"text\" disabled={beingUsed} onClick={onShowRenameModal}>\n            <EditOutlined size={20} />\n          </Button>\n        </Tooltip>\n      )}\n      {isKnowledgeBase || (\n        <Tooltip title={t('move', { keyPrefix: 'common' })}>\n          <Button\n            type=\"text\"\n            disabled={beingUsed}\n            onClick={onShowMoveFileModal}\n            className=\"flex items-end\"\n          >\n            <FolderInput className=\"size-4\" />\n          </Button>\n        </Tooltip>\n      )}\n      {isKnowledgeBase || (\n        <Tooltip title={t('delete', { keyPrefix: 'common' })}>\n          <Button\n            type=\"text\"\n            disabled={beingUsed}\n            onClick={handleRemoveFile}\n            className=\"flex items-end\"\n          >\n            <Trash2 className=\"size-4\" />\n          </Button>\n        </Tooltip>\n      )}\n      {record.type !== 'folder' && (\n        <Tooltip title={t('download', { keyPrefix: 'common' })}>\n          <Button\n            type=\"text\"\n            disabled={beingUsed}\n            loading={loading}\n            onClick={onDownloadDocument}\n          >\n            <DownloadOutlined size={20} />\n          </Button>\n        </Tooltip>\n      )}\n      {isSupportedPreviewDocumentType(extension) && (\n        <NewDocumentLink\n          documentId={documentId}\n          documentName={record.name}\n          color=\"black\"\n        >\n          <Tooltip title={t('preview')}>\n            <Button type=\"text\">\n              <EyeOutlined size={20} />\n            </Button>\n          </Tooltip>\n        </NewDocumentLink>\n      )}\n    </Space>\n  );\n};\n\nexport default ActionCell;\n","// extracted by mini-css-extract-plugin\nexport default {\"fileManagerWrapper\":\"fileManagerWrapper___R9Ujv\",\"filter\":\"filter___x1Xt2\",\"deleteIconWrapper\":\"deleteIconWrapper___pgIrY\",\"linkButton\":\"linkButton___Dw8Oi\",\"breadcrumbItemButton\":\"breadcrumbItemButton___qWlv3\"};","import { useTranslate } from '@/hooks/common-hooks';\nimport {\n  IListResult,\n  useFetchParentFolderList,\n} from '@/hooks/file-manager-hooks';\nimport {\n  DownOutlined,\n  FileTextOutlined,\n  FolderOpenOutlined,\n  PlusOutlined,\n  SearchOutlined,\n} from '@ant-design/icons';\nimport {\n  Breadcrumb,\n  BreadcrumbProps,\n  Button,\n  Dropdown,\n  Flex,\n  Input,\n  MenuProps,\n  Space,\n} from 'antd';\nimport { useCallback, useMemo } from 'react';\nimport {\n  useHandleBreadcrumbClick,\n  useHandleDeleteFile,\n  useSelectBreadcrumbItems,\n} from './hooks';\n\nimport { FolderInput, Trash2 } from 'lucide-react';\nimport styles from './index.less';\n\ninterface IProps\n  extends Pick<IListResult, 'searchString' | 'handleInputChange'> {\n  selectedRowKeys: string[];\n  showFolderCreateModal: () => void;\n  showFileUploadModal: () => void;\n  setSelectedRowKeys: (keys: string[]) => void;\n  showMoveFileModal: (ids: string[]) => void;\n}\n\nconst FileToolbar = ({\n  selectedRowKeys,\n  showFolderCreateModal,\n  showFileUploadModal,\n  setSelectedRowKeys,\n  searchString,\n  handleInputChange,\n  showMoveFileModal,\n}: IProps) => {\n  const { t } = useTranslate('knowledgeDetails');\n  const breadcrumbItems = useSelectBreadcrumbItems();\n  const { handleBreadcrumbClick } = useHandleBreadcrumbClick();\n  const parentFolderList = useFetchParentFolderList();\n  const isKnowledgeBase =\n    parentFolderList.at(-1)?.source_type === 'knowledgebase';\n\n  const itemRender: BreadcrumbProps['itemRender'] = (\n    currentRoute,\n    params,\n    items,\n  ) => {\n    const isLast = currentRoute?.path === items[items.length - 1]?.path;\n\n    return isLast ? (\n      <span>{currentRoute.title}</span>\n    ) : (\n      <span\n        className={styles.breadcrumbItemButton}\n        onClick={() => handleBreadcrumbClick(currentRoute.path)}\n      >\n        {currentRoute.title}\n      </span>\n    );\n  };\n\n  const actionItems: MenuProps['items'] = useMemo(() => {\n    return [\n      {\n        key: '1',\n        onClick: showFileUploadModal,\n        label: (\n          <div>\n            <Button type=\"link\">\n              <Space>\n                <FileTextOutlined />\n                {t('uploadFile', { keyPrefix: 'fileManager' })}\n              </Space>\n            </Button>\n          </div>\n        ),\n      },\n      { type: 'divider' },\n      {\n        key: '2',\n        onClick: showFolderCreateModal,\n        label: (\n          <div>\n            <Button type=\"link\">\n              <Space>\n                <FolderOpenOutlined />\n                {t('newFolder', { keyPrefix: 'fileManager' })}\n              </Space>\n            </Button>\n          </div>\n        ),\n      },\n    ];\n  }, [t, showFolderCreateModal, showFileUploadModal]);\n\n  const { handleRemoveFile } = useHandleDeleteFile(\n    selectedRowKeys,\n    setSelectedRowKeys,\n  );\n\n  const handleShowMoveFileModal = useCallback(() => {\n    showMoveFileModal(selectedRowKeys);\n  }, [selectedRowKeys, showMoveFileModal]);\n\n  const disabled = selectedRowKeys.length === 0;\n\n  const items: MenuProps['items'] = useMemo(() => {\n    return [\n      {\n        key: '4',\n        onClick: handleRemoveFile,\n        label: (\n          <Flex gap={10}>\n            <span className=\"flex items-center justify-center\">\n              <Trash2 className=\"size-4\" />\n            </span>\n            <b>{t('delete', { keyPrefix: 'common' })}</b>\n          </Flex>\n        ),\n      },\n      {\n        key: '5',\n        onClick: handleShowMoveFileModal,\n        label: (\n          <Flex gap={10}>\n            <span className=\"flex items-center justify-center\">\n              <FolderInput className=\"size-4\"></FolderInput>\n            </span>\n            <b>{t('move', { keyPrefix: 'common' })}</b>\n          </Flex>\n        ),\n      },\n    ];\n  }, [handleShowMoveFileModal, t, handleRemoveFile]);\n\n  return (\n    <div className={styles.filter}>\n      <Breadcrumb items={breadcrumbItems} itemRender={itemRender} />\n      <Space>\n        {isKnowledgeBase || (\n          <Dropdown\n            menu={{ items }}\n            placement=\"bottom\"\n            arrow={false}\n            disabled={disabled}\n          >\n            <Button>\n              <Space>\n                <b> {t('bulk')}</b>\n                <DownOutlined />\n              </Space>\n            </Button>\n          </Dropdown>\n        )}\n        <Input\n          placeholder={t('searchFiles')}\n          value={searchString}\n          style={{ width: 220 }}\n          allowClear\n          onChange={handleInputChange}\n          prefix={<SearchOutlined />}\n        />\n\n        {isKnowledgeBase || (\n          <Dropdown menu={{ items: actionItems }} trigger={['click']}>\n            <Button type=\"primary\" icon={<PlusOutlined />}>\n              {t('addFile')}\n            </Button>\n          </Dropdown>\n        )}\n      </Space>\n    </div>\n  );\n};\n\nexport default FileToolbar;\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { useFetchKnowledgeList } from '@/hooks/knowledge-hooks';\nimport { IModalProps } from '@/interfaces/common';\nimport { filterOptionsByInput } from '@/utils/common-util';\nimport { Form, Modal, Select } from 'antd';\nimport { useEffect } from 'react';\n\nconst ConnectToKnowledgeModal = ({\n  visible,\n  hideModal,\n  onOk,\n  initialValue,\n  loading,\n}: IModalProps<string[]> & { initialValue: string[] }) => {\n  const [form] = Form.useForm();\n  const { list } = useFetchKnowledgeList();\n  const { t } = useTranslate('fileManager');\n\n  const options = list?.map((item) => ({\n    label: item.name,\n    value: item.id,\n  }));\n\n  const handleOk = async () => {\n    const values = await form.getFieldsValue();\n    const knowledgeIds = values.knowledgeIds ?? [];\n    return onOk?.(knowledgeIds);\n  };\n\n  useEffect(() => {\n    if (visible) {\n      form.setFieldValue('knowledgeIds', initialValue);\n    }\n  }, [visible, initialValue, form]);\n\n  return (\n    <Modal\n      title={t('addToKnowledge')}\n      open={visible}\n      onOk={handleOk}\n      onCancel={hideModal}\n      confirmLoading={loading}\n    >\n      <Form form={form}>\n        <Form.Item name=\"knowledgeIds\" noStyle>\n          <Select\n            mode=\"multiple\"\n            allowClear\n            showSearch\n            style={{ width: '100%' }}\n            placeholder={t('pleaseSelect')}\n            options={options}\n            optionFilterProp=\"children\"\n            filterOption={filterOptionsByInput}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default ConnectToKnowledgeModal;\n","import { IModalManagerChildrenProps } from '@/components/modal-manager';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Input, Modal } from 'antd';\n\ninterface IProps extends Omit<IModalManagerChildrenProps, 'showModal'> {\n  loading: boolean;\n  onOk: (name: string) => void;\n}\n\nconst FolderCreateModal = ({ visible, hideModal, loading, onOk }: IProps) => {\n  const [form] = Form.useForm();\n  const { t } = useTranslate('common');\n\n  type FieldType = {\n    name?: string;\n  };\n\n  const handleOk = async () => {\n    const ret = await form.validateFields();\n\n    return onOk(ret.name);\n  };\n\n  return (\n    <Modal\n      title={t('newFolder', { keyPrefix: 'fileManager' })}\n      open={visible}\n      onOk={handleOk}\n      onCancel={hideModal}\n      okButtonProps={{ loading }}\n      confirmLoading={loading}\n    >\n      <Form\n        name=\"basic\"\n        labelCol={{ span: 4 }}\n        wrapperCol={{ span: 20 }}\n        style={{ maxWidth: 600 }}\n        autoComplete=\"off\"\n        form={form}\n      >\n        <Form.Item<FieldType>\n          label={t('name')}\n          name=\"name\"\n          rules={[{ required: true, message: t('namePlaceholder') }]}\n        >\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default FolderCreateModal;\n","import { useFetchPureFileList } from '@/hooks/file-manager-hooks';\nimport { IFile } from '@/interfaces/database/file-manager';\nimport type { GetProp, TreeSelectProps } from 'antd';\nimport { TreeSelect } from 'antd';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ntype DefaultOptionType = GetProp<TreeSelectProps, 'treeData'>[number];\n\ninterface IProps {\n  value?: string;\n  onChange?: (value: string) => void;\n}\n\nconst AsyncTreeSelect = ({ value, onChange }: IProps) => {\n  const { t } = useTranslation();\n  const { fetchList } = useFetchPureFileList();\n  const [treeData, setTreeData] = useState<Omit<DefaultOptionType, 'label'>[]>(\n    [],\n  );\n\n  const onLoadData: TreeSelectProps['loadData'] = useCallback(\n    async ({ id }) => {\n      const ret = await fetchList(id);\n      if (ret.code === 0) {\n        setTreeData((tree) => {\n          return tree.concat(\n            ret.data.files\n              .filter((x: IFile) => x.type === 'folder')\n              .map((x: IFile) => ({\n                id: x.id,\n                pId: x.parent_id,\n                value: x.id,\n                title: x.name,\n                isLeaf:\n                  typeof x.has_child_folder === 'boolean'\n                    ? !x.has_child_folder\n                    : false,\n              })),\n          );\n        });\n      }\n    },\n    [fetchList],\n  );\n\n  const handleChange = (newValue: string) => {\n    onChange?.(newValue);\n  };\n\n  useEffect(() => {\n    onLoadData?.({ id: '', props: '' });\n  }, [onLoadData]);\n\n  return (\n    <TreeSelect\n      treeDataSimpleMode\n      style={{ width: '100%' }}\n      value={value}\n      dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n      placeholder={t('fileManager.pleaseSelect')}\n      onChange={handleChange}\n      loadData={onLoadData}\n      treeData={treeData}\n    />\n  );\n};\n\nexport default AsyncTreeSelect;\n","import { IModalManagerChildrenProps } from '@/components/modal-manager';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Modal } from 'antd';\nimport AsyncTreeSelect from './async-tree-select';\n\ninterface IProps extends Omit<IModalManagerChildrenProps, 'showModal'> {\n  loading: boolean;\n  onOk: (id: string) => void;\n}\n\nconst FileMovingModal = ({ visible, hideModal, loading, onOk }: IProps) => {\n  const [form] = Form.useForm();\n  const { t } = useTranslate('fileManager');\n\n  type FieldType = {\n    name?: string;\n  };\n\n  const handleOk = async () => {\n    const ret = await form.validateFields();\n\n    return onOk(ret.name);\n  };\n\n  return (\n    <Modal\n      title={t('move', { keyPrefix: 'common' })}\n      open={visible}\n      onOk={handleOk}\n      onCancel={hideModal}\n      okButtonProps={{ loading }}\n      confirmLoading={loading}\n      width={600}\n    >\n      <Form\n        name=\"basic\"\n        labelCol={{ span: 6 }}\n        wrapperCol={{ span: 18 }}\n        autoComplete=\"off\"\n        form={form}\n      >\n        <Form.Item<FieldType>\n          label={t('destinationFolder')}\n          name=\"name\"\n          rules={[{ required: true, message: t('pleaseSelect') }]}\n        >\n          <AsyncTreeSelect></AsyncTreeSelect>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default FileMovingModal;\n","import { useFetchFileList } from '@/hooks/file-manager-hooks';\nimport { IFile } from '@/interfaces/database/file-manager';\nimport { formatDate } from '@/utils/date';\nimport { Button, Flex, Space, Table, Tag, Typography } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport ActionCell from './action-cell';\nimport FileToolbar from './file-toolbar';\nimport {\n  useGetRowSelection,\n  useHandleConnectToKnowledge,\n  useHandleCreateFolder,\n  useHandleMoveFile,\n  useHandleUploadFile,\n  useNavigateToOtherFolder,\n  useRenameCurrentFile,\n} from './hooks';\n\nimport FileUploadModal from '@/components/file-upload-modal';\nimport RenameModal from '@/components/rename-modal';\nimport SvgIcon from '@/components/svg-icon';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { formatNumberWithThousandsSeparator } from '@/utils/common-util';\nimport { getExtension } from '@/utils/document-util';\nimport ConnectToKnowledgeModal from './connect-to-knowledge-modal';\nimport FolderCreateModal from './folder-create-modal';\nimport styles from './index.less';\nimport FileMovingModal from './move-file-modal';\n\nconst { Text } = Typography;\n\nconst FileManager = () => {\n  const { t } = useTranslate('fileManager');\n  // const fileList = useSelectFileList();\n  const { rowSelection, setSelectedRowKeys } = useGetRowSelection();\n  const navigateToOtherFolder = useNavigateToOtherFolder();\n  const {\n    fileRenameVisible,\n    fileRenameLoading,\n    hideFileRenameModal,\n    showFileRenameModal,\n    initialFileName,\n    onFileRenameOk,\n  } = useRenameCurrentFile();\n  const {\n    folderCreateModalVisible,\n    showFolderCreateModal,\n    hideFolderCreateModal,\n    folderCreateLoading,\n    onFolderCreateOk,\n  } = useHandleCreateFolder();\n  const {\n    fileUploadVisible,\n    hideFileUploadModal,\n    showFileUploadModal,\n    fileUploadLoading,\n    onFileUploadOk,\n  } = useHandleUploadFile();\n  const {\n    connectToKnowledgeVisible,\n    hideConnectToKnowledgeModal,\n    showConnectToKnowledgeModal,\n    onConnectToKnowledgeOk,\n    initialValue,\n    connectToKnowledgeLoading,\n  } = useHandleConnectToKnowledge();\n  const {\n    showMoveFileModal,\n    moveFileVisible,\n    onMoveFileOk,\n    hideMoveFileModal,\n    moveFileLoading,\n  } = useHandleMoveFile(setSelectedRowKeys);\n  const { pagination, data, searchString, handleInputChange, loading } =\n    useFetchFileList();\n  const columns: ColumnsType<IFile> = [\n    {\n      title: t('name'),\n      dataIndex: 'name',\n      key: 'name',\n      fixed: 'left',\n      render(value, record) {\n        return (\n          <Flex gap={10} align=\"center\">\n            <SvgIcon\n              name={`file-icon/${record.type === 'folder' ? 'folder' : getExtension(value)}`}\n              width={24}\n            ></SvgIcon>\n            {record.type === 'folder' ? (\n              <Button\n                type={'link'}\n                className={styles.linkButton}\n                onClick={() => navigateToOtherFolder(record.id)}\n              >\n                <Text ellipsis={{ tooltip: value }}>{value}</Text>\n              </Button>\n            ) : (\n              <Text ellipsis={{ tooltip: value }}>{value}</Text>\n            )}\n          </Flex>\n        );\n      },\n    },\n    {\n      title: t('uploadDate'),\n      dataIndex: 'create_time',\n      key: 'create_time',\n      render(text) {\n        return formatDate(text);\n      },\n    },\n    {\n      title: t('size'),\n      dataIndex: 'size',\n      key: 'size',\n      render(value) {\n        return (\n          formatNumberWithThousandsSeparator((value / 1024).toFixed(2)) + ' KB'\n        );\n      },\n    },\n    {\n      title: t('knowledgeBase'),\n      dataIndex: 'kbs_info',\n      key: 'kbs_info',\n      render(value) {\n        return Array.isArray(value) ? (\n          <Space wrap>\n            {value?.map((x) => (\n              <Tag color=\"blue\" key={x.kb_id}>\n                {x.kb_name}\n              </Tag>\n            ))}\n          </Space>\n        ) : (\n          ''\n        );\n      },\n    },\n    {\n      title: t('action'),\n      dataIndex: 'action',\n      key: 'action',\n      render: (text, record) => (\n        <ActionCell\n          record={record}\n          setCurrentRecord={(record: any) => {\n            console.info(record);\n          }}\n          showRenameModal={showFileRenameModal}\n          showMoveFileModal={showMoveFileModal}\n          showConnectToKnowledgeModal={showConnectToKnowledgeModal}\n          setSelectedRowKeys={setSelectedRowKeys}\n        ></ActionCell>\n      ),\n    },\n  ];\n\n  return (\n    <section className={styles.fileManagerWrapper}>\n      <FileToolbar\n        searchString={searchString}\n        handleInputChange={handleInputChange}\n        selectedRowKeys={rowSelection.selectedRowKeys as string[]}\n        showFolderCreateModal={showFolderCreateModal}\n        showFileUploadModal={showFileUploadModal}\n        setSelectedRowKeys={setSelectedRowKeys}\n        showMoveFileModal={showMoveFileModal}\n      ></FileToolbar>\n      <Table\n        dataSource={data?.files}\n        columns={columns}\n        rowKey={'id'}\n        rowSelection={rowSelection}\n        loading={loading}\n        pagination={pagination}\n        scroll={{ scrollToFirstRowOnChange: true, x: '100%' }}\n      />\n      <RenameModal\n        visible={fileRenameVisible}\n        hideModal={hideFileRenameModal}\n        onOk={onFileRenameOk}\n        initialName={initialFileName}\n        loading={fileRenameLoading}\n      ></RenameModal>\n      <FolderCreateModal\n        loading={folderCreateLoading}\n        visible={folderCreateModalVisible}\n        hideModal={hideFolderCreateModal}\n        onOk={onFolderCreateOk}\n      ></FolderCreateModal>\n      <FileUploadModal\n        visible={fileUploadVisible}\n        hideModal={hideFileUploadModal}\n        loading={fileUploadLoading}\n        onOk={onFileUploadOk}\n      ></FileUploadModal>\n      <ConnectToKnowledgeModal\n        initialValue={initialValue}\n        visible={connectToKnowledgeVisible}\n        hideModal={hideConnectToKnowledgeModal}\n        onOk={onConnectToKnowledgeOk}\n        loading={connectToKnowledgeLoading}\n      ></ConnectToKnowledgeModal>\n      {moveFileVisible && (\n        <FileMovingModal\n          visible={moveFileVisible}\n          hideModal={hideMoveFileModal}\n          onOk={onMoveFileOk}\n          loading={moveFileLoading}\n        ></FileMovingModal>\n      )}\n    </section>\n  );\n};\n\nexport default FileManager;\n","import api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request from '@/utils/request';\n\nconst {\n  listFile,\n  removeFile,\n  uploadFile,\n  renameFile,\n  getAllParentFolder,\n  createFolder,\n  connectFileToKnowledge,\n  get_document_file,\n  getFile,\n  moveFile,\n} = api;\n\nconst methods = {\n  listFile: {\n    url: listFile,\n    method: 'get',\n  },\n  removeFile: {\n    url: removeFile,\n    method: 'post',\n  },\n  uploadFile: {\n    url: uploadFile,\n    method: 'post',\n  },\n  renameFile: {\n    url: renameFile,\n    method: 'post',\n  },\n  getAllParentFolder: {\n    url: getAllParentFolder,\n    method: 'get',\n  },\n  createFolder: {\n    url: createFolder,\n    method: 'post',\n  },\n  connectFileToKnowledge: {\n    url: connectFileToKnowledge,\n    method: 'post',\n  },\n  getFile: {\n    url: getFile,\n    method: 'get',\n    responseType: 'blob',\n  },\n  getDocumentFile: {\n    url: get_document_file,\n    method: 'get',\n    responseType: 'blob',\n  },\n  moveFile: {\n    url: moveFile,\n    method: 'post',\n  },\n} as const;\n\nconst fileManagerService = registerServer<keyof typeof methods>(\n  methods,\n  request,\n);\n\nexport default fileManagerService;\n","import dayjs from 'dayjs';\n\nexport function formatDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY HH:mm:ss');\n}\n\nexport function formatTime(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('HH:mm:ss');\n}\n\nexport function today() {\n  return formatDate(dayjs());\n}\n\nexport function lastDay() {\n  return formatDate(dayjs().subtract(1, 'days'));\n}\n\nexport function lastWeek() {\n  return formatDate(dayjs().subtract(1, 'weeks'));\n}\n\nexport function formatPureDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY');\n}\n","import { Images, SupportedPreviewDocumentTypes } from '@/constants/common';\nimport { IReferenceChunk } from '@/interfaces/database/chat';\nimport { IChunk } from '@/interfaces/database/knowledge';\nimport { UploadFile } from 'antd';\nimport { get } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\nexport const buildChunkHighlights = (\n  selectedChunk: IChunk | IReferenceChunk,\n  size: { width: number; height: number },\n) => {\n  return Array.isArray(selectedChunk?.positions) &&\n    selectedChunk.positions.every((x) => Array.isArray(x))\n    ? selectedChunk?.positions?.map((x) => {\n        const boundingRect = {\n          width: size.width,\n          height: size.height,\n          x1: x[1],\n          x2: x[2],\n          y1: x[3],\n          y2: x[4],\n        };\n        return {\n          id: uuid(),\n          comment: {\n            text: '',\n            emoji: '',\n          },\n          content: {\n            text:\n              get(selectedChunk, 'content_with_weight') ||\n              get(selectedChunk, 'content', ''),\n          },\n          position: {\n            boundingRect: boundingRect,\n            rects: [boundingRect],\n            pageNumber: x[0],\n          },\n        };\n      })\n    : [];\n};\n\nexport const isFileUploadDone = (file: UploadFile) => file.status === 'done';\n\nexport const getExtension = (name: string) =>\n  name?.slice(name.lastIndexOf('.') + 1).toLowerCase() ?? '';\n\nexport const isPdf = (name: string) => {\n  return getExtension(name) === 'pdf';\n};\n\nexport const getUnSupportedFilesCount = (message: string) => {\n  return message.split('\\n').length;\n};\n\nexport const isSupportedPreviewDocumentType = (fileExtension: string) => {\n  return SupportedPreviewDocumentTypes.includes(fileExtension);\n};\n\nexport const isImage = (image: string) => {\n  return [...Images, 'svg'].some((x) => x === image);\n};\n","import { FileMimeType } from '@/constants/common';\nimport fileManagerService from '@/services/file-manager-service';\nimport { UploadFile } from 'antd';\n\nexport const transformFile2Base64 = (val: any): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(val);\n    reader.onload = (): void => {\n      // Create image object\n      const img = new Image();\n      img.src = reader.result as string;\n\n      img.onload = () => {\n        // Create canvas\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        // Calculate compressed dimensions, set max width/height to 800px\n        let width = img.width;\n        let height = img.height;\n        const maxSize = 100;\n\n        if (width > height && width > maxSize) {\n          height = (height * maxSize) / width;\n          width = maxSize;\n        } else if (height > maxSize) {\n          width = (width * maxSize) / height;\n          height = maxSize;\n        }\n\n        // Set canvas dimensions\n        canvas.width = width;\n        canvas.height = height;\n\n        // Draw image\n        ctx?.drawImage(img, 0, 0, width, height);\n\n        // Convert to base64, maintain original format and transparency\n        const compressedBase64 = canvas.toDataURL('image/png');\n        resolve(compressedBase64);\n      };\n\n      img.onerror = reject;\n    };\n    reader.onerror = reject;\n  });\n};\n\nexport const transformBase64ToFile = (\n  dataUrl: string,\n  filename: string = 'file',\n) => {\n  let arr = dataUrl.split(','),\n    bstr = atob(arr[1]),\n    n = bstr.length,\n    u8arr = new Uint8Array(n);\n\n  const mime = arr[0].match(/:(.*?);/);\n  const mimeType = mime ? mime[1] : 'image/png';\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new File([u8arr], filename, { type: mimeType });\n};\n\nexport const normFile = (e: any) => {\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e?.fileList;\n};\n\nexport const getUploadFileListFromBase64 = (avatar: string) => {\n  let fileList: UploadFile[] = [];\n\n  if (avatar) {\n    fileList = [{ uid: '1', name: 'file', thumbUrl: avatar, status: 'done' }];\n  }\n\n  return fileList;\n};\n\nexport const getBase64FromUploadFileList = async (fileList?: UploadFile[]) => {\n  if (Array.isArray(fileList) && fileList.length > 0) {\n    const file = fileList[0];\n    const originFileObj = file.originFileObj;\n    if (originFileObj) {\n      const base64 = await transformFile2Base64(originFileObj);\n      return base64;\n    } else {\n      return file.thumbUrl;\n    }\n    // return fileList[0].thumbUrl; TODO: Even JPG files will be converted to base64 parameters in png format\n  }\n\n  return '';\n};\n\nasync function fetchDocumentBlob(id: string, mimeType?: FileMimeType) {\n  const response = await fileManagerService.getDocumentFile({}, id);\n  const blob = new Blob([response.data], {\n    type: mimeType || response.data.type,\n  });\n\n  return blob;\n}\n\nexport async function previewHtmlFile(id: string) {\n  const blob = await fetchDocumentBlob(id, FileMimeType.Html);\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.click();\n  URL.revokeObjectURL(url);\n}\n\nexport const downloadFileFromBlob = (blob: Blob, name?: string) => {\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  if (name) {\n    a.download = name;\n  }\n  a.click();\n  window.URL.revokeObjectURL(url);\n};\n\nexport const downloadDocument = async ({\n  id,\n  filename,\n}: {\n  id: string;\n  filename?: string;\n}) => {\n  const blob = await fetchDocumentBlob(id);\n  downloadFileFromBlob(blob, filename);\n};\n\nconst Units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\nexport const formatBytes = (x: string | number) => {\n  let l = 0,\n    n = (typeof x === 'string' ? parseInt(x, 10) : x) || 0;\n\n  while (n >= 1024 && ++l) {\n    n = n / 1024;\n  }\n\n  return n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + Units[l];\n};\n\nexport const downloadJsonFile = async (\n  data: Record<string, any>,\n  fileName: string,\n) => {\n  const blob = new Blob([JSON.stringify(data)], { type: FileMimeType.Json });\n  downloadFileFromBlob(blob, fileName);\n};\n","var map = {\n\t\"./akshare.svg\": 26032,\n\t\"./api.svg\": 30747,\n\t\"./arxiv.svg\": 90854,\n\t\"./assistant.svg\": 4159,\n\t\"./baidu-fanyi.svg\": 83544,\n\t\"./baidu.svg\": 92892,\n\t\"./begin.svg\": 69779,\n\t\"./bing.svg\": 55914,\n\t\"./cancel.svg\": 8156,\n\t\"./chat-app-cube.svg\": 34339,\n\t\"./chat-configuration-atom.svg\": 57950,\n\t\"./chat-star.svg\": 49570,\n\t\"./chunk-method/book-01.svg\": 38726,\n\t\"./chunk-method/book-02.svg\": 21357,\n\t\"./chunk-method/book-03.svg\": 88093,\n\t\"./chunk-method/book-04.svg\": 58355,\n\t\"./chunk-method/chunk-empty.svg\": 16035,\n\t\"./chunk-method/knowledge-graph-01.svg\": 42576,\n\t\"./chunk-method/knowledge-graph-02.svg\": 46853,\n\t\"./chunk-method/law-01.svg\": 54530,\n\t\"./chunk-method/law-02.svg\": 75787,\n\t\"./chunk-method/manual-01.svg\": 64179,\n\t\"./chunk-method/manual-02.svg\": 40547,\n\t\"./chunk-method/manual-03.svg\": 1437,\n\t\"./chunk-method/manual-04.svg\": 81486,\n\t\"./chunk-method/media-01.svg\": 33952,\n\t\"./chunk-method/media-02.svg\": 93802,\n\t\"./chunk-method/naive-01.svg\": 88488,\n\t\"./chunk-method/naive-02.svg\": 74795,\n\t\"./chunk-method/one-01.svg\": 88533,\n\t\"./chunk-method/one-02.svg\": 99199,\n\t\"./chunk-method/one-03.svg\": 23192,\n\t\"./chunk-method/one-04.svg\": 72906,\n\t\"./chunk-method/paper-01.svg\": 64018,\n\t\"./chunk-method/paper-02.svg\": 77250,\n\t\"./chunk-method/presentation-01.svg\": 87162,\n\t\"./chunk-method/presentation-02.svg\": 59640,\n\t\"./chunk-method/qa-01.svg\": 39420,\n\t\"./chunk-method/qa-02.svg\": 55086,\n\t\"./chunk-method/resume-01.svg\": 76604,\n\t\"./chunk-method/resume-02.svg\": 96131,\n\t\"./chunk-method/table-01.svg\": 42743,\n\t\"./chunk-method/table-02.svg\": 84817,\n\t\"./chunk-method/tag-01.svg\": 96953,\n\t\"./chunk-method/tag-02.svg\": 82472,\n\t\"./concentrator.svg\": 86933,\n\t\"./crawler.svg\": 71090,\n\t\"./database.svg\": 38575,\n\t\"./deepl.svg\": 98301,\n\t\"./delete.svg\": 71483,\n\t\"./disable.svg\": 84377,\n\t\"./doctor.svg\": 91433,\n\t\"./duck.svg\": 24287,\n\t\"./email.svg\": 10808,\n\t\"./enable.svg\": 8207,\n\t\"./es.svg\": 96492,\n\t\"./exesql.svg\": 43004,\n\t\"./file-icon/aep.svg\": 83889,\n\t\"./file-icon/ai.svg\": 28897,\n\t\"./file-icon/avi.svg\": 27635,\n\t\"./file-icon/css.svg\": 52229,\n\t\"./file-icon/csv.svg\": 50747,\n\t\"./file-icon/dmg.svg\": 71691,\n\t\"./file-icon/doc.svg\": 35354,\n\t\"./file-icon/docx.svg\": 69139,\n\t\"./file-icon/eps.svg\": 43279,\n\t\"./file-icon/exe.svg\": 46462,\n\t\"./file-icon/fig.svg\": 33179,\n\t\"./file-icon/folder.svg\": 54168,\n\t\"./file-icon/gif.svg\": 73845,\n\t\"./file-icon/html.svg\": 53682,\n\t\"./file-icon/indd.svg\": 26763,\n\t\"./file-icon/java.svg\": 13916,\n\t\"./file-icon/jpeg.svg\": 19525,\n\t\"./file-icon/jpg.svg\": 24674,\n\t\"./file-icon/js.svg\": 38470,\n\t\"./file-icon/json.svg\": 56373,\n\t\"./file-icon/md.svg\": 77357,\n\t\"./file-icon/mkv.svg\": 49197,\n\t\"./file-icon/mp3.svg\": 44538,\n\t\"./file-icon/mp4.svg\": 52038,\n\t\"./file-icon/mpeg.svg\": 77747,\n\t\"./file-icon/pdf.svg\": 82938,\n\t\"./file-icon/png.svg\": 71915,\n\t\"./file-icon/ppt.svg\": 85173,\n\t\"./file-icon/pptx.svg\": 62133,\n\t\"./file-icon/psd.svg\": 30182,\n\t\"./file-icon/rss.svg\": 38428,\n\t\"./file-icon/sql.svg\": 78501,\n\t\"./file-icon/svg.svg\": 72515,\n\t\"./file-icon/tiff.svg\": 4502,\n\t\"./file-icon/txt.svg\": 55773,\n\t\"./file-icon/wav.svg\": 63645,\n\t\"./file-icon/webp.svg\": 87260,\n\t\"./file-icon/xls.svg\": 5343,\n\t\"./file-icon/xlsx.svg\": 41475,\n\t\"./file-icon/xml.svg\": 38476,\n\t\"./file-management.svg\": 39121,\n\t\"./github.svg\": 69696,\n\t\"./google-scholar.svg\": 99466,\n\t\"./google.svg\": 18176,\n\t\"./graph.svg\": 57355,\n\t\"./invoke-ai.svg\": 82888,\n\t\"./jin10.svg\": 31801,\n\t\"./keyword.svg\": 30552,\n\t\"./knowledge-base.svg\": 87055,\n\t\"./knowledge-configration.svg\": 96450,\n\t\"./knowledge-dataset.svg\": 9385,\n\t\"./knowledge-testing.svg\": 65376,\n\t\"./langfuse.svg\": 6514,\n\t\"./llm/anthropic.svg\": 74768,\n\t\"./llm/azure.svg\": 99817,\n\t\"./llm/baai.svg\": 93594,\n\t\"./llm/baichuan.svg\": 6507,\n\t\"./llm/bedrock.svg\": 30818,\n\t\"./llm/chat-minimax.svg\": 69534,\n\t\"./llm/cohere.svg\": 86198,\n\t\"./llm/deepseek.svg\": 23476,\n\t\"./llm/fish-audio.svg\": 97300,\n\t\"./llm/gemini.svg\": 69156,\n\t\"./llm/github.svg\": 29034,\n\t\"./llm/google-cloud.svg\": 75383,\n\t\"./llm/google.svg\": 93926,\n\t\"./llm/gpustack.svg\": 41538,\n\t\"./llm/groq-next.svg\": 43719,\n\t\"./llm/huggingface.svg\": 20566,\n\t\"./llm/hunyuan.svg\": 10266,\n\t\"./llm/jina.svg\": 19765,\n\t\"./llm/lepton-ai.svg\": 68341,\n\t\"./llm/lm-studio.svg\": 77894,\n\t\"./llm/local-ai.svg\": 97354,\n\t\"./llm/mistral.svg\": 58247,\n\t\"./llm/modelscope.svg\": 21248,\n\t\"./llm/moonshot.svg\": 98184,\n\t\"./llm/nomic-ai.svg\": 14860,\n\t\"./llm/novita-ai.svg\": 72584,\n\t\"./llm/nvidia.svg\": 33325,\n\t\"./llm/ollama.svg\": 59488,\n\t\"./llm/open-router.svg\": 23258,\n\t\"./llm/openai-api.svg\": 63715,\n\t\"./llm/openai.svg\": 81459,\n\t\"./llm/perfx-cloud.svg\": 39886,\n\t\"./llm/ppio.svg\": 89957,\n\t\"./llm/replicate.svg\": 13492,\n\t\"./llm/sentence-transformers.svg\": 85448,\n\t\"./llm/siliconflow.svg\": 65762,\n\t\"./llm/spark.svg\": 4216,\n\t\"./llm/stepfun.svg\": 53618,\n\t\"./llm/tencent-cloud.svg\": 96734,\n\t\"./llm/together-ai.svg\": 65167,\n\t\"./llm/tongyi.svg\": 74296,\n\t\"./llm/upstage.svg\": 30464,\n\t\"./llm/vllm.svg\": 91333,\n\t\"./llm/volc_engine.svg\": 25210,\n\t\"./llm/voyage.svg\": 6385,\n\t\"./llm/wenxin.svg\": 34981,\n\t\"./llm/xinference.svg\": 76577,\n\t\"./llm/yi.svg\": 20447,\n\t\"./llm/yiyan.svg\": 55103,\n\t\"./llm/youdao.svg\": 81010,\n\t\"./llm/zhipu.svg\": 19568,\n\t\"./login-avatars.svg\": 68683,\n\t\"./login-background.svg\": 89624,\n\t\"./login-star.svg\": 31130,\n\t\"./logo-with-text-white.svg\": 49313,\n\t\"./logout.svg\": 67487,\n\t\"./minio.svg\": 32382,\n\t\"./model-providers.svg\": 70410,\n\t\"./moon.svg\": 22350,\n\t\"./more-model.svg\": 88458,\n\t\"./more.svg\": 1333,\n\t\"./move.svg\": 90076,\n\t\"./mysql.svg\": 37124,\n\t\"./navigation-pointer.svg\": 1979,\n\t\"./next-login-bg.svg\": 33391,\n\t\"./note.svg\": 28687,\n\t\"./nothing.svg\": 47138,\n\t\"./paper-clip.svg\": 2306,\n\t\"./password.svg\": 33530,\n\t\"./plus-circle-fill.svg\": 3804,\n\t\"./plus.svg\": 75350,\n\t\"./profile.svg\": 1769,\n\t\"./prompt.svg\": 49261,\n\t\"./pubmed.svg\": 78566,\n\t\"./qweather.svg\": 56077,\n\t\"./redis.svg\": 43867,\n\t\"./refresh.svg\": 96198,\n\t\"./resize.svg\": 80415,\n\t\"./run.svg\": 91449,\n\t\"./select-files-end.svg\": 14387,\n\t\"./select-files-start.svg\": 16734,\n\t\"./selected-files-collapse.svg\": 40975,\n\t\"./storage.svg\": 3949,\n\t\"./switch.svg\": 1311,\n\t\"./team.svg\": 52381,\n\t\"./template.svg\": 63993,\n\t\"./translation.svg\": 40724,\n\t\"./tushare.svg\": 16521,\n\t\"./wencai.svg\": 72835,\n\t\"./wikipedia.svg\": 18684,\n\t\"./yahoo-finance.svg\": 7957\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 78131;"],"names":["Dragger","Upload","FileUpload","_ref","directory","fileList","setFileList","uploadProgress","t","useTranslate","props","multiple","onRemove","file","index","indexOf","newFileList","slice","splice","beforeUpload","pre","concat","_toConsumableArray","progress","strokeWidth","_jsxs","_Fragment","children","_jsx","Progress","percent","showInfo","_objectSpread","className","styles","InboxOutlined","_ref2","visible","hideModal","loading","onFileUploadOk","onOk","uploadFileList","setUploadFileList","setUploadProgress","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","parseOnCreation","setParseOnCreation","_useState5","_useState6","currentFileList","setCurrentFileList","_useState7","_useState8","directoryFileList","setDirectoryFileList","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ret","wrap","_context","prev","next","abrupt","sent","stop","apply","arguments","items","key","label","Modal","title","open","onCancel","confirmLoading","afterClose","Flex","gap","vertical","Segmented","options","block","onChange","Checkbox","checked","e","target","Tabs","defaultActiveKey","keyPrefix","link","_ref$preventDefault","preventDefault","_ref$color","color","documentId","documentName","_ref$prefix","prefix","nextLink","extension","getExtension","onClick","isSupportedPreviewDocumentType","undefined","href","rel","style","wordBreak","initialName","_Form$useForm","Form","useForm","form","handleOk","validateFields","name","useEffect","setFieldValue","okButtonProps","labelCol","span","wrapperCol","maxWidth","onFinish","values","console","log","onFinishFailed","errorInfo","autoComplete","Item","rules","required","message","Input","requireContext","routeList","require","keys","map","replace","error","warn","SvgIcon","width","height","imgClass","restProps","_objectWithoutProperties","_excluded","ListItem","find","item","Icon","component","src","alt","cn","LlmIcon","_ref2$height","_ref2$width","_ref2$size","size","icon","IconMap","Avatar","shape","UserOutlined","useGetFolderId","_useSearchParams","useSearchParams","id","get","useFetchPureFileList","_mutationFn","_useMutation","useMutation","mutationKey","gcTime","mutationFn","parentId","_yield$fileManagerSer","data","fileManagerService","listFile","parent_id","_x","mutateAsync","isPending","fetchList","useFetchFileList","_data$data","_queryFn","_useHandleSearchChang","useHandleSearchChange","searchString","handleInputChange","_useGetPaginationWith","useGetPaginationWithRouter","pagination","setPagination","_useQuery","useQuery","queryKey","initialData","queryFn","_callee2","_yield$fileManagerSer2","_context2","keywords","page_size","pageSize","page","current","isFetching","onInputChange","useCallback","total","useDeleteFile","_mutationFn2","setPaginationParams","useSetPaginationParams","queryClient","useQueryClient","_useMutation2","_callee3","params","_yield$fileManagerSer3","_context3","removeFile","code","invalidateQueries","_x2","deleteFile","useDownloadFile","_mutationFn3","_useMutation3","_callee4","response","blob","_context4","getFile","Blob","type","downloadFileFromBlob","filename","_x3","downloadFile","useRenameFile","_mutationFn4","useTranslation","_useMutation4","_callee5","_yield$fileManagerSer4","_context5","renameFile","success","_x4","useFetchParentFolderList","_queryFn2","_useQuery2","enabled","_callee6","_data$data$parent_fol","_data$data2","_yield$fileManagerSer5","_context6","getAllParentFolder","fileId","parent_folders","toReversed","useCreateFolder","_mutationFn5","_useMutation5","_callee7","_yield$fileManagerSer6","_context7","createFolder","_x5","useUploadFile","_mutationFn6","_useMutation6","_callee8","pathList","formData","_ret$data","_context8","webkitRelativePath","FormData","append","forEach","uploadFile","t0","_x6","useConnectToKnowledge","_mutationFn7","_useMutation7","_callee9","_yield$fileManagerSer7","_context9","connectFileToKnowledge","_x7","useMoveFile","_mutationFn8","_useMutation8","_callee10","_yield$fileManagerSer8","_context10","moveFile","_x8","useHandleDeleteFile","fileIds","setSelectedRowKeys","removeDocument","showDeleteConfirm","useShowDeleteConfirm","handleRemoveFile","_onOk","record","setCurrentRecord","showRenameModal","showConnectToKnowledgeModal","showMoveFileModal","beingUsed","_useDownloadFile","isKnowledgeBase","source_type","Space","Tooltip","Button","LinkOutlined","disabled","EditOutlined","FolderInput","Trash2","DownloadOutlined","NewDocumentLink","EyeOutlined","_parentFolderList$at","navigate","selectedRowKeys","showFolderCreateModal","showFileUploadModal","breadcrumbItems","parentFolderList","length","x","path","useSelectBreadcrumbItems","handleBreadcrumbClick","useNavigate","at","actionItems","useMemo","FileTextOutlined","FolderOpenOutlined","handleShowMoveFileModal","Breadcrumb","itemRender","currentRoute","_items","Dropdown","menu","placement","arrow","DownOutlined","placeholder","allowClear","SearchOutlined","trigger","PlusOutlined","initialValue","list","useFetchKnowledgeList","_values$knowledgeIds","knowledgeIds","getFieldsValue","noStyle","Select","mode","showSearch","optionFilterProp","filterOption","filterOptionsByInput","treeData","setTreeData","onLoadData","tree","files","filter","pId","isLeaf","has_child_folder","TreeSelect","treeDataSimpleMode","dropdownStyle","maxHeight","overflow","newValue","loadData","AsyncTreeSelect","Text","Typography","_useGetRowSelection","rowSelection","getCheckboxProps","newSelectedRowKeys","useGetRowSelection","navigateToOtherFolder","folderId","_useRenameCurrentFile","setFile","_useSetModalState","useSetModalState","fileRenameVisible","hideFileRenameModal","showFileRenameModal","showModal","_useRenameFile","onFileRenameOk","handleShowFileRenameModal","fileRenameLoading","initialFileName","useRenameCurrentFile","_useHandleCreateFolde","_useSetModalState2","folderCreateModalVisible","hideFolderCreateModal","_useCreateFolder","onFolderCreateOk","folderCreateLoading","useHandleCreateFolder","_useHandleUploadFile","_useSetModalState3","fileUploadVisible","hideFileUploadModal","_useUploadFile","_ref4","fileUploadLoading","useHandleUploadFile","_useHandleConnectToKn","_useSetModalState4","connectToKnowledgeVisible","hideConnectToKnowledgeModal","_useConnectToKnowledg","connectToKnowledge","setRecord","_record$kbs_info","Array","isArray","kbs_info","kb_id","onConnectToKnowledgeOk","_ref5","kbIds","handleShowConnectToKnowledgeModal","connectToKnowledgeLoading","useHandleConnectToKnowledge","_useHandleMoveFile","_useSetModalState5","moveFileVisible","hideMoveFileModal","_useMoveFile","sourceFileIds","setSourceFileIds","onMoveFileOk","_ref6","targetFolderId","src_file_ids","dest_file_id","ids","moveFileLoading","useHandleMoveFile","_useFetchFileList","columns","dataIndex","fixed","render","align","ellipsis","tooltip","text","formatDate","formatNumberWithThousandsSeparator","toFixed","Tag","kb_name","ActionCell","info","FileToolbar","Table","dataSource","rowKey","scroll","scrollToFirstRowOnChange","RenameModal","FolderCreateModal","FileUploadModal","ConnectToKnowledgeModal","FileMovingModal","api","get_document_file","methods","url","method","responseType","getDocumentFile","registerServer","request","date","dayjs","format","formatTime","formatPureDate","buildChunkHighlights","selectedChunk","_selectedChunk$positi","positions","every","boundingRect","x1","x2","y1","y2","uuid","comment","emoji","content","position","rects","pageNumber","_name$slice$toLowerCa","lastIndexOf","toLowerCase","getUnSupportedFilesCount","split","fileExtension","SupportedPreviewDocumentTypes","includes","isImage","image","Images","some","transformFile2Base64","val","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","img","Image","result","canvas","document","createElement","ctx","getContext","maxSize","drawImage","compressedBase64","toDataURL","onerror","normFile","getUploadFileListFromBase64","avatar","uid","thumbUrl","status","getBase64FromUploadFileList","originFileObj","base64","fetchDocumentBlob","_fetchDocumentBlob","mimeType","previewHtmlFile","_previewHtmlFile","FileMimeType","Html","URL","createObjectURL","click","revokeObjectURL","window","a","download","downloadDocument","Units","formatBytes","l","n","parseInt","downloadJsonFile","fileName","JSON","stringify","Json","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","Object","module","exports"],"sourceRoot":""}