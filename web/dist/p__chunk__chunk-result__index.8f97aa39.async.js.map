{"version":3,"file":"p__chunk__chunk-result__index.8f97aa39.async.js","mappings":"kLAGe,SAASA,IACtB,OACEC,EAAAA,EAAAA,MAAA,WAASC,UAAU,OAAMC,SAAA,EACvBC,EAAAA,EAAAA,KAACC,EAAAA,EAAiB,KAClBD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,UACrBC,EAAAA,EAAAA,KAACE,EAAAA,EAAkB,QAI3B,C,6FCTMC,EAAO,IAAIC,MAAM,IAAIC,KAAK,CAC9BC,KAAM,SACNC,QAAS,2RAcI,SAASL,IACtB,OACEL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC7CC,EAAAA,EAAAA,KAACQ,EAAAA,EAAY,CAACC,KAAK,sBACnBT,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6CAA4CC,SACxDI,EAAKO,KAAI,SAACC,EAAGC,GAAG,OACfZ,EAAAA,EAAAA,KAACa,EAAAA,EAAS,CAAWN,QAASI,EAAEJ,QAASO,WAAS,GAAlCF,EAA+C,QAKzE,C,6FC3BMT,EAAO,IAAIC,MAAM,IAAIC,KAAK,CAC9BC,KAAM,SACNC,QAAS,2RAcI,SAASN,IACtB,OACEJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC7CC,EAAAA,EAAAA,KAACQ,EAAAA,EAAY,CAACC,KAAK,qBACnBT,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6CAA4CC,SACxDI,EAAKO,KAAI,SAACC,EAAGC,GAAG,OACfZ,EAAAA,EAAAA,KAACe,EAAAA,EAAc,CAEbT,KAAMK,EAAEL,KACRC,QAASI,EAAEJ,SAFNK,EAGW,QAK5B,C","sources":["webpack://web/./src/pages/chunk/chunk-result/index.tsx","webpack://web/./src/pages/chunk/chunked-result-panel.tsx","webpack://web/./src/pages/chunk/parsed-result-panel.tsx"],"sourcesContent":["import ChunkedResultPanel from '../chunked-result-panel';\nimport ParsedResultPanel from '../parsed-result-panel';\n\nexport default function ChunkResult() {\n  return (\n    <section className=\"flex\">\n      <ParsedResultPanel></ParsedResultPanel>\n      <div className=\"flex-1\">\n        <ChunkedResultPanel></ChunkedResultPanel>\n      </div>\n    </section>\n  );\n}\n","import { ChunkCard } from './chunk-card';\nimport { ChunkToolbar } from './chunk-toolbar';\n\nconst list = new Array(10).fill({\n  page: 'page 1',\n  content: `Word并不像 TeX／LaTeX为我们提供了合适的定理环境，因此需要我们另想办法。\n  \n  第1节 自定义定理环境\n  我们已经使用了“定理样式”作为定理排版的样式，如：\n  \n  定理1.1．对顶角相等。\n  \n  如果大家需要其他的如引理，公理，定义等环境可以仿照定义。\n  \n  定理1.2．三边对应相等的三角形全等。\n  \n  我们将这个过程也定义成了宏，在工具栏Theorem里面。书写过程如下：先写好定理本身，然后在该段落处放置光标，打开Theorem工具栏，点SetTheorem，即可见到效果。请尝试下面一个例子：`,\n});\n\nexport default function ChunkedResultPanel() {\n  return (\n    <div className=\"flex-1 py-6 border-l space-y-6\">\n      <ChunkToolbar text=\"Chunked  results\"></ChunkToolbar>\n      <div className=\"space-y-6  overflow-auto max-h-[87vh] px-9\">\n        {list.map((x, idx) => (\n          <ChunkCard key={idx} content={x.content} activated></ChunkCard>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { ParsedPageCard } from './chunk-card';\nimport { ChunkToolbar } from './chunk-toolbar';\n\nconst list = new Array(10).fill({\n  page: 'page 1',\n  content: `Word并不像 TeX／LaTeX为我们提供了合适的定理环境，因此需要我们另想办法。\n  \n  第1节 自定义定理环境\n  我们已经使用了“定理样式”作为定理排版的样式，如：\n  \n  定理1.1．对顶角相等。\n  \n  如果大家需要其他的如引理，公理，定义等环境可以仿照定义。\n  \n  定理1.2．三边对应相等的三角形全等。\n  \n  我们将这个过程也定义成了宏，在工具栏Theorem里面。书写过程如下：先写好定理本身，然后在该段落处放置光标，打开Theorem工具栏，点SetTheorem，即可见到效果。请尝试下面一个例子：`,\n});\n\nexport default function ParsedResultPanel() {\n  return (\n    <div className=\"flex-1 py-6 border-l space-y-6\">\n      <ChunkToolbar text=\"Parsed  results\"></ChunkToolbar>\n      <div className=\"space-y-6  overflow-auto max-h-[87vh] px-9\">\n        {list.map((x, idx) => (\n          <ParsedPageCard\n            key={idx}\n            page={x.page}\n            content={x.content}\n          ></ParsedPageCard>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":["ChunkResult","_jsxs","className","children","_jsx","ParsedResultPanel","ChunkedResultPanel","list","Array","fill","page","content","ChunkToolbar","text","map","x","idx","ChunkCard","activated","ParsedPageCard"],"sourceRoot":""}