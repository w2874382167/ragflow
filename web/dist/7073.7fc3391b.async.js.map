{"version":3,"file":"7073.7fc3391b.async.js","mappings":"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","sources":["webpack://web/./src/components/knowledge-base-item.tsx","webpack://web/./src/components/rerank.tsx","webpack://web/./src/components/similarity-slider/index.tsx","webpack://web/./src/components/top-n-item.tsx","webpack://web/./src/components/ui/avatar.tsx","webpack://web/./src/components/ui/dual-range-slider.tsx","webpack://web/./src/components/ui/select.tsx","webpack://web/./src/components/ui/switch.tsx","webpack://web/./src/hooks/llm-hooks.tsx","webpack://web/./src/utils/llm-util.ts"],"sourcesContent":["import { DocumentParserType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useFetchKnowledgeList } from '@/hooks/knowledge-hooks';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Avatar as AntAvatar, Form, Select, Space } from 'antd';\nimport { Book } from 'lucide-react';\nimport { useFormContext } from 'react-hook-form';\nimport { Avatar, AvatarFallback, AvatarImage } from './ui/avatar';\nimport { FormControl, FormField, FormItem, FormLabel } from './ui/form';\nimport { MultiSelect } from './ui/multi-select';\n\ninterface KnowledgeBaseItemProps {\n  required?: boolean;\n  onChange?(): void;\n}\n\nconst KnowledgeBaseItem = ({\n  required = true,\n  onChange,\n}: KnowledgeBaseItemProps) => {\n  const { t } = useTranslate('chat');\n\n  const { list: knowledgeList } = useFetchKnowledgeList(true);\n\n  const filteredKnowledgeList = knowledgeList.filter(\n    (x) => x.parser_id !== DocumentParserType.Tag,\n  );\n\n  const knowledgeOptions = filteredKnowledgeList.map((x) => ({\n    label: (\n      <Space>\n        <AntAvatar size={20} icon={<UserOutlined />} src={x.avatar} />\n        {x.name}\n      </Space>\n    ),\n    value: x.id,\n  }));\n\n  return (\n    <Form.Item\n      label={t('knowledgeBases')}\n      name=\"kb_ids\"\n      tooltip={t('knowledgeBasesTip')}\n      rules={[\n        {\n          required,\n          message: t('knowledgeBasesMessage'),\n          type: 'array',\n        },\n      ]}\n    >\n      <Select\n        mode=\"multiple\"\n        options={knowledgeOptions}\n        placeholder={t('knowledgeBasesMessage')}\n        onChange={onChange}\n      ></Select>\n    </Form.Item>\n  );\n};\n\nexport default KnowledgeBaseItem;\n\nexport function KnowledgeBaseFormField() {\n  const form = useFormContext();\n  const { t } = useTranslate('chat');\n\n  const { list: knowledgeList } = useFetchKnowledgeList(true);\n\n  const filteredKnowledgeList = knowledgeList.filter(\n    (x) => x.parser_id !== DocumentParserType.Tag,\n  );\n\n  const knowledgeOptions = filteredKnowledgeList.map((x) => ({\n    label: x.name,\n    value: x.id,\n    icon: () => (\n      <Avatar className=\"size-4 mr-2\">\n        <AvatarImage src={x.avatar} />\n        <AvatarFallback>\n          <Book />\n        </AvatarFallback>\n      </Avatar>\n    ),\n  }));\n\n  return (\n    <FormField\n      control={form.control}\n      name=\"kb_ids\"\n      render={({ field }) => (\n        <FormItem>\n          <FormLabel>{t('knowledgeBases')}</FormLabel>\n          <FormControl>\n            <MultiSelect\n              options={knowledgeOptions}\n              onValueChange={field.onChange}\n              placeholder={t('knowledgeBasesMessage')}\n              variant=\"inverted\"\n              maxCount={100}\n              defaultValue={field.value}\n              {...field}\n            />\n          </FormControl>\n        </FormItem>\n      )}\n    />\n  );\n}\n","import { LlmModelType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useSelectLlmOptionsByModelType } from '@/hooks/llm-hooks';\nimport { Select as AntSelect, Form, message, Slider } from 'antd';\nimport { useCallback } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { SingleFormSlider } from './ui/dual-range-slider';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from './ui/form';\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n  SelectValue,\n} from './ui/select';\n\ntype FieldType = {\n  rerank_id?: string;\n  top_k?: number;\n};\n\nexport const RerankItem = () => {\n  const { t } = useTranslate('knowledgeDetails');\n  const allOptions = useSelectLlmOptionsByModelType();\n  const [messageApi, contextHolder] = message.useMessage();\n\n  const handleChange = useCallback(\n    (val: string) => {\n      if (val) {\n        messageApi.open({\n          type: 'warning',\n          content: t('reRankModelWaring'),\n        });\n      }\n    },\n    [messageApi, t],\n  );\n\n  return (\n    <>\n      {contextHolder}\n      <Form.Item\n        label={t('rerankModel')}\n        name={'rerank_id'}\n        tooltip={t('rerankTip')}\n      >\n        <AntSelect\n          options={allOptions[LlmModelType.Rerank]}\n          allowClear\n          placeholder={t('rerankPlaceholder')}\n          onChange={handleChange}\n        />\n      </Form.Item>\n    </>\n  );\n};\n\nconst Rerank = () => {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <>\n      <RerankItem></RerankItem>\n      <Form.Item noStyle dependencies={['rerank_id']}>\n        {({ getFieldValue }) => {\n          const rerankId = getFieldValue('rerank_id');\n          return (\n            rerankId && (\n              <Form.Item<FieldType>\n                label={t('topK')}\n                name={'top_k'}\n                initialValue={1024}\n                tooltip={t('topKTip')}\n              >\n                <Slider max={2048} min={1} />\n              </Form.Item>\n            )\n          );\n        }}\n      </Form.Item>\n    </>\n  );\n};\n\nexport default Rerank;\n\nconst RerankId = 'rerank_id';\n\nfunction RerankFormField() {\n  const form = useFormContext();\n  const { t } = useTranslate('knowledgeDetails');\n  const allOptions = useSelectLlmOptionsByModelType();\n  const options = allOptions[LlmModelType.Rerank];\n\n  return (\n    <FormField\n      control={form.control}\n      name={RerankId}\n      render={({ field }) => (\n        <FormItem>\n          <FormLabel>{t('rerankModel')}</FormLabel>\n          <FormControl>\n            <Select onValueChange={field.onChange} {...field}>\n              <SelectTrigger\n                value={field.value}\n                onReset={() => {\n                  form.resetField(RerankId);\n                }}\n              >\n                <SelectValue placeholder={t('rerankPlaceholder')} />\n              </SelectTrigger>\n              <SelectContent>\n                {options.map((x) => (\n                  <SelectGroup key={x.label}>\n                    <SelectLabel>{x.label}</SelectLabel>\n                    {x.options.map((y) => (\n                      <SelectItem\n                        value={y.value}\n                        key={y.value}\n                        disabled={y.disabled}\n                      >\n                        {y.label}\n                      </SelectItem>\n                    ))}\n                  </SelectGroup>\n                ))}\n              </SelectContent>\n            </Select>\n          </FormControl>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  );\n}\n\nexport function RerankFormFields() {\n  const { control, watch } = useFormContext();\n  const { t } = useTranslate('knowledgeDetails');\n  const rerankId = watch(RerankId);\n\n  return (\n    <>\n      <RerankFormField></RerankFormField>\n      {rerankId && (\n        <FormField\n          control={control}\n          name={'top_k'}\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('topK')}</FormLabel>\n              <FormControl>\n                <SingleFormSlider\n                  {...field}\n                  max={2048}\n                  min={1}\n                ></SingleFormSlider>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n      )}\n    </>\n  );\n}\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Slider } from 'antd';\nimport { useFormContext } from 'react-hook-form';\nimport { SingleFormSlider } from '../ui/dual-range-slider';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '../ui/form';\n\ntype FieldType = {\n  similarity_threshold?: number;\n  // vector_similarity_weight?: number;\n};\n\ninterface IProps {\n  isTooltipShown?: boolean;\n  vectorSimilarityWeightName?: string;\n}\n\nconst SimilaritySlider = ({\n  isTooltipShown = false,\n  vectorSimilarityWeightName = 'vector_similarity_weight',\n}: IProps) => {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <>\n      <Form.Item<FieldType>\n        label={t('similarityThreshold')}\n        name={'similarity_threshold'}\n        tooltip={isTooltipShown && t('similarityThresholdTip')}\n        initialValue={0.2}\n      >\n        <Slider max={1} step={0.01} />\n      </Form.Item>\n      <Form.Item\n        label={t('vectorSimilarityWeight')}\n        name={vectorSimilarityWeightName}\n        initialValue={1 - 0.3}\n        tooltip={isTooltipShown && t('vectorSimilarityWeightTip')}\n      >\n        <Slider max={1} step={0.01} />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default SimilaritySlider;\n\ninterface SimilaritySliderFormFieldProps {\n  vectorSimilarityWeightName?: string;\n  isTooltipShown?: boolean;\n}\n\nexport function SimilaritySliderFormField({\n  vectorSimilarityWeightName = 'vector_similarity_weight',\n  isTooltipShown,\n}: SimilaritySliderFormFieldProps) {\n  const form = useFormContext();\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <>\n      <FormField\n        control={form.control}\n        name={'similarity_threshold'}\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel tooltip={isTooltipShown && t('similarityThresholdTip')}>\n              {t('similarityThreshold')}\n            </FormLabel>\n            <FormControl>\n              <SingleFormSlider\n                {...field}\n                max={1}\n                step={0.01}\n              ></SingleFormSlider>\n            </FormControl>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n      <FormField\n        control={form.control}\n        name={vectorSimilarityWeightName}\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel\n              tooltip={isTooltipShown && t('vectorSimilarityWeightTip')}\n            >\n              {t('vectorSimilarityWeight')}\n            </FormLabel>\n            <FormControl>\n              <SingleFormSlider\n                {...field}\n                max={1}\n                step={0.01}\n              ></SingleFormSlider>\n            </FormControl>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n    </>\n  );\n}\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Slider } from 'antd';\nimport { useFormContext } from 'react-hook-form';\nimport { SingleFormSlider } from './ui/dual-range-slider';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from './ui/form';\n\ntype FieldType = {\n  top_n?: number;\n};\n\ninterface IProps {\n  initialValue?: number;\n  max?: number;\n}\n\nconst TopNItem = ({ initialValue = 8, max = 30 }: IProps) => {\n  const { t } = useTranslate('chat');\n\n  return (\n    <Form.Item<FieldType>\n      label={t('topN')}\n      name={'top_n'}\n      initialValue={initialValue}\n      tooltip={t('topNTip')}\n    >\n      <Slider max={max} />\n    </Form.Item>\n  );\n};\n\nexport default TopNItem;\n\ninterface SimilaritySliderFormFieldProps {\n  max?: number;\n}\n\nexport function TopNFormField({ max = 30 }: SimilaritySliderFormFieldProps) {\n  const form = useFormContext();\n  const { t } = useTranslate('chat');\n\n  return (\n    <FormField\n      control={form.control}\n      name={'top_n'}\n      render={({ field }) => (\n        <FormItem>\n          <FormLabel tooltip={t('topNTip')}>{t('topN')}</FormLabel>\n          <FormControl>\n            <SingleFormSlider {...field} max={max}></SingleFormSlider>\n          </FormControl>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  );\n}\n","'use client';\n\nimport * as AvatarPrimitive from '@radix-ui/react-avatar';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      'relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full',\n      className,\n    )}\n    {...props}\n  />\n));\nAvatar.displayName = AvatarPrimitive.Root.displayName;\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn('aspect-square h-full w-full', className)}\n    {...props}\n  />\n));\nAvatarImage.displayName = AvatarPrimitive.Image.displayName;\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      'flex h-full w-full items-center justify-center rounded-full bg-muted',\n      className,\n    )}\n    {...props}\n  />\n));\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;\n\nexport { Avatar, AvatarFallback, AvatarImage };\n\ntype AvatarProps = React.ComponentProps<typeof Avatar>;\n\ninterface AvatarGroupProps extends React.ComponentProps<'div'> {\n  children: React.ReactElement<AvatarProps>[];\n  max?: number;\n}\n\nexport const AvatarGroup = ({\n  children,\n  max,\n  className,\n  ...props\n}: AvatarGroupProps) => {\n  const totalAvatars = React.Children.count(children);\n  const displayedAvatars = React.Children.toArray(children)\n    .slice(0, max)\n    .reverse();\n  const remainingAvatars = max ? Math.max(totalAvatars - max, 1) : 0;\n\n  return (\n    <div\n      className={cn('flex items-center flex-row-reverse', className)}\n      {...props}\n    >\n      {remainingAvatars > 0 && (\n        <Avatar className=\"-ml-2 hover:z-10 relative ring-2 ring-background\">\n          <AvatarFallback className=\"bg-muted-foreground text-white\">\n            +{remainingAvatars}\n          </AvatarFallback>\n        </Avatar>\n      )}\n      {displayedAvatars.map((avatar, index) => {\n        if (!React.isValidElement(avatar)) return null;\n\n        return (\n          <div key={index} className=\"-ml-2 hover:z-10 relative\">\n            {React.cloneElement(avatar as React.ReactElement<AvatarProps>, {\n              className: 'ring-2 ring-background',\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","'use client';\n\nimport * as SliderPrimitive from '@radix-ui/react-slider';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\ninterface DualRangeSliderProps\n  extends React.ComponentProps<typeof SliderPrimitive.Root> {\n  labelPosition?: 'top' | 'bottom';\n  label?: (value: number | undefined) => React.ReactNode;\n}\n\nconst DualRangeSlider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  DualRangeSliderProps\n>(({ className, label, labelPosition = 'top', ...props }, ref) => {\n  const initialValue = Array.isArray(props.value)\n    ? props.value\n    : [props.min, props.max];\n\n  return (\n    <SliderPrimitive.Root\n      ref={ref}\n      className={cn(\n        'relative flex w-full touch-none select-none items-center',\n        className,\n      )}\n      {...props}\n    >\n      <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n        <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n      </SliderPrimitive.Track>\n      {initialValue.map((value, index) => (\n        <React.Fragment key={index}>\n          <SliderPrimitive.Thumb className=\"relative block h-4 w-4 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 cursor-pointer\">\n            {label && (\n              <span\n                className={cn(\n                  'absolute flex w-full justify-center',\n                  labelPosition === 'top' && '-top-7',\n                  labelPosition === 'bottom' && 'top-4',\n                )}\n              >\n                {label(value)}\n              </span>\n            )}\n          </SliderPrimitive.Thumb>\n        </React.Fragment>\n      ))}\n    </SliderPrimitive.Root>\n  );\n});\nDualRangeSlider.displayName = 'DualRangeSlider';\n\ntype SingleSliderProps = Omit<\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>,\n  'onChange' | 'value'\n> & { onChange: (value: number) => void; value: number };\n\nconst SingleFormSlider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  SingleSliderProps\n>(({ value, onChange, ...props }, ref) => {\n  return (\n    <DualRangeSlider\n      ref={ref}\n      label={(value) => value}\n      value={[value]}\n      onValueChange={(vals) => {\n        onChange(vals[0]);\n      }}\n      {...props}\n    />\n  );\n});\n\nexport { DualRangeSlider, SingleFormSlider };\n","'use client';\n\nimport * as SelectPrimitive from '@radix-ui/react-select';\nimport { Check, ChevronDown, ChevronUp, X } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\nimport { ControllerRenderProps } from 'react-hook-form';\n\nimport { FormControl } from '@/components/ui/form';\nimport { forwardRef, useCallback, useEffect } from 'react';\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger> & {\n    onReset?: () => void;\n    allowClear?: boolean;\n  }\n>(({ className, children, value, onReset, allowClear, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'flex h-10 w-full items-center justify-between rounded-md border border-input bg-colors-background-inverse-weak px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1',\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon\n      asChild\n      onPointerDown={(event) => {\n        event.stopPropagation();\n      }}\n    >\n      {value && allowClear ? (\n        <X className=\"h-4 w-4 opacity-50 cursor-pointer\" onClick={onReset} />\n      ) : (\n        <ChevronDown className=\"h-4 w-4 opacity-50\" />\n      )}\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      'flex cursor-default items-center justify-center py-1',\n      className,\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      'flex cursor-default items-center justify-center py-1',\n      className,\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = 'popper', ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        'relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        position === 'popper' &&\n          'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n        className,\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          'p-1',\n          position === 'popper' &&\n            'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]',\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn('py-1.5 pl-8 pr-2 text-sm font-semibold', className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      'relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn('-mx-1 my-1 h-px bg-muted', className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n};\n\nexport type RAGFlowSelectOptionType = {\n  label: React.ReactNode;\n  value: string;\n  disabled?: boolean;\n};\n\nexport type RAGFlowSelectGroupOptionType = {\n  label: React.ReactNode;\n  options: RAGFlowSelectOptionType[];\n};\n\nexport type RAGFlowSelectProps = Partial<ControllerRenderProps> & {\n  FormControlComponent?: typeof FormControl;\n  options?: (RAGFlowSelectOptionType | RAGFlowSelectGroupOptionType)[];\n  allowClear?: boolean;\n  placeholder?: React.ReactNode;\n  contentProps?: React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>;\n} & SelectPrimitive.SelectProps;\n\n/**\n *\n * Reference:\n * https://github.com/shadcn-ui/ui/discussions/638\n * https://github.com/radix-ui/primitives/discussions/2645#discussioncomment-8343397\n *\n * @export\n * @param {(Partial<ControllerRenderProps> & {\n *   FormControlComponent?: typeof FormControl;\n * })} {\n *   value: initialValue,\n *   onChange,\n *   FormControlComponent,\n * }\n * @return {*}\n */\nexport const RAGFlowSelect = forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  RAGFlowSelectProps\n>(function (\n  {\n    value: initialValue,\n    onChange,\n    FormControlComponent,\n    options = [],\n    allowClear,\n    placeholder,\n    contentProps = {},\n  },\n  ref,\n) {\n  const [key, setKey] = React.useState(+new Date());\n  const [value, setValue] = React.useState<string | undefined>(undefined);\n\n  const FormControlWidget = FormControlComponent\n    ? FormControlComponent\n    : ({ children }: React.PropsWithChildren) => <div>{children}</div>;\n\n  const handleChange = useCallback(\n    (val?: string) => {\n      setValue(val);\n      onChange?.(val);\n    },\n    [onChange],\n  );\n\n  const handleReset = useCallback(() => {\n    handleChange(undefined);\n    setKey(+new Date());\n  }, [handleChange]);\n\n  useEffect(() => {\n    setValue((preValue) => {\n      if (preValue !== initialValue) {\n        return initialValue;\n      }\n      return preValue;\n    });\n  }, [initialValue]);\n\n  return (\n    <Select onValueChange={handleChange} value={value} key={key}>\n      <FormControlWidget>\n        <SelectTrigger\n          className=\"bg-colors-background-inverse-weak\"\n          value={value}\n          onReset={handleReset}\n          allowClear={allowClear}\n          ref={ref}\n        >\n          <SelectValue placeholder={placeholder} />\n        </SelectTrigger>\n      </FormControlWidget>\n      <SelectContent {...contentProps}>\n        {options.map((o, idx) => {\n          if ('value' in o) {\n            return (\n              <SelectItem\n                value={o.value as RAGFlowSelectOptionType['value']}\n                key={o.value}\n                disabled={o.disabled}\n              >\n                {o.label}\n              </SelectItem>\n            );\n          }\n\n          return (\n            <SelectGroup key={idx}>\n              <SelectLabel>{o.label}</SelectLabel>\n              {o.options.map((x) => (\n                <SelectItem value={x.value} key={x.value} disabled={x.disabled}>\n                  {x.label}\n                </SelectItem>\n              ))}\n            </SelectGroup>\n          );\n        })}\n      </SelectContent>\n    </Select>\n  );\n});\n\nRAGFlowSelect.displayName = 'RAGFlowSelect';\n","'use client';\n\nimport * as SwitchPrimitives from '@radix-ui/react-switch';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      'peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-colors-background-core-standard data-[state=unchecked]:bg-colors-background-inverse-standard',\n      className,\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        'pointer-events-none block h-5 w-5 rounded-full bg-colors-text-neutral-strong shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0',\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n","import { LlmIcon } from '@/components/svg-icon';\nimport { LlmModelType } from '@/constants/knowledge';\nimport { ResponseGetType } from '@/interfaces/database/base';\nimport {\n  IFactory,\n  IMyLlmValue,\n  IThirdOAIModelCollection as IThirdAiModelCollection,\n  IThirdOAIModel,\n  IThirdOAIModelCollection,\n} from '@/interfaces/database/llm';\nimport {\n  IAddLlmRequestBody,\n  IDeleteLlmRequestBody,\n} from '@/interfaces/request/llm';\nimport userService from '@/services/user-service';\nimport { sortLLmFactoryListBySpecifiedOrder } from '@/utils/common-util';\nimport { getLLMIconName, getRealModelName } from '@/utils/llm-util';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Flex, message } from 'antd';\nimport { DefaultOptionType } from 'antd/es/select';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const useFetchLlmList = (\n  modelType?: LlmModelType,\n): IThirdAiModelCollection => {\n  const { data } = useQuery({\n    queryKey: ['llmList'],\n    initialData: {},\n    queryFn: async () => {\n      const { data } = await userService.llm_list({ model_type: modelType });\n\n      return data?.data ?? {};\n    },\n  });\n\n  return data;\n};\n\nexport const useSelectLlmOptions = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const embeddingModelOptions = useMemo(() => {\n    return Object.entries(llmInfo).map(([key, value]) => {\n      return {\n        label: key,\n        options: value.map((x) => ({\n          label: getRealModelName(x.llm_name),\n          value: `${x.llm_name}@${x.fid}`,\n          disabled: !x.available,\n        })),\n      };\n    });\n  }, [llmInfo]);\n\n  return embeddingModelOptions;\n};\n\nfunction buildLlmOptionsWithIcon(x: IThirdOAIModel) {\n  return {\n    label: (\n      <Flex align=\"center\" gap={6}>\n        <LlmIcon\n          name={getLLMIconName(x.fid, x.llm_name)}\n          width={26}\n          height={26}\n          size={'small'}\n        />\n        <span>{getRealModelName(x.llm_name)}</span>\n      </Flex>\n    ),\n    value: `${x.llm_name}@${x.fid}`,\n    disabled: !x.available,\n  };\n}\n\nexport const useSelectLlmOptionsByModelType = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const groupImage2TextOptions = () => {\n    const modelType = LlmModelType.Image2text;\n    const modelTag = modelType.toUpperCase();\n\n    return Object.entries(llmInfo)\n      .map(([key, value]) => {\n        return {\n          label: key,\n          options: value\n            .filter(\n              (x) =>\n                (x.model_type.includes(modelType) ||\n                  (x.tags && x.tags.includes(modelTag))) &&\n                x.available,\n            )\n            .map(buildLlmOptionsWithIcon),\n        };\n      })\n      .filter((x) => x.options.length > 0);\n  };\n\n  const groupOptionsByModelType = (modelType: LlmModelType) => {\n    return Object.entries(llmInfo)\n      .filter(([, value]) =>\n        modelType ? value.some((x) => x.model_type.includes(modelType)) : true,\n      )\n      .map(([key, value]) => {\n        return {\n          label: key,\n          options: value\n            .filter(\n              (x) =>\n                (modelType ? x.model_type.includes(modelType) : true) &&\n                x.available,\n            )\n            .map(buildLlmOptionsWithIcon),\n        };\n      })\n      .filter((x) => x.options.length > 0);\n  };\n\n  return {\n    [LlmModelType.Chat]: groupOptionsByModelType(LlmModelType.Chat),\n    [LlmModelType.Embedding]: groupOptionsByModelType(LlmModelType.Embedding),\n    [LlmModelType.Image2text]: groupImage2TextOptions(),\n    [LlmModelType.Speech2text]: groupOptionsByModelType(\n      LlmModelType.Speech2text,\n    ),\n    [LlmModelType.Rerank]: groupOptionsByModelType(LlmModelType.Rerank),\n    [LlmModelType.TTS]: groupOptionsByModelType(LlmModelType.TTS),\n  };\n};\n\nexport const useComposeLlmOptionsByModelTypes = (\n  modelTypes: LlmModelType[],\n) => {\n  const allOptions = useSelectLlmOptionsByModelType();\n\n  return modelTypes.reduce<\n    (DefaultOptionType & {\n      options: { label: JSX.Element; value: string; disabled: boolean }[];\n    })[]\n  >((pre, cur) => {\n    const options = allOptions[cur];\n    options.forEach((x) => {\n      const item = pre.find((y) => y.label === x.label);\n      if (item) {\n        item.options.push(...x.options);\n      } else {\n        pre.push(x);\n      }\n    });\n\n    return pre;\n  }, []);\n};\n\nexport const useFetchLlmFactoryList = (): ResponseGetType<IFactory[]> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['factoryList'],\n    initialData: [],\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.factories_list();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading };\n};\n\nexport type LlmItem = { name: string; logo: string } & IMyLlmValue;\n\nexport const useFetchMyLlmList = (): ResponseGetType<\n  Record<string, IMyLlmValue>\n> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['myLlmList'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.my_llm();\n\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useSelectLlmList = () => {\n  const { data: myLlmList, loading: myLlmListLoading } = useFetchMyLlmList();\n  const { data: factoryList, loading: factoryListLoading } =\n    useFetchLlmFactoryList();\n\n  const nextMyLlmList: Array<LlmItem> = useMemo(() => {\n    return Object.entries(myLlmList).map(([key, value]) => ({\n      name: key,\n      logo: factoryList.find((x) => x.name === key)?.logo ?? '',\n      ...value,\n      llm: value.llm.map((x) => ({ ...x, name: x.name })),\n    }));\n  }, [myLlmList, factoryList]);\n\n  const nextFactoryList = useMemo(() => {\n    const currentList = factoryList.filter((x) =>\n      Object.keys(myLlmList).every((y) => y !== x.name),\n    );\n    return sortLLmFactoryListBySpecifiedOrder(currentList);\n  }, [factoryList, myLlmList]);\n\n  return {\n    myLlmList: nextMyLlmList,\n    factoryList: nextFactoryList,\n    loading: myLlmListLoading || factoryListLoading,\n  };\n};\n\nexport interface IApiKeySavingParams {\n  llm_factory: string;\n  api_key: string;\n  llm_name?: string;\n  model_type?: string;\n  base_url?: string;\n}\n\nexport const useSaveApiKey = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveApiKey'],\n    mutationFn: async (params: IApiKeySavingParams) => {\n      const { data } = await userService.set_api_key(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveApiKey: mutateAsync };\n};\n\nexport interface ISystemModelSettingSavingParams {\n  tenant_id: string;\n  name?: string;\n  asr_id: string;\n  embd_id: string;\n  img2txt_id: string;\n  llm_id: string;\n}\n\nexport const useSaveTenantInfo = () => {\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveTenantInfo'],\n    mutationFn: async (params: ISystemModelSettingSavingParams) => {\n      const { data } = await userService.set_tenant_info(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveTenantInfo: mutateAsync };\n};\n\nexport const useAddLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['addLlm'],\n    mutationFn: async (params: IAddLlmRequestBody) => {\n      const { data } = await userService.add_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, addLlm: mutateAsync };\n};\n\nexport const useDeleteLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteLlm'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.delete_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteLlm: mutateAsync };\n};\n\nexport const useDeleteFactory = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteFactory'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.deleteFactory(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteFactory: mutateAsync };\n};\n","export const getLLMIconName = (fid: string, llm_name: string) => {\n  if (fid === 'FastEmbed') {\n    return llm_name.split('/').at(0) ?? '';\n  }\n\n  return fid;\n};\n\nexport const getLlmNameAndFIdByLlmId = (llmId?: string) => {\n  const [llmName, fId] = llmId?.split('@') || [];\n\n  return { fId, llmName };\n};\n\n// The names of the large models returned by the interface are similar to \"deepseek-r1___OpenAI-API\"\nexport function getRealModelName(llmName: string) {\n  return llmName.split('__').at(0) ?? '';\n}\n"],"names":["KnowledgeBaseFormField","form","useFormContext","t","useTranslate","knowledgeOptions","useFetchKnowledgeList","list","filter","x","parser_id","DocumentParserType","Tag","map","label","name","value","id","icon","_jsxs","Avatar","className","children","_jsx","AvatarImage","src","avatar","AvatarFallback","Book","FormField","control","render","_ref2","field","FormItem","FormLabel","FormControl","MultiSelect","_objectSpread","options","onValueChange","onChange","placeholder","variant","maxCount","defaultValue","_ref","_ref$required","required","Space","AntAvatar","size","UserOutlined","Form","Item","tooltip","rules","message","type","Select","mode","RerankItem","allOptions","useSelectLlmOptionsByModelType","_message$useMessage","useMessage","_message$useMessage2","_slicedToArray","messageApi","contextHolder","handleChange","useCallback","val","open","content","_Fragment","AntSelect","LlmModelType","Rerank","allowClear","noStyle","dependencies","getFieldValue","initialValue","Slider","max","min","RerankId","RerankFormField","SelectTrigger","onReset","resetField","SelectValue","SelectContent","SelectGroup","SelectLabel","y","SelectItem","disabled","FormMessage","RerankFormFields","_useFormContext","watch","rerankId","_ref3","SingleFormSlider","SimilaritySliderFormField","_ref2$vectorSimilarit","vectorSimilarityWeightName","isTooltipShown","step","_ref4","_ref$isTooltipShown","_ref$vectorSimilarity","TopNFormField","_ref2$max","_ref$initialValue","_ref$max","_excluded","_excluded2","_excluded3","React","ref","props","_objectWithoutProperties","AvatarPrimitive","cn","displayName","DualRangeSlider","_ref$labelPosition","labelPosition","Array","isArray","SliderPrimitive","index","vals","_excluded4","_excluded5","_excluded6","_excluded7","SelectPrimitive","asChild","onPointerDown","event","stopPropagation","X","onClick","ChevronDown","SelectScrollUpButton","ChevronUp","SelectScrollDownButton","_ref4$position","position","_ref5","_ref6","Check","_ref7","RAGFlowSelect","forwardRef","_ref8","FormControlComponent","_ref8$options","_ref8$contentProps","contentProps","_React$useState","Date","_React$useState2","key","setKey","_React$useState3","undefined","_React$useState4","setValue","FormControlWidget","_ref9","handleReset","useEffect","preValue","o","idx","Switch","SwitchPrimitives","useFetchLlmList","modelType","_queryFn","_useQuery","useQuery","queryKey","initialData","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$data","_yield$userService$ll","data","wrap","_context","prev","next","userService","llm_list","model_type","sent","abrupt","stop","apply","arguments","buildLlmOptionsWithIcon","Flex","align","gap","LlmIcon","getLLMIconName","fid","llm_name","width","height","getRealModelName","concat","available","modelTag","llmInfo","groupOptionsByModelType","Object","entries","some","includes","length","_defineProperty","Chat","Embedding","Image2text","toUpperCase","tags","Speech2text","TTS","useComposeLlmOptionsByModelTypes","modelTypes","reduce","pre","cur","forEach","_item$options","item","find","push","_toConsumableArray","useSelectLlmList","_queryFn3","_useQuery3","_queryFn2","_useQuery2","_useFetchMyLlmList","gcTime","_callee3","_data$data3","_yield$userService$my","_context3","my_llm","loading","isFetching","myLlmList","myLlmListLoading","_useFetchLlmFactoryLi","_callee2","_data$data2","_yield$userService$fa","_context2","factories_list","factoryList","factoryListLoading","useMemo","_ref10","_factoryList$find$log","_factoryList$find","_ref11","logo","llm","currentList","keys","every","sortLLmFactoryListBySpecifiedOrder","useSaveApiKey","_mutationFn","queryClient","useQueryClient","useTranslation","_useMutation","useMutation","mutationKey","mutationFn","_callee4","params","_yield$userService$se","_context4","set_api_key","code","success","invalidateQueries","_x","isPending","saveApiKey","mutateAsync","useSaveTenantInfo","_mutationFn2","_useMutation2","_callee5","_yield$userService$se2","_context5","set_tenant_info","_x2","saveTenantInfo","useAddLlm","_mutationFn3","_useMutation3","_callee6","_yield$userService$ad","_context6","add_llm","_x3","addLlm","useDeleteLlm","_mutationFn4","_useMutation4","_callee7","_yield$userService$de","_context7","delete_llm","_x4","deleteLlm","useDeleteFactory","_mutationFn5","_useMutation5","_callee8","_yield$userService$de2","_context8","deleteFactory","_x5","_llm_name$split$at","split","at","getLlmNameAndFIdByLlmId","llmId","llmName","fId","_llmName$split$at"],"sourceRoot":""}