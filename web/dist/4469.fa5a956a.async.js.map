{"version":3,"file":"4469.fa5a956a.async.js","mappings":"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","sources":["webpack://web/./src/components/auto-keywords-item.tsx","webpack://web/./src/components/dataset-configuration-container.tsx","webpack://web/./src/components/delimiter.tsx","webpack://web/./src/components/edit-tag/index.less?3847","webpack://web/./src/components/edit-tag/index.tsx","webpack://web/./src/components/entity-types-item.tsx","webpack://web/./src/components/excel-to-html.tsx","webpack://web/./src/components/layout-recognize.tsx","webpack://web/./src/components/max-token-number.tsx","webpack://web/./src/components/parse-configuration/graph-rag-items.tsx","webpack://web/./src/components/parse-configuration/index.tsx","webpack://web/./src/components/svg-icon.tsx","webpack://web/./src/hooks/llm-hooks.tsx","webpack://web/./src/services/file-manager-service.ts","webpack://web/./src/utils/file-util.ts","webpack://web/./src/utils/llm-util.ts","webpack://web/./src/assets/svg/ sync \\.svg$"],"sourcesContent":["import { useTranslate } from '@/hooks/common-hooks';\nimport { Flex, Form, InputNumber, Slider } from 'antd';\n\nexport const AutoKeywordsItem = () => {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <Form.Item label={t('autoKeywords')} tooltip={t('autoKeywordsTip')}>\n      <Flex gap={20} align=\"center\">\n        <Flex flex={1}>\n          <Form.Item\n            name={['parser_config', 'auto_keywords']}\n            noStyle\n            initialValue={0}\n          >\n            <Slider max={30} style={{ width: '100%' }} />\n          </Form.Item>\n        </Flex>\n        <Form.Item name={['parser_config', 'auto_keywords']} noStyle>\n          <InputNumber max={30} min={0} />\n        </Form.Item>\n      </Flex>\n    </Form.Item>\n  );\n};\n\nexport const AutoQuestionsItem = () => {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <Form.Item label={t('autoQuestions')} tooltip={t('autoQuestionsTip')}>\n      <Flex gap={20} align=\"center\">\n        <Flex flex={1}>\n          <Form.Item\n            name={['parser_config', 'auto_questions']}\n            noStyle\n            initialValue={0}\n          >\n            <Slider max={10} style={{ width: '100%' }} />\n          </Form.Item>\n        </Flex>\n        <Form.Item name={['parser_config', 'auto_questions']} noStyle>\n          <InputNumber max={10} min={0} />\n        </Form.Item>\n      </Flex>\n    </Form.Item>\n  );\n};\n","import { cn } from '@/lib/utils';\nimport { PropsWithChildren } from 'react';\n\ntype DatasetConfigurationContainerProps = {\n  className?: string;\n  show?: boolean;\n} & PropsWithChildren;\n\nexport function DatasetConfigurationContainer({\n  children,\n  className,\n  show = true,\n}: DatasetConfigurationContainerProps) {\n  return show ? (\n    <div\n      className={cn(\n        'border p-2 rounded-lg bg-slate-50 dark:bg-gray-600',\n        className,\n      )}\n    >\n      {children}\n    </div>\n  ) : (\n    children\n  );\n}\n","import { Form, Input } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\ninterface IProps {\n  value?: string | undefined;\n  onChange?: (val: string | undefined) => void;\n  maxLength?: number;\n}\n\nexport const DelimiterInput = ({ value, onChange, maxLength }: IProps) => {\n  const nextValue = value?.replaceAll('\\n', '\\\\n');\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const val = e.target.value;\n    const nextValue = val.replaceAll('\\\\n', '\\n');\n    onChange?.(nextValue);\n  };\n  return (\n    <Input\n      value={nextValue}\n      onChange={handleInputChange}\n      maxLength={maxLength}\n    ></Input>\n  );\n};\n\nconst Delimiter = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Form.Item\n      name={['parser_config', 'delimiter']}\n      label={t('knowledgeDetails.delimiter')}\n      initialValue={`\\n`}\n      rules={[{ required: true }]}\n      tooltip={t('knowledgeDetails.delimiterTip')}\n    >\n      <DelimiterInput />\n    </Form.Item>\n  );\n};\n\nexport default Delimiter;\n","// extracted by mini-css-extract-plugin\nexport default {\"tweenGroup\":\"tweenGroup___HgfIF\",\"tag\":\"tag___EPGvm\"};","import { PlusOutlined } from '@ant-design/icons';\nimport type { InputRef } from 'antd';\nimport { Input, Tag, theme, Tooltip } from 'antd';\nimport { TweenOneGroup } from 'rc-tween-one';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport styles from './index.less';\n\ninterface EditTagsProps {\n  value?: string[];\n  onChange?: (tags: string[]) => void;\n}\n\nconst EditTag = ({ value = [], onChange }: EditTagsProps) => {\n  const { token } = theme.useToken();\n  const [inputVisible, setInputVisible] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const inputRef = useRef<InputRef>(null);\n\n  useEffect(() => {\n    if (inputVisible) {\n      inputRef.current?.focus();\n    }\n  }, [inputVisible]);\n\n  const handleClose = (removedTag: string) => {\n    const newTags = value?.filter((tag) => tag !== removedTag);\n    onChange?.(newTags ?? []);\n  };\n\n  const showInput = () => {\n    setInputVisible(true);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleInputConfirm = () => {\n    if (inputValue && value) {\n      const newTags = inputValue\n        .split(';')\n        .map((tag) => tag.trim())\n        .filter((tag) => tag && !value.includes(tag));\n      onChange?.([...value, ...newTags]);\n    }\n    setInputVisible(false);\n    setInputValue('');\n  };\n\n  const forMap = (tag: string) => {\n    return (\n      <Tooltip title={tag}>\n        <Tag\n          key={tag}\n          className={styles.tag}\n          closable\n          onClose={(e) => {\n            e.preventDefault();\n            handleClose(tag);\n          }}\n        >\n          {tag}\n        </Tag>\n      </Tooltip>\n    );\n  };\n\n  const tagChild = value?.map(forMap);\n\n  const tagPlusStyle: React.CSSProperties = {\n    background: token.colorBgContainer,\n    borderStyle: 'dashed',\n  };\n\n  return (\n    <div>\n      {Array.isArray(tagChild) && tagChild.length > 0 && (\n        <TweenOneGroup\n          className={styles.tweenGroup}\n          enter={{\n            scale: 0.8,\n            opacity: 0,\n            type: 'from',\n            duration: 100,\n          }}\n          onEnd={(e) => {\n            if (e.type === 'appear' || e.type === 'enter') {\n              (e.target as any).style = 'display: inline-block';\n            }\n          }}\n          leave={{ opacity: 0, width: 0, scale: 0, duration: 200 }}\n          appear={false}\n        >\n          {tagChild}\n        </TweenOneGroup>\n      )}\n      {inputVisible ? (\n        <Input\n          ref={inputRef}\n          type=\"text\"\n          size=\"small\"\n          value={inputValue}\n          onChange={handleInputChange}\n          onBlur={handleInputConfirm}\n          onPressEnter={handleInputConfirm}\n        />\n      ) : (\n        <Tag onClick={showInput} style={tagPlusStyle}>\n          <PlusOutlined />\n        </Tag>\n      )}\n    </div>\n  );\n};\n\nexport default EditTag;\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Form } from 'antd';\nimport EditTag from './edit-tag';\n\nconst initialEntityTypes = [\n  'organization',\n  'person',\n  'geo',\n  'event',\n  'category',\n];\n\ntype IProps = {\n  field?: string[];\n};\n\nconst EntityTypesItem = ({\n  field = ['parser_config', 'entity_types'],\n}: IProps) => {\n  const { t } = useTranslate('knowledgeConfiguration');\n  return (\n    <Form.Item\n      name={field}\n      label={t('entityTypes')}\n      rules={[{ required: true }]}\n      initialValue={initialEntityTypes}\n    >\n      <EditTag></EditTag>\n    </Form.Item>\n  );\n};\n\nexport default EntityTypesItem;\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Switch } from 'antd';\n\nconst ExcelToHtml = () => {\n  const { t } = useTranslate('knowledgeDetails');\n  return (\n    <Form.Item\n      name={['parser_config', 'html4excel']}\n      label={t('html4excel')}\n      initialValue={false}\n      valuePropName=\"checked\"\n      tooltip={t('html4excelTip')}\n    >\n      <Switch />\n    </Form.Item>\n  );\n};\n\nexport default ExcelToHtml;\n","import { LlmModelType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useSelectLlmOptionsByModelType } from '@/hooks/llm-hooks';\nimport { Form, Select } from 'antd';\nimport { camelCase } from 'lodash';\nimport { useMemo } from 'react';\n\nconst enum DocumentType {\n  DeepDOC = 'DeepDOC',\n  PlainText = 'Plain Text',\n}\n\nconst LayoutRecognize = () => {\n  const { t } = useTranslate('knowledgeDetails');\n  const allOptions = useSelectLlmOptionsByModelType();\n\n  const options = useMemo(() => {\n    const list = [DocumentType.DeepDOC, DocumentType.PlainText].map((x) => ({\n      label: x === DocumentType.PlainText ? t(camelCase(x)) : 'DeepDoc',\n      value: x,\n    }));\n\n    const image2TextList = allOptions[LlmModelType.Image2text].map((x) => {\n      return {\n        ...x,\n        options: x.options.map((y) => {\n          return {\n            ...y,\n            label: (\n              <div className=\"flex justify-between items-center gap-2\">\n                {y.label}\n                <span className=\"text-red-500 text-sm\">Experimental</span>\n              </div>\n            ),\n          };\n        }),\n      };\n    });\n\n    return [...list, ...image2TextList];\n  }, [allOptions, t]);\n\n  return (\n    <Form.Item\n      name={['parser_config', 'layout_recognize']}\n      label={t('layoutRecognize')}\n      initialValue={DocumentType.DeepDOC}\n      tooltip={t('layoutRecognizeTip')}\n    >\n      <Select options={options} popupMatchSelectWidth={false} />\n    </Form.Item>\n  );\n};\n\nexport default LayoutRecognize;\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Flex, Form, InputNumber, Slider } from 'antd';\n\ninterface IProps {\n  initialValue?: number;\n  max?: number;\n}\n\nconst MaxTokenNumber = ({ initialValue = 512, max = 2048 }: IProps) => {\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  return (\n    <Form.Item label={t('chunkTokenNumber')} tooltip={t('chunkTokenNumberTip')}>\n      <Flex gap={20} align=\"center\">\n        <Flex flex={1}>\n          <Form.Item\n            name={['parser_config', 'chunk_token_num']}\n            noStyle\n            initialValue={initialValue}\n            rules={[{ required: true, message: t('chunkTokenNumberMessage') }]}\n          >\n            <Slider max={max} style={{ width: '100%' }} />\n          </Form.Item>\n        </Flex>\n        <Form.Item\n          name={['parser_config', 'chunk_token_num']}\n          noStyle\n          rules={[{ required: true, message: t('chunkTokenNumberMessage') }]}\n        >\n          <InputNumber max={max} min={0} />\n        </Form.Item>\n      </Flex>\n    </Form.Item>\n  );\n};\n\nexport default MaxTokenNumber;\n","import { DocumentParserType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { cn } from '@/lib/utils';\nimport { Form, Select, Switch } from 'antd';\nimport { upperFirst } from 'lodash';\nimport { useCallback, useMemo } from 'react';\nimport { DatasetConfigurationContainer } from '../dataset-configuration-container';\nimport EntityTypesItem from '../entity-types-item';\n\nconst excludedTagParseMethods = [\n  DocumentParserType.Table,\n  DocumentParserType.KnowledgeGraph,\n  DocumentParserType.Tag,\n];\n\nexport const showTagItems = (parserId: DocumentParserType) => {\n  return !excludedTagParseMethods.includes(parserId);\n};\n\nconst enum MethodValue {\n  General = 'general',\n  Light = 'light',\n}\n\nexport const excludedParseMethods = [\n  DocumentParserType.Table,\n  DocumentParserType.Resume,\n  DocumentParserType.Picture,\n  DocumentParserType.KnowledgeGraph,\n  DocumentParserType.Qa,\n  DocumentParserType.Tag,\n];\n\nexport const showGraphRagItems = (parserId: DocumentParserType | undefined) => {\n  return !excludedParseMethods.some((x) => x === parserId);\n};\n\ntype GraphRagItemsProps = {\n  marginBottom?: boolean;\n};\n\n// The three types \"table\", \"resume\" and \"one\" do not display this configuration.\nconst GraphRagItems = ({ marginBottom = false }: GraphRagItemsProps) => {\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  const methodOptions = useMemo(() => {\n    return [MethodValue.Light, MethodValue.General].map((x) => ({\n      value: x,\n      label: upperFirst(x),\n    }));\n  }, []);\n\n  const renderWideTooltip = useCallback(\n    (title: React.ReactNode | string) => {\n      return {\n        title: typeof title === 'string' ? t(title) : title,\n        overlayInnerStyle: { width: '32vw' },\n      };\n    },\n    [t],\n  );\n\n  return (\n    <DatasetConfigurationContainer className={cn({ 'mb-4': marginBottom })}>\n      <Form.Item\n        name={['parser_config', 'graphrag', 'use_graphrag']}\n        label={t('useGraphRag')}\n        initialValue={false}\n        valuePropName=\"checked\"\n        tooltip={t('useGraphRagTip')}\n      >\n        <Switch />\n      </Form.Item>\n      <Form.Item\n        shouldUpdate={(prevValues, curValues) =>\n          prevValues.parser_config.graphrag.use_graphrag !==\n          curValues.parser_config.graphrag.use_graphrag\n        }\n      >\n        {({ getFieldValue }) => {\n          const useRaptor = getFieldValue([\n            'parser_config',\n            'graphrag',\n            'use_graphrag',\n          ]);\n\n          return (\n            useRaptor && (\n              <>\n                <EntityTypesItem\n                  field={['parser_config', 'graphrag', 'entity_types']}\n                ></EntityTypesItem>\n                <Form.Item\n                  name={['parser_config', 'graphrag', 'method']}\n                  label={t('graphRagMethod')}\n                  tooltip={renderWideTooltip(\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: t('graphRagMethodTip'),\n                      }}\n                    ></div>,\n                  )}\n                  initialValue={MethodValue.Light}\n                >\n                  <Select options={methodOptions} />\n                </Form.Item>\n                <Form.Item\n                  name={['parser_config', 'graphrag', 'resolution']}\n                  label={t('resolution')}\n                  tooltip={renderWideTooltip('resolutionTip')}\n                >\n                  <Switch />\n                </Form.Item>\n                <Form.Item\n                  name={['parser_config', 'graphrag', 'community']}\n                  label={t('community')}\n                  tooltip={renderWideTooltip('communityTip')}\n                >\n                  <Switch />\n                </Form.Item>\n              </>\n            )\n          );\n        }}\n      </Form.Item>\n    </DatasetConfigurationContainer>\n  );\n};\n\nexport default GraphRagItems;\n","import { DocumentParserType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Flex, Form, Input, InputNumber, Slider, Switch } from 'antd';\nimport random from 'lodash/random';\n\nexport const excludedParseMethods = [\n  DocumentParserType.Table,\n  DocumentParserType.Resume,\n  DocumentParserType.One,\n  DocumentParserType.Picture,\n  DocumentParserType.KnowledgeGraph,\n  DocumentParserType.Qa,\n  DocumentParserType.Tag,\n];\n\nexport const showRaptorParseConfiguration = (\n  parserId: DocumentParserType | undefined,\n) => {\n  return !excludedParseMethods.some((x) => x === parserId);\n};\n\nexport const excludedTagParseMethods = [\n  DocumentParserType.Table,\n  DocumentParserType.KnowledgeGraph,\n  DocumentParserType.Tag,\n];\n\nexport const showTagItems = (parserId: DocumentParserType) => {\n  return !excludedTagParseMethods.includes(parserId);\n};\n\n// The three types \"table\", \"resume\" and \"one\" do not display this configuration.\nconst ParseConfiguration = () => {\n  const form = Form.useFormInstance();\n  const { t } = useTranslate('knowledgeConfiguration');\n\n  const handleGenerate = () => {\n    form.setFieldValue(\n      ['parser_config', 'raptor', 'random_seed'],\n      random(10000),\n    );\n  };\n\n  return (\n    <>\n      <Form.Item\n        name={['parser_config', 'raptor', 'use_raptor']}\n        label={t('useRaptor')}\n        initialValue={false}\n        valuePropName=\"checked\"\n        tooltip={t('useRaptorTip')}\n      >\n        <Switch />\n      </Form.Item>\n      <Form.Item\n        shouldUpdate={(prevValues, curValues) =>\n          prevValues.parser_config.raptor.use_raptor !==\n          curValues.parser_config.raptor.use_raptor\n        }\n      >\n        {({ getFieldValue }) => {\n          const useRaptor = getFieldValue([\n            'parser_config',\n            'raptor',\n            'use_raptor',\n          ]);\n\n          return (\n            useRaptor && (\n              <>\n                <Form.Item\n                  name={['parser_config', 'raptor', 'prompt']}\n                  label={t('prompt')}\n                  initialValue={t('promptText')}\n                  tooltip={t('promptTip')}\n                  rules={[\n                    {\n                      required: true,\n                      message: t('promptMessage'),\n                    },\n                  ]}\n                >\n                  <Input.TextArea rows={8} />\n                </Form.Item>\n                <Form.Item label={t('maxToken')} tooltip={t('maxTokenTip')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'max_token']}\n                        noStyle\n                        initialValue={256}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('maxTokenMessage'),\n                          },\n                        ]}\n                      >\n                        <Slider max={2048} style={{ width: '100%' }} />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item\n                      name={['parser_config', 'raptor', 'max_token']}\n                      noStyle\n                      rules={[\n                        {\n                          required: true,\n                          message: t('maxTokenMessage'),\n                        },\n                      ]}\n                    >\n                      <InputNumber max={2048} min={0} />\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n                <Form.Item label={t('threshold')} tooltip={t('thresholdTip')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'threshold']}\n                        noStyle\n                        initialValue={0.1}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('thresholdMessage'),\n                          },\n                        ]}\n                      >\n                        <Slider\n                          min={0}\n                          max={1}\n                          style={{ width: '100%' }}\n                          step={0.01}\n                        />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item\n                      name={['parser_config', 'raptor', 'threshold']}\n                      noStyle\n                      rules={[\n                        {\n                          required: true,\n                          message: t('thresholdMessage'),\n                        },\n                      ]}\n                    >\n                      <InputNumber max={1} min={0} step={0.01} />\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n                <Form.Item label={t('maxCluster')} tooltip={t('maxClusterTip')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'max_cluster']}\n                        noStyle\n                        initialValue={64}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('maxClusterMessage'),\n                          },\n                        ]}\n                      >\n                        <Slider min={1} max={1024} style={{ width: '100%' }} />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item\n                      name={['parser_config', 'raptor', 'max_cluster']}\n                      noStyle\n                      rules={[\n                        {\n                          required: true,\n                          message: t('maxClusterMessage'),\n                        },\n                      ]}\n                    >\n                      <InputNumber max={1024} min={1} />\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n                <Form.Item label={t('randomSeed')}>\n                  <Flex gap={20} align=\"center\">\n                    <Flex flex={1}>\n                      <Form.Item\n                        name={['parser_config', 'raptor', 'random_seed']}\n                        noStyle\n                        initialValue={0}\n                        rules={[\n                          {\n                            required: true,\n                            message: t('randomSeedMessage'),\n                          },\n                        ]}\n                      >\n                        <InputNumber style={{ width: '100%' }} />\n                      </Form.Item>\n                    </Flex>\n                    <Form.Item noStyle>\n                      <Button type=\"primary\" onClick={handleGenerate}>\n                        <PlusOutlined />\n                      </Button>\n                    </Form.Item>\n                  </Flex>\n                </Form.Item>\n              </>\n            )\n          );\n        }}\n      </Form.Item>\n    </>\n  );\n};\n\nexport default ParseConfiguration;\n","import { IconMap } from '@/constants/llm';\nimport { cn } from '@/lib/utils';\nimport Icon, { UserOutlined } from '@ant-design/icons';\nimport { IconComponentProps } from '@ant-design/icons/lib/components/Icon';\nimport { Avatar } from 'antd';\nimport { AvatarSize } from 'antd/es/avatar/AvatarContext';\n\nconst importAll = (requireContext: __WebpackModuleApi.RequireContext) => {\n  const list = requireContext.keys().map((key) => {\n    const name = key.replace(/\\.\\/(.*)\\.\\w+$/, '$1');\n    return { name, value: requireContext(key) };\n  });\n  return list;\n};\n\nlet routeList: { name: string; value: string }[] = [];\n\ntry {\n  routeList = importAll(require.context('@/assets/svg', true, /\\.svg$/));\n} catch (error) {\n  console.warn(error);\n  routeList = [];\n}\n\ninterface IProps extends IconComponentProps {\n  name: string;\n  width: string | number;\n  height?: string | number;\n  imgClass?: string;\n}\n\nconst SvgIcon = ({ name, width, height, imgClass, ...restProps }: IProps) => {\n  const ListItem = routeList.find((item) => item.name === name);\n  return (\n    <Icon\n      component={() => (\n        <img\n          src={ListItem?.value}\n          alt=\"\"\n          width={width}\n          height={height}\n          className={cn(imgClass, 'max-w-full')}\n        />\n      )}\n      {...(restProps as any)}\n    />\n  );\n};\n\nexport const LlmIcon = ({\n  name,\n  height = 48,\n  width = 48,\n  size = 'large',\n  imgClass,\n}: {\n  name: string;\n  height?: number;\n  width?: number;\n  size?: AvatarSize;\n  imgClass?: string;\n}) => {\n  const icon = IconMap[name as keyof typeof IconMap];\n\n  return icon ? (\n    <SvgIcon\n      name={`llm/${icon}`}\n      width={width}\n      height={height}\n      imgClass={imgClass}\n    ></SvgIcon>\n  ) : (\n    <Avatar shape=\"square\" size={size} icon={<UserOutlined />} />\n  );\n};\n\nexport default SvgIcon;\n","import { LlmIcon } from '@/components/svg-icon';\nimport { LlmModelType } from '@/constants/knowledge';\nimport { ResponseGetType } from '@/interfaces/database/base';\nimport {\n  IFactory,\n  IMyLlmValue,\n  IThirdOAIModelCollection as IThirdAiModelCollection,\n  IThirdOAIModel,\n  IThirdOAIModelCollection,\n} from '@/interfaces/database/llm';\nimport {\n  IAddLlmRequestBody,\n  IDeleteLlmRequestBody,\n} from '@/interfaces/request/llm';\nimport userService from '@/services/user-service';\nimport { sortLLmFactoryListBySpecifiedOrder } from '@/utils/common-util';\nimport { getLLMIconName, getRealModelName } from '@/utils/llm-util';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Flex, message } from 'antd';\nimport { DefaultOptionType } from 'antd/es/select';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const useFetchLlmList = (\n  modelType?: LlmModelType,\n): IThirdAiModelCollection => {\n  const { data } = useQuery({\n    queryKey: ['llmList'],\n    initialData: {},\n    queryFn: async () => {\n      const { data } = await userService.llm_list({ model_type: modelType });\n\n      return data?.data ?? {};\n    },\n  });\n\n  return data;\n};\n\nexport const useSelectLlmOptions = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const embeddingModelOptions = useMemo(() => {\n    return Object.entries(llmInfo).map(([key, value]) => {\n      return {\n        label: key,\n        options: value.map((x) => ({\n          label: getRealModelName(x.llm_name),\n          value: `${x.llm_name}@${x.fid}`,\n          disabled: !x.available,\n        })),\n      };\n    });\n  }, [llmInfo]);\n\n  return embeddingModelOptions;\n};\n\nfunction buildLlmOptionsWithIcon(x: IThirdOAIModel) {\n  return {\n    label: (\n      <Flex align=\"center\" gap={6}>\n        <LlmIcon\n          name={getLLMIconName(x.fid, x.llm_name)}\n          width={26}\n          height={26}\n          size={'small'}\n        />\n        <span>{getRealModelName(x.llm_name)}</span>\n      </Flex>\n    ),\n    value: `${x.llm_name}@${x.fid}`,\n    disabled: !x.available,\n  };\n}\n\nexport const useSelectLlmOptionsByModelType = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const groupImage2TextOptions = () => {\n    const modelType = LlmModelType.Image2text;\n    const modelTag = modelType.toUpperCase();\n\n    return Object.entries(llmInfo)\n      .map(([key, value]) => {\n        return {\n          label: key,\n          options: value\n            .filter(\n              (x) =>\n                (x.model_type.includes(modelType) ||\n                  (x.tags && x.tags.includes(modelTag))) &&\n                x.available,\n            )\n            .map(buildLlmOptionsWithIcon),\n        };\n      })\n      .filter((x) => x.options.length > 0);\n  };\n\n  const groupOptionsByModelType = (modelType: LlmModelType) => {\n    return Object.entries(llmInfo)\n      .filter(([, value]) =>\n        modelType ? value.some((x) => x.model_type.includes(modelType)) : true,\n      )\n      .map(([key, value]) => {\n        return {\n          label: key,\n          options: value\n            .filter(\n              (x) =>\n                (modelType ? x.model_type.includes(modelType) : true) &&\n                x.available,\n            )\n            .map(buildLlmOptionsWithIcon),\n        };\n      })\n      .filter((x) => x.options.length > 0);\n  };\n\n  return {\n    [LlmModelType.Chat]: groupOptionsByModelType(LlmModelType.Chat),\n    [LlmModelType.Embedding]: groupOptionsByModelType(LlmModelType.Embedding),\n    [LlmModelType.Image2text]: groupImage2TextOptions(),\n    [LlmModelType.Speech2text]: groupOptionsByModelType(\n      LlmModelType.Speech2text,\n    ),\n    [LlmModelType.Rerank]: groupOptionsByModelType(LlmModelType.Rerank),\n    [LlmModelType.TTS]: groupOptionsByModelType(LlmModelType.TTS),\n  };\n};\n\nexport const useComposeLlmOptionsByModelTypes = (\n  modelTypes: LlmModelType[],\n) => {\n  const allOptions = useSelectLlmOptionsByModelType();\n\n  return modelTypes.reduce<\n    (DefaultOptionType & {\n      options: { label: JSX.Element; value: string; disabled: boolean }[];\n    })[]\n  >((pre, cur) => {\n    const options = allOptions[cur];\n    options.forEach((x) => {\n      const item = pre.find((y) => y.label === x.label);\n      if (item) {\n        item.options.push(...x.options);\n      } else {\n        pre.push(x);\n      }\n    });\n\n    return pre;\n  }, []);\n};\n\nexport const useFetchLlmFactoryList = (): ResponseGetType<IFactory[]> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['factoryList'],\n    initialData: [],\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.factories_list();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading };\n};\n\nexport type LlmItem = { name: string; logo: string } & IMyLlmValue;\n\nexport const useFetchMyLlmList = (): ResponseGetType<\n  Record<string, IMyLlmValue>\n> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['myLlmList'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.my_llm();\n\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useSelectLlmList = () => {\n  const { data: myLlmList, loading: myLlmListLoading } = useFetchMyLlmList();\n  const { data: factoryList, loading: factoryListLoading } =\n    useFetchLlmFactoryList();\n\n  const nextMyLlmList: Array<LlmItem> = useMemo(() => {\n    return Object.entries(myLlmList).map(([key, value]) => ({\n      name: key,\n      logo: factoryList.find((x) => x.name === key)?.logo ?? '',\n      ...value,\n      llm: value.llm.map((x) => ({ ...x, name: x.name })),\n    }));\n  }, [myLlmList, factoryList]);\n\n  const nextFactoryList = useMemo(() => {\n    const currentList = factoryList.filter((x) =>\n      Object.keys(myLlmList).every((y) => y !== x.name),\n    );\n    return sortLLmFactoryListBySpecifiedOrder(currentList);\n  }, [factoryList, myLlmList]);\n\n  return {\n    myLlmList: nextMyLlmList,\n    factoryList: nextFactoryList,\n    loading: myLlmListLoading || factoryListLoading,\n  };\n};\n\nexport interface IApiKeySavingParams {\n  llm_factory: string;\n  api_key: string;\n  llm_name?: string;\n  model_type?: string;\n  base_url?: string;\n}\n\nexport const useSaveApiKey = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveApiKey'],\n    mutationFn: async (params: IApiKeySavingParams) => {\n      const { data } = await userService.set_api_key(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveApiKey: mutateAsync };\n};\n\nexport interface ISystemModelSettingSavingParams {\n  tenant_id: string;\n  name?: string;\n  asr_id: string;\n  embd_id: string;\n  img2txt_id: string;\n  llm_id: string;\n}\n\nexport const useSaveTenantInfo = () => {\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveTenantInfo'],\n    mutationFn: async (params: ISystemModelSettingSavingParams) => {\n      const { data } = await userService.set_tenant_info(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveTenantInfo: mutateAsync };\n};\n\nexport const useAddLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['addLlm'],\n    mutationFn: async (params: IAddLlmRequestBody) => {\n      const { data } = await userService.add_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, addLlm: mutateAsync };\n};\n\nexport const useDeleteLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteLlm'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.delete_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteLlm: mutateAsync };\n};\n\nexport const useDeleteFactory = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteFactory'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.deleteFactory(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteFactory: mutateAsync };\n};\n","import api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request from '@/utils/request';\n\nconst {\n  listFile,\n  removeFile,\n  uploadFile,\n  renameFile,\n  getAllParentFolder,\n  createFolder,\n  connectFileToKnowledge,\n  get_document_file,\n  getFile,\n  moveFile,\n} = api;\n\nconst methods = {\n  listFile: {\n    url: listFile,\n    method: 'get',\n  },\n  removeFile: {\n    url: removeFile,\n    method: 'post',\n  },\n  uploadFile: {\n    url: uploadFile,\n    method: 'post',\n  },\n  renameFile: {\n    url: renameFile,\n    method: 'post',\n  },\n  getAllParentFolder: {\n    url: getAllParentFolder,\n    method: 'get',\n  },\n  createFolder: {\n    url: createFolder,\n    method: 'post',\n  },\n  connectFileToKnowledge: {\n    url: connectFileToKnowledge,\n    method: 'post',\n  },\n  getFile: {\n    url: getFile,\n    method: 'get',\n    responseType: 'blob',\n  },\n  getDocumentFile: {\n    url: get_document_file,\n    method: 'get',\n    responseType: 'blob',\n  },\n  moveFile: {\n    url: moveFile,\n    method: 'post',\n  },\n} as const;\n\nconst fileManagerService = registerServer<keyof typeof methods>(\n  methods,\n  request,\n);\n\nexport default fileManagerService;\n","import { FileMimeType } from '@/constants/common';\nimport fileManagerService from '@/services/file-manager-service';\nimport { UploadFile } from 'antd';\n\nexport const transformFile2Base64 = (val: any): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(val);\n    reader.onload = (): void => {\n      // Create image object\n      const img = new Image();\n      img.src = reader.result as string;\n\n      img.onload = () => {\n        // Create canvas\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        // Calculate compressed dimensions, set max width/height to 800px\n        let width = img.width;\n        let height = img.height;\n        const maxSize = 100;\n\n        if (width > height && width > maxSize) {\n          height = (height * maxSize) / width;\n          width = maxSize;\n        } else if (height > maxSize) {\n          width = (width * maxSize) / height;\n          height = maxSize;\n        }\n\n        // Set canvas dimensions\n        canvas.width = width;\n        canvas.height = height;\n\n        // Draw image\n        ctx?.drawImage(img, 0, 0, width, height);\n\n        // Convert to base64, maintain original format and transparency\n        const compressedBase64 = canvas.toDataURL('image/png');\n        resolve(compressedBase64);\n      };\n\n      img.onerror = reject;\n    };\n    reader.onerror = reject;\n  });\n};\n\nexport const transformBase64ToFile = (\n  dataUrl: string,\n  filename: string = 'file',\n) => {\n  let arr = dataUrl.split(','),\n    bstr = atob(arr[1]),\n    n = bstr.length,\n    u8arr = new Uint8Array(n);\n\n  const mime = arr[0].match(/:(.*?);/);\n  const mimeType = mime ? mime[1] : 'image/png';\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new File([u8arr], filename, { type: mimeType });\n};\n\nexport const normFile = (e: any) => {\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e?.fileList;\n};\n\nexport const getUploadFileListFromBase64 = (avatar: string) => {\n  let fileList: UploadFile[] = [];\n\n  if (avatar) {\n    fileList = [{ uid: '1', name: 'file', thumbUrl: avatar, status: 'done' }];\n  }\n\n  return fileList;\n};\n\nexport const getBase64FromUploadFileList = async (fileList?: UploadFile[]) => {\n  if (Array.isArray(fileList) && fileList.length > 0) {\n    const file = fileList[0];\n    const originFileObj = file.originFileObj;\n    if (originFileObj) {\n      const base64 = await transformFile2Base64(originFileObj);\n      return base64;\n    } else {\n      return file.thumbUrl;\n    }\n    // return fileList[0].thumbUrl; TODO: Even JPG files will be converted to base64 parameters in png format\n  }\n\n  return '';\n};\n\nasync function fetchDocumentBlob(id: string, mimeType?: FileMimeType) {\n  const response = await fileManagerService.getDocumentFile({}, id);\n  const blob = new Blob([response.data], {\n    type: mimeType || response.data.type,\n  });\n\n  return blob;\n}\n\nexport async function previewHtmlFile(id: string) {\n  const blob = await fetchDocumentBlob(id, FileMimeType.Html);\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.click();\n  URL.revokeObjectURL(url);\n}\n\nexport const downloadFileFromBlob = (blob: Blob, name?: string) => {\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  if (name) {\n    a.download = name;\n  }\n  a.click();\n  window.URL.revokeObjectURL(url);\n};\n\nexport const downloadDocument = async ({\n  id,\n  filename,\n}: {\n  id: string;\n  filename?: string;\n}) => {\n  const blob = await fetchDocumentBlob(id);\n  downloadFileFromBlob(blob, filename);\n};\n\nconst Units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\nexport const formatBytes = (x: string | number) => {\n  let l = 0,\n    n = (typeof x === 'string' ? parseInt(x, 10) : x) || 0;\n\n  while (n >= 1024 && ++l) {\n    n = n / 1024;\n  }\n\n  return n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + Units[l];\n};\n\nexport const downloadJsonFile = async (\n  data: Record<string, any>,\n  fileName: string,\n) => {\n  const blob = new Blob([JSON.stringify(data)], { type: FileMimeType.Json });\n  downloadFileFromBlob(blob, fileName);\n};\n","export const getLLMIconName = (fid: string, llm_name: string) => {\n  if (fid === 'FastEmbed') {\n    return llm_name.split('/').at(0) ?? '';\n  }\n\n  return fid;\n};\n\nexport const getLlmNameAndFIdByLlmId = (llmId?: string) => {\n  const [llmName, fId] = llmId?.split('@') || [];\n\n  return { fId, llmName };\n};\n\n// The names of the large models returned by the interface are similar to \"deepseek-r1___OpenAI-API\"\nexport function getRealModelName(llmName: string) {\n  return llmName.split('__').at(0) ?? '';\n}\n","var map = {\n\t\"./akshare.svg\": 26032,\n\t\"./api.svg\": 30747,\n\t\"./arxiv.svg\": 90854,\n\t\"./assistant.svg\": 4159,\n\t\"./baidu-fanyi.svg\": 83544,\n\t\"./baidu.svg\": 92892,\n\t\"./begin.svg\": 69779,\n\t\"./bing.svg\": 55914,\n\t\"./cancel.svg\": 8156,\n\t\"./chat-app-cube.svg\": 34339,\n\t\"./chat-configuration-atom.svg\": 57950,\n\t\"./chat-star.svg\": 49570,\n\t\"./chunk-method/book-01.svg\": 38726,\n\t\"./chunk-method/book-02.svg\": 21357,\n\t\"./chunk-method/book-03.svg\": 88093,\n\t\"./chunk-method/book-04.svg\": 58355,\n\t\"./chunk-method/chunk-empty.svg\": 16035,\n\t\"./chunk-method/knowledge-graph-01.svg\": 42576,\n\t\"./chunk-method/knowledge-graph-02.svg\": 46853,\n\t\"./chunk-method/law-01.svg\": 54530,\n\t\"./chunk-method/law-02.svg\": 75787,\n\t\"./chunk-method/manual-01.svg\": 64179,\n\t\"./chunk-method/manual-02.svg\": 40547,\n\t\"./chunk-method/manual-03.svg\": 1437,\n\t\"./chunk-method/manual-04.svg\": 81486,\n\t\"./chunk-method/media-01.svg\": 33952,\n\t\"./chunk-method/media-02.svg\": 93802,\n\t\"./chunk-method/naive-01.svg\": 88488,\n\t\"./chunk-method/naive-02.svg\": 74795,\n\t\"./chunk-method/one-01.svg\": 88533,\n\t\"./chunk-method/one-02.svg\": 99199,\n\t\"./chunk-method/one-03.svg\": 23192,\n\t\"./chunk-method/one-04.svg\": 72906,\n\t\"./chunk-method/paper-01.svg\": 64018,\n\t\"./chunk-method/paper-02.svg\": 77250,\n\t\"./chunk-method/presentation-01.svg\": 87162,\n\t\"./chunk-method/presentation-02.svg\": 59640,\n\t\"./chunk-method/qa-01.svg\": 39420,\n\t\"./chunk-method/qa-02.svg\": 55086,\n\t\"./chunk-method/resume-01.svg\": 76604,\n\t\"./chunk-method/resume-02.svg\": 96131,\n\t\"./chunk-method/table-01.svg\": 42743,\n\t\"./chunk-method/table-02.svg\": 84817,\n\t\"./chunk-method/tag-01.svg\": 96953,\n\t\"./chunk-method/tag-02.svg\": 82472,\n\t\"./concentrator.svg\": 86933,\n\t\"./crawler.svg\": 71090,\n\t\"./database.svg\": 38575,\n\t\"./deepl.svg\": 98301,\n\t\"./delete.svg\": 71483,\n\t\"./disable.svg\": 84377,\n\t\"./doctor.svg\": 91433,\n\t\"./duck.svg\": 24287,\n\t\"./email.svg\": 10808,\n\t\"./enable.svg\": 8207,\n\t\"./es.svg\": 96492,\n\t\"./exesql.svg\": 43004,\n\t\"./file-icon/aep.svg\": 83889,\n\t\"./file-icon/ai.svg\": 28897,\n\t\"./file-icon/avi.svg\": 27635,\n\t\"./file-icon/css.svg\": 52229,\n\t\"./file-icon/csv.svg\": 50747,\n\t\"./file-icon/dmg.svg\": 71691,\n\t\"./file-icon/doc.svg\": 35354,\n\t\"./file-icon/docx.svg\": 69139,\n\t\"./file-icon/eps.svg\": 43279,\n\t\"./file-icon/exe.svg\": 46462,\n\t\"./file-icon/fig.svg\": 33179,\n\t\"./file-icon/folder.svg\": 54168,\n\t\"./file-icon/gif.svg\": 73845,\n\t\"./file-icon/html.svg\": 53682,\n\t\"./file-icon/indd.svg\": 26763,\n\t\"./file-icon/java.svg\": 13916,\n\t\"./file-icon/jpeg.svg\": 19525,\n\t\"./file-icon/jpg.svg\": 24674,\n\t\"./file-icon/js.svg\": 38470,\n\t\"./file-icon/json.svg\": 56373,\n\t\"./file-icon/md.svg\": 77357,\n\t\"./file-icon/mkv.svg\": 49197,\n\t\"./file-icon/mp3.svg\": 44538,\n\t\"./file-icon/mp4.svg\": 52038,\n\t\"./file-icon/mpeg.svg\": 77747,\n\t\"./file-icon/pdf.svg\": 82938,\n\t\"./file-icon/png.svg\": 71915,\n\t\"./file-icon/ppt.svg\": 85173,\n\t\"./file-icon/pptx.svg\": 62133,\n\t\"./file-icon/psd.svg\": 30182,\n\t\"./file-icon/rss.svg\": 38428,\n\t\"./file-icon/sql.svg\": 78501,\n\t\"./file-icon/svg.svg\": 72515,\n\t\"./file-icon/tiff.svg\": 4502,\n\t\"./file-icon/txt.svg\": 55773,\n\t\"./file-icon/wav.svg\": 63645,\n\t\"./file-icon/webp.svg\": 87260,\n\t\"./file-icon/xls.svg\": 5343,\n\t\"./file-icon/xlsx.svg\": 41475,\n\t\"./file-icon/xml.svg\": 38476,\n\t\"./file-management.svg\": 39121,\n\t\"./github.svg\": 69696,\n\t\"./google-scholar.svg\": 99466,\n\t\"./google.svg\": 18176,\n\t\"./graph.svg\": 57355,\n\t\"./invoke-ai.svg\": 82888,\n\t\"./jin10.svg\": 31801,\n\t\"./keyword.svg\": 30552,\n\t\"./knowledge-base.svg\": 87055,\n\t\"./knowledge-configration.svg\": 96450,\n\t\"./knowledge-dataset.svg\": 9385,\n\t\"./knowledge-testing.svg\": 65376,\n\t\"./langfuse.svg\": 6514,\n\t\"./llm/anthropic.svg\": 74768,\n\t\"./llm/azure.svg\": 99817,\n\t\"./llm/baai.svg\": 93594,\n\t\"./llm/baichuan.svg\": 6507,\n\t\"./llm/bedrock.svg\": 30818,\n\t\"./llm/chat-minimax.svg\": 69534,\n\t\"./llm/cohere.svg\": 86198,\n\t\"./llm/deepseek.svg\": 23476,\n\t\"./llm/fish-audio.svg\": 97300,\n\t\"./llm/gemini.svg\": 69156,\n\t\"./llm/github.svg\": 29034,\n\t\"./llm/google-cloud.svg\": 75383,\n\t\"./llm/google.svg\": 93926,\n\t\"./llm/gpustack.svg\": 41538,\n\t\"./llm/groq-next.svg\": 43719,\n\t\"./llm/huggingface.svg\": 20566,\n\t\"./llm/hunyuan.svg\": 10266,\n\t\"./llm/jina.svg\": 19765,\n\t\"./llm/lepton-ai.svg\": 68341,\n\t\"./llm/lm-studio.svg\": 77894,\n\t\"./llm/local-ai.svg\": 97354,\n\t\"./llm/mistral.svg\": 58247,\n\t\"./llm/modelscope.svg\": 21248,\n\t\"./llm/moonshot.svg\": 98184,\n\t\"./llm/nomic-ai.svg\": 14860,\n\t\"./llm/novita-ai.svg\": 72584,\n\t\"./llm/nvidia.svg\": 33325,\n\t\"./llm/ollama.svg\": 59488,\n\t\"./llm/open-router.svg\": 23258,\n\t\"./llm/openai-api.svg\": 63715,\n\t\"./llm/openai.svg\": 81459,\n\t\"./llm/perfx-cloud.svg\": 39886,\n\t\"./llm/ppio.svg\": 89957,\n\t\"./llm/replicate.svg\": 13492,\n\t\"./llm/sentence-transformers.svg\": 85448,\n\t\"./llm/siliconflow.svg\": 65762,\n\t\"./llm/spark.svg\": 4216,\n\t\"./llm/stepfun.svg\": 53618,\n\t\"./llm/tencent-cloud.svg\": 96734,\n\t\"./llm/together-ai.svg\": 65167,\n\t\"./llm/tongyi.svg\": 74296,\n\t\"./llm/upstage.svg\": 30464,\n\t\"./llm/vllm.svg\": 91333,\n\t\"./llm/volc_engine.svg\": 25210,\n\t\"./llm/voyage.svg\": 6385,\n\t\"./llm/wenxin.svg\": 34981,\n\t\"./llm/xinference.svg\": 76577,\n\t\"./llm/yi.svg\": 20447,\n\t\"./llm/yiyan.svg\": 55103,\n\t\"./llm/youdao.svg\": 81010,\n\t\"./llm/zhipu.svg\": 19568,\n\t\"./login-avatars.svg\": 68683,\n\t\"./login-background.svg\": 89624,\n\t\"./login-star.svg\": 31130,\n\t\"./logo-with-text-white.svg\": 49313,\n\t\"./logout.svg\": 67487,\n\t\"./minio.svg\": 32382,\n\t\"./model-providers.svg\": 70410,\n\t\"./moon.svg\": 22350,\n\t\"./more-model.svg\": 88458,\n\t\"./more.svg\": 1333,\n\t\"./move.svg\": 90076,\n\t\"./mysql.svg\": 37124,\n\t\"./navigation-pointer.svg\": 1979,\n\t\"./next-login-bg.svg\": 33391,\n\t\"./note.svg\": 28687,\n\t\"./nothing.svg\": 47138,\n\t\"./paper-clip.svg\": 2306,\n\t\"./password.svg\": 33530,\n\t\"./plus-circle-fill.svg\": 3804,\n\t\"./plus.svg\": 75350,\n\t\"./profile.svg\": 1769,\n\t\"./prompt.svg\": 49261,\n\t\"./pubmed.svg\": 78566,\n\t\"./qweather.svg\": 56077,\n\t\"./redis.svg\": 43867,\n\t\"./refresh.svg\": 96198,\n\t\"./resize.svg\": 80415,\n\t\"./run.svg\": 91449,\n\t\"./select-files-end.svg\": 14387,\n\t\"./select-files-start.svg\": 16734,\n\t\"./selected-files-collapse.svg\": 40975,\n\t\"./storage.svg\": 3949,\n\t\"./switch.svg\": 1311,\n\t\"./team.svg\": 52381,\n\t\"./template.svg\": 63993,\n\t\"./translation.svg\": 40724,\n\t\"./tushare.svg\": 16521,\n\t\"./wencai.svg\": 72835,\n\t\"./wikipedia.svg\": 18684,\n\t\"./yahoo-finance.svg\": 7957\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 78131;"],"names":["AutoKeywordsItem","t","useTranslate","_jsx","Form","Item","label","tooltip","children","_jsxs","Flex","gap","align","flex","name","noStyle","initialValue","Slider","max","style","width","InputNumber","min","AutoQuestionsItem","DatasetConfigurationContainer","_ref","className","_ref$show","show","cn","DelimiterInput","value","onChange","maxLength","nextValue","replaceAll","Input","e","target","useTranslation","rules","required","_ref$value","token","theme","useToken","_useState","useState","_useState2","_slicedToArray","inputVisible","setInputVisible","_useState3","_useState4","inputValue","setInputValue","inputRef","useRef","useEffect","_inputRef$current","current","focus","handleInputConfirm","newTags","split","map","tag","trim","filter","includes","concat","_toConsumableArray","tagChild","Tooltip","title","Tag","styles","closable","onClose","removedTag","preventDefault","tagPlusStyle","background","colorBgContainer","borderStyle","Array","isArray","length","TweenOneGroup","enter","scale","opacity","type","duration","onEnd","leave","appear","ref","size","onBlur","onPressEnter","onClick","PlusOutlined","initialEntityTypes","_ref$field","field","EditTag","valuePropName","Switch","allOptions","useSelectLlmOptionsByModelType","options","useMemo","list","x","camelCase","image2TextList","LlmModelType","Image2text","_objectSpread","y","Select","popupMatchSelectWidth","_ref$initialValue","_ref$max","message","excludedParseMethods","DocumentParserType","Table","KnowledgeGraph","Resume","Picture","Qa","showGraphRagItems","parserId","some","_ref$marginBottom","marginBottom","methodOptions","upperFirst","renderWideTooltip","useCallback","overlayInnerStyle","shouldUpdate","prevValues","curValues","parser_config","graphrag","use_graphrag","_ref2","getFieldValue","_Fragment","EntityTypesItem","dangerouslySetInnerHTML","__html","One","showRaptorParseConfiguration","form","useFormInstance","handleGenerate","setFieldValue","random","raptor","use_raptor","TextArea","rows","step","Button","requireContext","routeList","require","keys","key","replace","error","console","warn","SvgIcon","height","imgClass","restProps","_objectWithoutProperties","_excluded","ListItem","find","item","Icon","component","src","alt","LlmIcon","_ref2$height","_ref2$width","_ref2$size","icon","IconMap","Avatar","shape","UserOutlined","useFetchLlmList","modelType","_queryFn","_useQuery","useQuery","queryKey","initialData","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$data","_yield$userService$ll","data","wrap","_context","prev","next","userService","llm_list","model_type","sent","abrupt","stop","apply","arguments","buildLlmOptionsWithIcon","getLLMIconName","fid","llm_name","getRealModelName","disabled","available","modelTag","llmInfo","groupOptionsByModelType","Object","entries","_ref5","_ref7","_ref8","_defineProperty","Chat","Embedding","toUpperCase","_ref3","_ref4","tags","Speech2text","Rerank","TTS","useComposeLlmOptionsByModelTypes","modelTypes","reduce","pre","cur","forEach","_item$options","push","useSelectLlmList","_queryFn3","_useQuery3","_queryFn2","_useQuery2","_useFetchMyLlmList","gcTime","_callee3","_data$data3","_yield$userService$my","_context3","my_llm","loading","isFetching","myLlmList","myLlmListLoading","_useFetchLlmFactoryLi","_callee2","_data$data2","_yield$userService$fa","_context2","factories_list","factoryList","factoryListLoading","_ref10","_factoryList$find$log","_factoryList$find","_ref11","logo","llm","currentList","every","sortLLmFactoryListBySpecifiedOrder","useSaveApiKey","_mutationFn","queryClient","useQueryClient","_useMutation","useMutation","mutationKey","mutationFn","_callee4","params","_yield$userService$se","_context4","set_api_key","code","success","invalidateQueries","_x","isPending","saveApiKey","mutateAsync","useSaveTenantInfo","_mutationFn2","_useMutation2","_callee5","_yield$userService$se2","_context5","set_tenant_info","_x2","saveTenantInfo","useAddLlm","_mutationFn3","_useMutation3","_callee6","_yield$userService$ad","_context6","add_llm","_x3","addLlm","useDeleteLlm","_mutationFn4","_useMutation4","_callee7","_yield$userService$de","_context7","delete_llm","_x4","deleteLlm","useDeleteFactory","_mutationFn5","_useMutation5","_callee8","_yield$userService$de2","_context8","deleteFactory","_x5","listFile","api","removeFile","uploadFile","renameFile","getAllParentFolder","createFolder","connectFileToKnowledge","get_document_file","methods","url","method","getFile","responseType","getDocumentFile","moveFile","fileManagerService","registerServer","request","transformFile2Base64","val","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","img","Image","result","canvas","document","createElement","ctx","getContext","maxSize","drawImage","compressedBase64","toDataURL","onerror","normFile","fileList","getUploadFileListFromBase64","avatar","uid","thumbUrl","status","getBase64FromUploadFileList","file","originFileObj","base64","fetchDocumentBlob","_fetchDocumentBlob","id","mimeType","response","blob","Blob","previewHtmlFile","_previewHtmlFile","link","FileMimeType","Html","URL","createObjectURL","href","click","revokeObjectURL","downloadFileFromBlob","window","a","download","downloadDocument","filename","Units","formatBytes","l","n","parseInt","toFixed","downloadJsonFile","fileName","JSON","stringify","Json","_x6","_x7","_llm_name$split$at","at","getLlmNameAndFIdByLlmId","llmId","llmName","fId","_llmName$split$at","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","module","exports"],"sourceRoot":""}