{"version":3,"file":"p__user-setting__setting-system__index.baa4f9da.async.js","mappings":"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","sources":["webpack://web/./src/components/svg-icon.tsx","webpack://web/./src/hooks/user-setting-hooks.tsx","webpack://web/./src/pages/user-setting/setting-system/index.less?3542","webpack://web/./src/pages/user-setting/setting-system/task-bar-chat.tsx","webpack://web/./src/pages/user-setting/setting-system/index.tsx","webpack://web/./src/services/user-service.ts","webpack://web/./src/utils/api.ts","webpack://web/./src/utils/date.ts","webpack://web/./src/utils/register-server.ts","webpack://web/./src/utils/request.ts","webpack://web/./src/assets/svg/ sync \\.svg$"],"sourcesContent":["import { IconMap } from '@/constants/llm';\nimport { cn } from '@/lib/utils';\nimport Icon, { UserOutlined } from '@ant-design/icons';\nimport { IconComponentProps } from '@ant-design/icons/lib/components/Icon';\nimport { Avatar } from 'antd';\nimport { AvatarSize } from 'antd/es/avatar/AvatarContext';\n\nconst importAll = (requireContext: __WebpackModuleApi.RequireContext) => {\n  const list = requireContext.keys().map((key) => {\n    const name = key.replace(/\\.\\/(.*)\\.\\w+$/, '$1');\n    return { name, value: requireContext(key) };\n  });\n  return list;\n};\n\nlet routeList: { name: string; value: string }[] = [];\n\ntry {\n  routeList = importAll(require.context('@/assets/svg', true, /\\.svg$/));\n} catch (error) {\n  console.warn(error);\n  routeList = [];\n}\n\ninterface IProps extends IconComponentProps {\n  name: string;\n  width: string | number;\n  height?: string | number;\n  imgClass?: string;\n}\n\nconst SvgIcon = ({ name, width, height, imgClass, ...restProps }: IProps) => {\n  const ListItem = routeList.find((item) => item.name === name);\n  return (\n    <Icon\n      component={() => (\n        <img\n          src={ListItem?.value}\n          alt=\"\"\n          width={width}\n          height={height}\n          className={cn(imgClass, 'max-w-full')}\n        />\n      )}\n      {...(restProps as any)}\n    />\n  );\n};\n\nexport const LlmIcon = ({\n  name,\n  height = 48,\n  width = 48,\n  size = 'large',\n  imgClass,\n}: {\n  name: string;\n  height?: number;\n  width?: number;\n  size?: AvatarSize;\n  imgClass?: string;\n}) => {\n  const icon = IconMap[name as keyof typeof IconMap];\n\n  return icon ? (\n    <SvgIcon\n      name={`llm/${icon}`}\n      width={width}\n      height={height}\n      imgClass={imgClass}\n    ></SvgIcon>\n  ) : (\n    <Avatar shape=\"square\" size={size} icon={<UserOutlined />} />\n  );\n};\n\nexport default SvgIcon;\n","import { LanguageTranslationMap } from '@/constants/common';\nimport { ResponseGetType } from '@/interfaces/database/base';\nimport { IToken } from '@/interfaces/database/chat';\nimport { ITenantInfo } from '@/interfaces/database/knowledge';\nimport { ILangfuseConfig } from '@/interfaces/database/system';\nimport {\n  ISystemStatus,\n  ITenant,\n  ITenantUser,\n  IUserInfo,\n} from '@/interfaces/database/user-setting';\nimport { ISetLangfuseConfigRequestBody } from '@/interfaces/request/system';\nimport userService, {\n  addTenantUser,\n  agreeTenant,\n  deleteTenantUser,\n  listTenant,\n  listTenantUser,\n} from '@/services/user-service';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Modal, message } from 'antd';\nimport DOMPurify from 'dompurify';\nimport { isEmpty } from 'lodash';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { history } from 'umi';\n\nexport const useFetchUserInfo = (): ResponseGetType<IUserInfo> => {\n  const { i18n } = useTranslation();\n\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['userInfo'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.user_info();\n      if (data.code === 0) {\n        i18n.changeLanguage(\n          LanguageTranslationMap[\n            data.data.language as keyof typeof LanguageTranslationMap\n          ],\n        );\n      }\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useFetchTenantInfo = (\n  showEmptyModelWarn = false,\n): ResponseGetType<ITenantInfo> => {\n  const { t } = useTranslation();\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['tenantInfo'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data: res } = await userService.get_tenant_info();\n      if (res.code === 0) {\n        // llm_id is chat_id\n        // asr_id is speech2txt\n        const { data } = res;\n        if (\n          showEmptyModelWarn &&\n          (isEmpty(data.embd_id) || isEmpty(data.llm_id))\n        ) {\n          Modal.warning({\n            title: t('common.warn'),\n            content: (\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: DOMPurify.sanitize(t('setting.modelProvidersWarn')),\n                }}\n              ></div>\n            ),\n            onOk() {\n              history.push('/user-setting/model');\n            },\n          });\n        }\n        data.chat_id = data.llm_id;\n        data.speech2text_id = data.asr_id;\n\n        return data;\n      }\n\n      return res;\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useSelectParserList = (): Array<{\n  value: string;\n  label: string;\n}> => {\n  const { data: tenantInfo } = useFetchTenantInfo(true);\n\n  const parserList = useMemo(() => {\n    const parserArray: Array<string> = tenantInfo?.parser_ids?.split(',') ?? [];\n    return parserArray.map((x) => {\n      const arr = x.split(':');\n      return { value: arr[0], label: arr[1] };\n    });\n  }, [tenantInfo]);\n\n  return parserList;\n};\n\nexport const useSaveSetting = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveSetting'],\n    mutationFn: async (\n      userInfo: { new_password: string } | Partial<IUserInfo>,\n    ) => {\n      const { data } = await userService.setting(userInfo);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n        queryClient.invalidateQueries({ queryKey: ['userInfo'] });\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, saveSetting: mutateAsync };\n};\n\nexport const useFetchSystemVersion = () => {\n  const [version, setVersion] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const fetchSystemVersion = useCallback(async () => {\n    try {\n      setLoading(true);\n      const { data } = await userService.getSystemVersion();\n      if (data.code === 0) {\n        setVersion(data.data);\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n    }\n  }, []);\n\n  return { fetchSystemVersion, version, loading };\n};\n\nexport const useFetchSystemStatus = () => {\n  const [systemStatus, setSystemStatus] = useState<ISystemStatus>(\n    {} as ISystemStatus,\n  );\n  const [loading, setLoading] = useState(false);\n\n  const fetchSystemStatus = useCallback(async () => {\n    setLoading(true);\n    const { data } = await userService.getSystemStatus();\n    if (data.code === 0) {\n      setSystemStatus(data.data);\n      setLoading(false);\n    }\n  }, []);\n\n  return {\n    systemStatus,\n    fetchSystemStatus,\n    loading,\n  };\n};\n\nexport const useFetchManualSystemTokenList = () => {\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['fetchManualSystemTokenList'],\n    mutationFn: async () => {\n      const { data } = await userService.listToken();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, fetchSystemTokenList: mutateAsync };\n};\n\nexport const useFetchSystemTokenList = () => {\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<IToken[]>({\n    queryKey: ['fetchSystemTokenList'],\n    initialData: [],\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.listToken();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useRemoveSystemToken = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['removeSystemToken'],\n    mutationFn: async (token: string) => {\n      const { data } = await userService.removeToken({}, token);\n      if (data.code === 0) {\n        message.success(t('message.deleted'));\n        queryClient.invalidateQueries({ queryKey: ['fetchSystemTokenList'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, removeToken: mutateAsync };\n};\n\nexport const useCreateSystemToken = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['createSystemToken'],\n    mutationFn: async (params: Record<string, any>) => {\n      const { data } = await userService.createToken(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['fetchSystemTokenList'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, createToken: mutateAsync };\n};\n\nexport const useListTenantUser = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const tenantId = tenantInfo.tenant_id;\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<ITenantUser[]>({\n    queryKey: ['listTenantUser', tenantId],\n    initialData: [],\n    gcTime: 0,\n    enabled: !!tenantId,\n    queryFn: async () => {\n      const { data } = await listTenantUser(tenantId);\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useAddTenantUser = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['addTenantUser'],\n    mutationFn: async (email: string) => {\n      const { data } = await addTenantUser(tenantInfo.tenant_id, email);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['listTenantUser'] });\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, addTenantUser: mutateAsync };\n};\n\nexport const useDeleteTenantUser = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteTenantUser'],\n    mutationFn: async ({\n      userId,\n      tenantId,\n    }: {\n      userId: string;\n      tenantId?: string;\n    }) => {\n      const { data } = await deleteTenantUser({\n        tenantId: tenantId ?? tenantInfo.tenant_id,\n        userId,\n      });\n      if (data.code === 0) {\n        message.success(t('message.deleted'));\n        queryClient.invalidateQueries({ queryKey: ['listTenantUser'] });\n        queryClient.invalidateQueries({ queryKey: ['listTenant'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteTenantUser: mutateAsync };\n};\n\nexport const useListTenant = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const tenantId = tenantInfo.tenant_id;\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<ITenant[]>({\n    queryKey: ['listTenant', tenantId],\n    initialData: [],\n    gcTime: 0,\n    enabled: !!tenantId,\n    queryFn: async () => {\n      const { data } = await listTenant();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useAgreeTenant = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['agreeTenant'],\n    mutationFn: async (tenantId: string) => {\n      const { data } = await agreeTenant(tenantId);\n      if (data.code === 0) {\n        message.success(t('message.operated'));\n        queryClient.invalidateQueries({ queryKey: ['listTenant'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, agreeTenant: mutateAsync };\n};\n\nexport const useSetLangfuseConfig = () => {\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['setLangfuseConfig'],\n    mutationFn: async (params: ISetLangfuseConfigRequestBody) => {\n      const { data } = await userService.setLangfuseConfig(params);\n      if (data.code === 0) {\n        message.success(t('message.operated'));\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, setLangfuseConfig: mutateAsync };\n};\n\nexport const useDeleteLangfuseConfig = () => {\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteLangfuseConfig'],\n    mutationFn: async () => {\n      const { data } = await userService.deleteLangfuseConfig();\n      if (data.code === 0) {\n        message.success(t('message.deleted'));\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, deleteLangfuseConfig: mutateAsync };\n};\n\nexport const useFetchLangfuseConfig = () => {\n  const { data, isFetching: loading } = useQuery<ILangfuseConfig>({\n    queryKey: ['fetchLangfuseConfig'],\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.getLangfuseConfig();\n\n      return data?.data;\n    },\n  });\n\n  return { data, loading };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"systemInfo\":\"systemInfo___ufsjg\",\"title\":\"title___g9daS\",\"text\":\"text___dsVaC\",\"badge\":\"badge___lUCbZ\",\"error\":\"error___DIP2V\",\"taskBarTooltip\":\"taskBarTooltip___q4jfc\",\"taskBar\":\"taskBar___cTWDX\",\"taskBarTitle\":\"taskBarTitle___iiila\"};","import { TaskExecutorHeartbeatItem } from '@/interfaces/database/user-setting';\nimport { Divider, Flex } from 'antd';\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  Rectangle,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n} from 'recharts';\n\nimport { formatDate, formatTime } from '@/utils/date';\nimport dayjs from 'dayjs';\nimport { get } from 'lodash';\nimport JsonView from 'react18-json-view';\nimport 'react18-json-view/src/style.css';\n\nimport styles from './index.less';\n\ninterface IProps {\n  data: Record<string, TaskExecutorHeartbeatItem[]>;\n}\n\nconst CustomTooltip = ({ active, payload, ...restProps }: any) => {\n  if (active && payload && payload.length) {\n    const taskExecutorHeartbeatItem: TaskExecutorHeartbeatItem = get(\n      payload,\n      '0.payload',\n      {},\n    );\n    return (\n      <div className=\"custom-tooltip\">\n        <div className=\"bg-slate-50 p-2 rounded-md border border-indigo-100\">\n          <div className=\"font-semibold text-lg\">\n            {formatDate(restProps.label)}\n          </div>\n\n          <JsonView\n            src={taskExecutorHeartbeatItem}\n            displaySize={30}\n            className=\"w-full max-h-[300px] break-words overflow-auto\"\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst TaskBarChat = ({ data }: IProps) => {\n  return Object.entries(data).map(([key, val]) => {\n    const data = val.map((x) => ({\n      ...x,\n      now: dayjs(x.now).valueOf(),\n    }));\n    const firstItem = data[0];\n    const lastItem = data[data.length - 1];\n\n    const domain = [firstItem?.now, lastItem?.now];\n    return (\n      <Flex key={key} className={styles.taskBar} vertical>\n        <div className=\"flex gap-8\">\n          <b className={styles.taskBarTitle}>ID: {key}</b>\n          <b className={styles.taskBarTitle}>Lag: {lastItem?.lag}</b>\n          <b className={styles.taskBarTitle}>Pending: {lastItem?.pending}</b>\n        </div>\n        <ResponsiveContainer>\n          <BarChart data={data}>\n            <XAxis\n              dataKey=\"now\"\n              type=\"number\"\n              scale={'time'}\n              domain={domain}\n              tickFormatter={(x) => formatTime(x)}\n              allowDataOverflow\n              angle={60}\n              padding={{ left: 20, right: 20 }}\n              tickMargin={20}\n            />\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <Tooltip\n              wrapperStyle={{ pointerEvents: 'auto' }}\n              content={<CustomTooltip></CustomTooltip>}\n              trigger=\"click\"\n            />\n            <Legend wrapperStyle={{ bottom: -22 }} />\n            <Bar\n              dataKey=\"done\"\n              fill=\"#2fe235\"\n              activeBar={<Rectangle fill=\"pink\" stroke=\"blue\" />}\n            />\n            <Bar\n              dataKey=\"failed\"\n              fill=\"#ef3b74\"\n              activeBar={<Rectangle fill=\"gold\" stroke=\"purple\" />}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n        <Divider></Divider>\n      </Flex>\n    );\n  });\n};\n\nexport default TaskBarChat;\n","import SvgIcon from '@/components/svg-icon';\nimport { useFetchSystemStatus } from '@/hooks/user-setting-hooks';\nimport {\n  ISystemStatus,\n  TaskExecutorHeartbeatItem,\n} from '@/interfaces/database/user-setting';\nimport { Badge, Card, Flex, Spin, Typography } from 'antd';\nimport classNames from 'classnames';\nimport lowerCase from 'lodash/lowerCase';\nimport upperFirst from 'lodash/upperFirst';\nimport { useEffect } from 'react';\n\nimport { toFixed } from '@/utils/common-util';\nimport { isObject } from 'lodash';\nimport styles from './index.less';\nimport TaskBarChat from './task-bar-chat';\n\nconst { Text } = Typography;\n\nenum Status {\n  'green' = 'success',\n  'red' = 'error',\n  'yellow' = 'warning',\n}\n\nconst TitleMap = {\n  doc_engine: 'Doc Engine',\n  storage: 'Object Storage',\n  redis: 'Redis',\n  database: 'Database',\n  task_executor_heartbeats: 'Task Executor',\n};\n\nconst IconMap = {\n  es: 'es',\n  doc_engine: 'storage',\n  redis: 'redis',\n  storage: 'minio',\n  database: 'database',\n};\n\nconst SystemInfo = () => {\n  const {\n    systemStatus,\n    fetchSystemStatus,\n    loading: statusLoading,\n  } = useFetchSystemStatus();\n\n  useEffect(() => {\n    fetchSystemStatus();\n  }, [fetchSystemStatus]);\n\n  return (\n    <section className={styles.systemInfo}>\n      <Spin spinning={statusLoading}>\n        <Flex gap={16} vertical>\n          {Object.keys(systemStatus).map((key) => {\n            const info = systemStatus[key as keyof ISystemStatus];\n\n            return (\n              <Card\n                type=\"inner\"\n                title={\n                  <Flex align=\"center\" gap={10}>\n                    {key === 'task_executor_heartbeats' ? (\n                      <img src=\"/logo.svg\" alt=\"\" width={26} />\n                    ) : (\n                      <SvgIcon\n                        name={IconMap[key as keyof typeof IconMap]}\n                        width={26}\n                      ></SvgIcon>\n                    )}\n                    <span className={styles.title}>\n                      {TitleMap[key as keyof typeof TitleMap]}\n                    </span>\n                    <Badge\n                      className={styles.badge}\n                      status={Status[info.status as keyof typeof Status]}\n                    />\n                  </Flex>\n                }\n                key={key}\n              >\n                {key === 'task_executor_heartbeats' ? (\n                  isObject(info) ? (\n                    <TaskBarChat\n                      data={info as Record<string, TaskExecutorHeartbeatItem[]>}\n                    ></TaskBarChat>\n                  ) : (\n                    <Text className={styles.error}>\n                      {typeof info.error === 'string' ? info.error : ''}\n                    </Text>\n                  )\n                ) : (\n                  Object.keys(info)\n                    .filter((x) => x !== 'status')\n                    .map((x) => {\n                      return (\n                        <Flex\n                          key={x}\n                          align=\"center\"\n                          gap={16}\n                          className={styles.text}\n                        >\n                          <b>{upperFirst(lowerCase(x))}:</b>\n                          <Text\n                            className={classNames({\n                              [styles.error]: x === 'error',\n                            })}\n                          >\n                            {toFixed((info as Record<string, any>)[x]) as any}\n                            {x === 'elapsed' && ' ms'}\n                          </Text>\n                        </Flex>\n                      );\n                    })\n                )}\n              </Card>\n            );\n          })}\n        </Flex>\n      </Spin>\n    </section>\n  );\n};\n\nexport default SystemInfo;\n","import api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request, { post } from '@/utils/request';\n\nconst {\n  login,\n  logout,\n  register,\n  setting,\n  user_info,\n  tenant_info,\n  factories_list,\n  llm_list,\n  my_llm,\n  set_api_key,\n  set_tenant_info,\n  add_llm,\n  delete_llm,\n  deleteFactory,\n  getSystemStatus,\n  getSystemVersion,\n  getSystemTokenList,\n  removeSystemToken,\n  createSystemToken,\n  getSystemConfig,\n  setLangfuseConfig,\n} = api;\n\nconst methods = {\n  login: {\n    url: login,\n    method: 'post',\n  },\n  logout: {\n    url: logout,\n    method: 'get',\n  },\n  register: {\n    url: register,\n    method: 'post',\n  },\n  setting: {\n    url: setting,\n    method: 'post',\n  },\n  user_info: {\n    url: user_info,\n    method: 'get',\n  },\n  get_tenant_info: {\n    url: tenant_info,\n    method: 'get',\n  },\n  set_tenant_info: {\n    url: set_tenant_info,\n    method: 'post',\n  },\n  factories_list: {\n    url: factories_list,\n    method: 'get',\n  },\n  llm_list: {\n    url: llm_list,\n    method: 'get',\n  },\n  my_llm: {\n    url: my_llm,\n    method: 'get',\n  },\n  set_api_key: {\n    url: set_api_key,\n    method: 'post',\n  },\n  add_llm: {\n    url: add_llm,\n    method: 'post',\n  },\n  delete_llm: {\n    url: delete_llm,\n    method: 'post',\n  },\n  getSystemStatus: {\n    url: getSystemStatus,\n    method: 'get',\n  },\n  getSystemVersion: {\n    url: getSystemVersion,\n    method: 'get',\n  },\n  deleteFactory: {\n    url: deleteFactory,\n    method: 'post',\n  },\n  listToken: {\n    url: getSystemTokenList,\n    method: 'get',\n  },\n  createToken: {\n    url: createSystemToken,\n    method: 'post',\n  },\n  removeToken: {\n    url: removeSystemToken,\n    method: 'delete',\n  },\n  getSystemConfig: {\n    url: getSystemConfig,\n    method: 'get',\n  },\n  setLangfuseConfig: {\n    url: setLangfuseConfig,\n    method: 'put',\n  },\n  getLangfuseConfig: {\n    url: setLangfuseConfig,\n    method: 'get',\n  },\n  deleteLangfuseConfig: {\n    url: setLangfuseConfig,\n    method: 'delete',\n  },\n} as const;\n\nconst userService = registerServer<keyof typeof methods>(methods, request);\n\nexport const listTenantUser = (tenantId: string) =>\n  request.get(api.listTenantUser(tenantId));\n\nexport const addTenantUser = (tenantId: string, email: string) =>\n  post(api.addTenantUser(tenantId), { email });\n\nexport const deleteTenantUser = ({\n  tenantId,\n  userId,\n}: {\n  tenantId: string;\n  userId: string;\n}) => request.delete(api.deleteTenantUser(tenantId, userId));\n\nexport const listTenant = () => request.get(api.listTenant);\n\nexport const agreeTenant = (tenantId: string) =>\n  request.put(api.agreeTenant(tenantId));\n\nexport default userService;\n","let api_host = `/v1`;\n\nexport { api_host };\n\nexport default {\n  // user\n  login: `${api_host}/user/login`,\n  logout: `${api_host}/user/logout`,\n  register: `${api_host}/user/register`,\n  setting: `${api_host}/user/setting`,\n  user_info: `${api_host}/user/info`,\n  tenant_info: `${api_host}/user/tenant_info`,\n  set_tenant_info: `${api_host}/user/set_tenant_info`,\n\n  // team\n  addTenantUser: (tenantId: string) => `${api_host}/tenant/${tenantId}/user`,\n  listTenantUser: (tenantId: string) =>\n    `${api_host}/tenant/${tenantId}/user/list`,\n  deleteTenantUser: (tenantId: string, userId: string) =>\n    `${api_host}/tenant/${tenantId}/user/${userId}`,\n  listTenant: `${api_host}/tenant/list`,\n  agreeTenant: (tenantId: string) => `${api_host}/tenant/agree/${tenantId}`,\n\n  // llm model\n  factories_list: `${api_host}/llm/factories`,\n  llm_list: `${api_host}/llm/list`,\n  my_llm: `${api_host}/llm/my_llms`,\n  set_api_key: `${api_host}/llm/set_api_key`,\n  add_llm: `${api_host}/llm/add_llm`,\n  delete_llm: `${api_host}/llm/delete_llm`,\n  deleteFactory: `${api_host}/llm/delete_factory`,\n\n  // knowledge base\n  kb_list: `${api_host}/kb/list`,\n  create_kb: `${api_host}/kb/create`,\n  update_kb: `${api_host}/kb/update`,\n  rm_kb: `${api_host}/kb/rm`,\n  get_kb_detail: `${api_host}/kb/detail`,\n  getKnowledgeGraph: (knowledgeId: string) =>\n    `${api_host}/kb/${knowledgeId}/knowledge_graph`,\n\n  // tags\n  listTag: (knowledgeId: string) => `${api_host}/kb/${knowledgeId}/tags`,\n  listTagByKnowledgeIds: `${api_host}/kb/tags`,\n  removeTag: (knowledgeId: string) => `${api_host}/kb/${knowledgeId}/rm_tags`,\n  renameTag: (knowledgeId: string) =>\n    `${api_host}/kb/${knowledgeId}/rename_tag`,\n\n  // chunk\n  chunk_list: `${api_host}/chunk/list`,\n  create_chunk: `${api_host}/chunk/create`,\n  set_chunk: `${api_host}/chunk/set`,\n  get_chunk: `${api_host}/chunk/get`,\n  switch_chunk: `${api_host}/chunk/switch`,\n  rm_chunk: `${api_host}/chunk/rm`,\n  retrieval_test: `${api_host}/chunk/retrieval_test`,\n  knowledge_graph: `${api_host}/chunk/knowledge_graph`,\n\n  // document\n  get_document_list: `${api_host}/document/list`,\n  document_change_status: `${api_host}/document/change_status`,\n  document_rm: `${api_host}/document/rm`,\n  document_delete: `${api_host}/api/document`,\n  document_rename: `${api_host}/document/rename`,\n  document_create: `${api_host}/document/create`,\n  document_run: `${api_host}/document/run`,\n  document_change_parser: `${api_host}/document/change_parser`,\n  document_thumbnails: `${api_host}/document/thumbnails`,\n  get_document_file: `${api_host}/document/get`,\n  document_upload: `${api_host}/document/upload`,\n  web_crawl: `${api_host}/document/web_crawl`,\n  document_infos: `${api_host}/document/infos`,\n  upload_and_parse: `${api_host}/document/upload_and_parse`,\n  parse: `${api_host}/document/parse`,\n  setMeta: `${api_host}/document/set_meta`,\n\n  // chat\n  setDialog: `${api_host}/dialog/set`,\n  getDialog: `${api_host}/dialog/get`,\n  removeDialog: `${api_host}/dialog/rm`,\n  listDialog: `${api_host}/dialog/list`,\n  setConversation: `${api_host}/conversation/set`,\n  getConversation: `${api_host}/conversation/get`,\n  getConversationSSE: `${api_host}/conversation/getsse`,\n  listConversation: `${api_host}/conversation/list`,\n  removeConversation: `${api_host}/conversation/rm`,\n  completeConversation: `${api_host}/conversation/completion`,\n  // completeConversation: \"http://localhost:5000/chat\",\n  deleteMessage: `${api_host}/conversation/delete_msg`,\n  thumbup: `${api_host}/conversation/thumbup`,\n  tts: `${api_host}/conversation/tts`,\n  ask: `${api_host}/conversation/ask`,\n  mindmap: `${api_host}/conversation/mindmap`,\n  getRelatedQuestions: `${api_host}/conversation/related_questions`,\n  // chat for external\n  createToken: `${api_host}/api/new_token`,\n  listToken: `${api_host}/api/token_list`,\n  removeToken: `${api_host}/api/rm`,\n  getStats: `${api_host}/api/stats`,\n  createExternalConversation: `${api_host}/api/new_conversation`,\n  getExternalConversation: `${api_host}/api/conversation`,\n  completeExternalConversation: `${api_host}/api/completion`,\n  uploadAndParseExternal: `${api_host}/api/document/upload_and_parse`,\n\n  // file manager\n  listFile: `${api_host}/file/list`,\n  uploadFile: `${api_host}/file/upload`,\n  removeFile: `${api_host}/file/rm`,\n  renameFile: `${api_host}/file/rename`,\n  getAllParentFolder: `${api_host}/file/all_parent_folder`,\n  createFolder: `${api_host}/file/create`,\n  connectFileToKnowledge: `${api_host}/file2document/convert`,\n  getFile: `${api_host}/file/get`,\n  moveFile: `${api_host}/file/mv`,\n\n  // system\n  getSystemVersion: `${api_host}/system/version`,\n  getSystemStatus: `${api_host}/system/status`,\n  getSystemTokenList: `${api_host}/system/token_list`,\n  createSystemToken: `${api_host}/system/new_token`,\n  listSystemToken: `${api_host}/system/token_list`,\n  removeSystemToken: `${api_host}/system/token`,\n  getSystemConfig: `${api_host}/system/config`,\n  setLangfuseConfig: `${api_host}/langfuse/api_key`,\n\n  // flow\n  listTemplates: `${api_host}/canvas/templates`,\n  listCanvas: `${api_host}/canvas/list`,\n  listCanvasTeam: `${api_host}/canvas/listteam`,\n  getCanvas: `${api_host}/canvas/get`,\n  getCanvasSSE: `${api_host}/canvas/getsse`,\n  removeCanvas: `${api_host}/canvas/rm`,\n  setCanvas: `${api_host}/canvas/set`,\n  settingCanvas: `${api_host}/canvas/setting`,\n  getListVersion: `${api_host}/canvas/getlistversion`,\n  getVersion: `${api_host}/canvas/getversion`,\n  resetCanvas: `${api_host}/canvas/reset`,\n  runCanvas: `${api_host}/canvas/completion`,\n  testDbConnect: `${api_host}/canvas/test_db_connect`,\n  getInputElements: `${api_host}/canvas/input_elements`,\n  debug: `${api_host}/canvas/debug`,\n};\n","import dayjs from 'dayjs';\n\nexport function formatDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY HH:mm:ss');\n}\n\nexport function formatTime(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('HH:mm:ss');\n}\n\nexport function today() {\n  return formatDate(dayjs());\n}\n\nexport function lastDay() {\n  return formatDate(dayjs().subtract(1, 'days'));\n}\n\nexport function lastWeek() {\n  return formatDate(dayjs().subtract(1, 'weeks'));\n}\n\nexport function formatPureDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY');\n}\n","import omit from 'lodash/omit';\nimport { RequestMethod } from 'umi-request';\n\ntype Service<T extends string> = Record<\n  T,\n  (params?: any, urlAppendix?: string) => any\n>;\n\nconst Methods = ['post', 'delete', 'put'];\n\nconst registerServer = <T extends string>(\n  opt: Record<T, { url: string; method: string }>,\n  request: RequestMethod,\n) => {\n  const server: Service<T> = {} as Service<T>;\n  for (let key in opt) {\n    server[key] = (params?: any, urlAppendix?: string) => {\n      let url = opt[key].url;\n      const requestOptions = opt[key];\n      if (urlAppendix) {\n        url = url + '/' + urlAppendix;\n      }\n      if (Methods.some((x) => x === opt[key].method.toLowerCase())) {\n        return request(url, {\n          method: opt[key].method,\n          data: params,\n        });\n      }\n\n      if (opt[key].method === 'get' || opt[key].method === 'GET') {\n        return request.get(url, {\n          ...omit(requestOptions, ['method', 'url']),\n          params,\n        });\n      }\n    };\n  }\n  return server;\n};\n\nexport default registerServer;\n","import { Authorization } from '@/constants/authorization';\nimport { ResponseType } from '@/interfaces/database/base';\nimport i18n from '@/locales/config';\nimport authorizationUtil, {\n  getAuthorization,\n  redirectToLogin,\n} from '@/utils/authorization-util';\nimport { message, notification } from 'antd';\nimport { RequestMethod, extend } from 'umi-request';\nimport { convertTheKeysOfTheObjectToSnake } from './common-util';\n\nconst FAILED_TO_FETCH = 'Failed to fetch';\n\nconst RetcodeMessage = {\n  200: i18n.t('message.200'),\n  201: i18n.t('message.201'),\n  202: i18n.t('message.202'),\n  204: i18n.t('message.204'),\n  400: i18n.t('message.400'),\n  401: i18n.t('message.401'),\n  403: i18n.t('message.403'),\n  404: i18n.t('message.404'),\n  406: i18n.t('message.406'),\n  410: i18n.t('message.410'),\n  413: i18n.t('message.413'),\n  422: i18n.t('message.422'),\n  500: i18n.t('message.500'),\n  502: i18n.t('message.502'),\n  503: i18n.t('message.503'),\n  504: i18n.t('message.504'),\n};\ntype ResultCode =\n  | 200\n  | 201\n  | 202\n  | 204\n  | 400\n  | 401\n  | 403\n  | 404\n  | 406\n  | 410\n  | 413\n  | 422\n  | 500\n  | 502\n  | 503\n  | 504;\n\nconst errorHandler = (error: {\n  response: Response;\n  message: string;\n}): Response => {\n  const { response } = error;\n  if (error.message === FAILED_TO_FETCH) {\n    notification.error({\n      description: i18n.t('message.networkAnomalyDescription'),\n      message: i18n.t('message.networkAnomaly'),\n    });\n  } else {\n    if (response && response.status) {\n      const errorText =\n        RetcodeMessage[response.status as ResultCode] || response.statusText;\n      const { status, url } = response;\n      notification.error({\n        message: `${i18n.t('message.requestError')} ${status}: ${url}`,\n        description: errorText,\n      });\n    }\n  }\n  return response ?? { data: { code: 1999 } };\n};\n\nconst request: RequestMethod = extend({\n  errorHandler,\n  timeout: 300000,\n  getResponse: true,\n});\n\nrequest.interceptors.request.use((url: string, options: any) => {\n  const data = convertTheKeysOfTheObjectToSnake(options.data);\n  const params = convertTheKeysOfTheObjectToSnake(options.params);\n\n  return {\n    url,\n    options: {\n      ...options,\n      data,\n      params,\n      headers: {\n        ...(options.skipToken\n          ? undefined\n          : { [Authorization]: getAuthorization() }),\n        ...options.headers,\n      },\n      interceptors: true,\n    },\n  };\n});\n\nrequest.interceptors.response.use(async (response: Response, options) => {\n  if (response?.status === 413 || response?.status === 504) {\n    message.error(RetcodeMessage[response?.status as ResultCode]);\n  }\n\n  if (options.responseType === 'blob') {\n    return response;\n  }\n\n  const data: ResponseType = await response?.clone()?.json();\n  if (data?.code === 100) {\n    message.error(data?.message);\n  } else if (data?.code === 401) {\n    notification.error({\n      message: data?.message,\n      description: data?.message,\n      duration: 3,\n    });\n    authorizationUtil.removeAll();\n    redirectToLogin();\n  } else if (data?.code !== 0) {\n    notification.error({\n      message: `${i18n.t('message.hint')} : ${data?.code}`,\n      description: data?.message,\n      duration: 3,\n    });\n  }\n  return response;\n});\n\nexport default request;\n\nexport const get = (url: string) => {\n  return request.get(url);\n};\n\nexport const post = (url: string, body: any) => {\n  return request.post(url, { data: body });\n};\n\nexport const drop = () => {};\n\nexport const put = () => {};\n","var map = {\n\t\"./akshare.svg\": 26032,\n\t\"./api.svg\": 30747,\n\t\"./arxiv.svg\": 90854,\n\t\"./assistant.svg\": 4159,\n\t\"./baidu-fanyi.svg\": 83544,\n\t\"./baidu.svg\": 92892,\n\t\"./begin.svg\": 69779,\n\t\"./bing.svg\": 55914,\n\t\"./cancel.svg\": 8156,\n\t\"./chat-app-cube.svg\": 34339,\n\t\"./chat-configuration-atom.svg\": 57950,\n\t\"./chat-star.svg\": 49570,\n\t\"./chunk-method/book-01.svg\": 38726,\n\t\"./chunk-method/book-02.svg\": 21357,\n\t\"./chunk-method/book-03.svg\": 88093,\n\t\"./chunk-method/book-04.svg\": 58355,\n\t\"./chunk-method/chunk-empty.svg\": 16035,\n\t\"./chunk-method/knowledge-graph-01.svg\": 42576,\n\t\"./chunk-method/knowledge-graph-02.svg\": 46853,\n\t\"./chunk-method/law-01.svg\": 54530,\n\t\"./chunk-method/law-02.svg\": 75787,\n\t\"./chunk-method/manual-01.svg\": 64179,\n\t\"./chunk-method/manual-02.svg\": 40547,\n\t\"./chunk-method/manual-03.svg\": 1437,\n\t\"./chunk-method/manual-04.svg\": 81486,\n\t\"./chunk-method/media-01.svg\": 33952,\n\t\"./chunk-method/media-02.svg\": 93802,\n\t\"./chunk-method/naive-01.svg\": 88488,\n\t\"./chunk-method/naive-02.svg\": 74795,\n\t\"./chunk-method/one-01.svg\": 88533,\n\t\"./chunk-method/one-02.svg\": 99199,\n\t\"./chunk-method/one-03.svg\": 23192,\n\t\"./chunk-method/one-04.svg\": 72906,\n\t\"./chunk-method/paper-01.svg\": 64018,\n\t\"./chunk-method/paper-02.svg\": 77250,\n\t\"./chunk-method/presentation-01.svg\": 87162,\n\t\"./chunk-method/presentation-02.svg\": 59640,\n\t\"./chunk-method/qa-01.svg\": 39420,\n\t\"./chunk-method/qa-02.svg\": 55086,\n\t\"./chunk-method/resume-01.svg\": 76604,\n\t\"./chunk-method/resume-02.svg\": 96131,\n\t\"./chunk-method/table-01.svg\": 42743,\n\t\"./chunk-method/table-02.svg\": 84817,\n\t\"./chunk-method/tag-01.svg\": 96953,\n\t\"./chunk-method/tag-02.svg\": 82472,\n\t\"./concentrator.svg\": 86933,\n\t\"./crawler.svg\": 71090,\n\t\"./database.svg\": 38575,\n\t\"./deepl.svg\": 98301,\n\t\"./delete.svg\": 71483,\n\t\"./disable.svg\": 84377,\n\t\"./doctor.svg\": 91433,\n\t\"./duck.svg\": 24287,\n\t\"./email.svg\": 10808,\n\t\"./enable.svg\": 8207,\n\t\"./es.svg\": 96492,\n\t\"./exesql.svg\": 43004,\n\t\"./file-icon/aep.svg\": 83889,\n\t\"./file-icon/ai.svg\": 28897,\n\t\"./file-icon/avi.svg\": 27635,\n\t\"./file-icon/css.svg\": 52229,\n\t\"./file-icon/csv.svg\": 50747,\n\t\"./file-icon/dmg.svg\": 71691,\n\t\"./file-icon/doc.svg\": 35354,\n\t\"./file-icon/docx.svg\": 69139,\n\t\"./file-icon/eps.svg\": 43279,\n\t\"./file-icon/exe.svg\": 46462,\n\t\"./file-icon/fig.svg\": 33179,\n\t\"./file-icon/folder.svg\": 54168,\n\t\"./file-icon/gif.svg\": 73845,\n\t\"./file-icon/html.svg\": 53682,\n\t\"./file-icon/indd.svg\": 26763,\n\t\"./file-icon/java.svg\": 13916,\n\t\"./file-icon/jpeg.svg\": 19525,\n\t\"./file-icon/jpg.svg\": 24674,\n\t\"./file-icon/js.svg\": 38470,\n\t\"./file-icon/json.svg\": 56373,\n\t\"./file-icon/md.svg\": 77357,\n\t\"./file-icon/mkv.svg\": 49197,\n\t\"./file-icon/mp3.svg\": 44538,\n\t\"./file-icon/mp4.svg\": 52038,\n\t\"./file-icon/mpeg.svg\": 77747,\n\t\"./file-icon/pdf.svg\": 82938,\n\t\"./file-icon/png.svg\": 71915,\n\t\"./file-icon/ppt.svg\": 85173,\n\t\"./file-icon/pptx.svg\": 62133,\n\t\"./file-icon/psd.svg\": 30182,\n\t\"./file-icon/rss.svg\": 38428,\n\t\"./file-icon/sql.svg\": 78501,\n\t\"./file-icon/svg.svg\": 72515,\n\t\"./file-icon/tiff.svg\": 4502,\n\t\"./file-icon/txt.svg\": 55773,\n\t\"./file-icon/wav.svg\": 63645,\n\t\"./file-icon/webp.svg\": 87260,\n\t\"./file-icon/xls.svg\": 5343,\n\t\"./file-icon/xlsx.svg\": 41475,\n\t\"./file-icon/xml.svg\": 38476,\n\t\"./file-management.svg\": 39121,\n\t\"./github.svg\": 69696,\n\t\"./google-scholar.svg\": 99466,\n\t\"./google.svg\": 18176,\n\t\"./graph.svg\": 57355,\n\t\"./invoke-ai.svg\": 82888,\n\t\"./jin10.svg\": 31801,\n\t\"./keyword.svg\": 30552,\n\t\"./knowledge-base.svg\": 87055,\n\t\"./knowledge-configration.svg\": 96450,\n\t\"./knowledge-dataset.svg\": 9385,\n\t\"./knowledge-testing.svg\": 65376,\n\t\"./langfuse.svg\": 6514,\n\t\"./llm/anthropic.svg\": 74768,\n\t\"./llm/azure.svg\": 99817,\n\t\"./llm/baai.svg\": 93594,\n\t\"./llm/baichuan.svg\": 6507,\n\t\"./llm/bedrock.svg\": 30818,\n\t\"./llm/chat-minimax.svg\": 69534,\n\t\"./llm/cohere.svg\": 86198,\n\t\"./llm/deepseek.svg\": 23476,\n\t\"./llm/fish-audio.svg\": 97300,\n\t\"./llm/gemini.svg\": 69156,\n\t\"./llm/github.svg\": 29034,\n\t\"./llm/google-cloud.svg\": 75383,\n\t\"./llm/google.svg\": 93926,\n\t\"./llm/gpustack.svg\": 41538,\n\t\"./llm/groq-next.svg\": 43719,\n\t\"./llm/huggingface.svg\": 20566,\n\t\"./llm/hunyuan.svg\": 10266,\n\t\"./llm/jina.svg\": 19765,\n\t\"./llm/lepton-ai.svg\": 68341,\n\t\"./llm/lm-studio.svg\": 77894,\n\t\"./llm/local-ai.svg\": 97354,\n\t\"./llm/mistral.svg\": 58247,\n\t\"./llm/modelscope.svg\": 21248,\n\t\"./llm/moonshot.svg\": 98184,\n\t\"./llm/nomic-ai.svg\": 14860,\n\t\"./llm/novita-ai.svg\": 72584,\n\t\"./llm/nvidia.svg\": 33325,\n\t\"./llm/ollama.svg\": 59488,\n\t\"./llm/open-router.svg\": 23258,\n\t\"./llm/openai-api.svg\": 63715,\n\t\"./llm/openai.svg\": 81459,\n\t\"./llm/perfx-cloud.svg\": 39886,\n\t\"./llm/ppio.svg\": 89957,\n\t\"./llm/replicate.svg\": 13492,\n\t\"./llm/sentence-transformers.svg\": 85448,\n\t\"./llm/siliconflow.svg\": 65762,\n\t\"./llm/spark.svg\": 4216,\n\t\"./llm/stepfun.svg\": 53618,\n\t\"./llm/tencent-cloud.svg\": 96734,\n\t\"./llm/together-ai.svg\": 65167,\n\t\"./llm/tongyi.svg\": 74296,\n\t\"./llm/upstage.svg\": 30464,\n\t\"./llm/vllm.svg\": 91333,\n\t\"./llm/volc_engine.svg\": 25210,\n\t\"./llm/voyage.svg\": 6385,\n\t\"./llm/wenxin.svg\": 34981,\n\t\"./llm/xinference.svg\": 76577,\n\t\"./llm/yi.svg\": 20447,\n\t\"./llm/yiyan.svg\": 55103,\n\t\"./llm/youdao.svg\": 81010,\n\t\"./llm/zhipu.svg\": 19568,\n\t\"./login-avatars.svg\": 68683,\n\t\"./login-background.svg\": 89624,\n\t\"./login-star.svg\": 31130,\n\t\"./logo-with-text-white.svg\": 49313,\n\t\"./logout.svg\": 67487,\n\t\"./minio.svg\": 32382,\n\t\"./model-providers.svg\": 70410,\n\t\"./moon.svg\": 22350,\n\t\"./more-model.svg\": 88458,\n\t\"./more.svg\": 1333,\n\t\"./move.svg\": 90076,\n\t\"./mysql.svg\": 37124,\n\t\"./navigation-pointer.svg\": 1979,\n\t\"./next-login-bg.svg\": 33391,\n\t\"./note.svg\": 28687,\n\t\"./nothing.svg\": 47138,\n\t\"./paper-clip.svg\": 2306,\n\t\"./password.svg\": 33530,\n\t\"./plus-circle-fill.svg\": 3804,\n\t\"./plus.svg\": 75350,\n\t\"./profile.svg\": 1769,\n\t\"./prompt.svg\": 49261,\n\t\"./pubmed.svg\": 78566,\n\t\"./qweather.svg\": 56077,\n\t\"./redis.svg\": 43867,\n\t\"./refresh.svg\": 96198,\n\t\"./resize.svg\": 80415,\n\t\"./run.svg\": 91449,\n\t\"./select-files-end.svg\": 14387,\n\t\"./select-files-start.svg\": 16734,\n\t\"./selected-files-collapse.svg\": 40975,\n\t\"./storage.svg\": 3949,\n\t\"./switch.svg\": 1311,\n\t\"./team.svg\": 52381,\n\t\"./template.svg\": 63993,\n\t\"./translation.svg\": 40724,\n\t\"./tushare.svg\": 16521,\n\t\"./wencai.svg\": 72835,\n\t\"./wikipedia.svg\": 18684,\n\t\"./yahoo-finance.svg\": 7957\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 78131;"],"names":["requireContext","routeList","require","keys","map","key","name","replace","value","error","console","warn","SvgIcon","_ref","width","height","imgClass","restProps","_objectWithoutProperties","_excluded","ListItem","find","item","_jsx","Icon","_objectSpread","component","src","alt","className","cn","LlmIcon","_ref2","_ref2$height","_ref2$width","_ref2$size","size","icon","IconMap","concat","Avatar","shape","UserOutlined","useFetchUserInfo","_queryFn","i18n","useTranslation","_useQuery","useQuery","queryKey","initialData","gcTime","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$data","_yield$userService$us","data","wrap","_context","prev","next","userService","user_info","sent","code","changeLanguage","LanguageTranslationMap","language","abrupt","stop","apply","arguments","loading","isFetching","useFetchTenantInfo","_queryFn2","showEmptyModelWarn","length","undefined","t","_useQuery2","_callee2","_yield$userService$ge","res","_data","_context2","get_tenant_info","isEmpty","embd_id","llm_id","Modal","warning","title","content","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","onOk","history","push","chat_id","speech2text_id","asr_id","useSelectParserList","tenantInfo","useMemo","_tenantInfo$parser_id","_tenantInfo$parser_id2","parser_ids","split","x","arr","label","useSaveSetting","_mutationFn","queryClient","useQueryClient","_useMutation","useMutation","mutationKey","mutationFn","_callee3","userInfo","_yield$userService$se","_context3","setting","message","success","invalidateQueries","_x","isPending","saveSetting","mutateAsync","useFetchSystemVersion","_useState","useState","_useState2","_slicedToArray","version","setVersion","_useState3","_useState4","setLoading","fetchSystemVersion","useCallback","_callee4","_yield$userService$ge2","_context4","getSystemVersion","t0","useFetchSystemStatus","_useState5","_useState6","systemStatus","setSystemStatus","_useState7","_useState8","fetchSystemStatus","_callee5","_yield$userService$ge3","_context5","getSystemStatus","useFetchManualSystemTokenList","_mutationFn2","_useMutation2","_callee6","_data$data2","_yield$userService$li","_context6","listToken","fetchSystemTokenList","useFetchSystemTokenList","_queryFn3","_useQuery3","_callee7","_data$data3","_yield$userService$li2","_context7","refetch","useRemoveSystemToken","_mutationFn3","_useMutation3","_callee8","token","_data$data4","_yield$userService$re","_context8","removeToken","_x2","useCreateSystemToken","_mutationFn4","_useMutation4","_callee9","params","_data$data5","_yield$userService$cr","_context9","createToken","_x3","useListTenantUser","_queryFn4","tenantId","tenant_id","_useQuery4","enabled","_callee10","_data$data6","_yield$listTenantUser","_context10","listTenantUser","useAddTenantUser","_mutationFn5","_useMutation5","_callee11","email","_yield$addTenantUser","_context11","addTenantUser","_x4","useDeleteTenantUser","_mutationFn6","_useMutation6","_callee12","_ref3","_data$data7","userId","_yield$deleteTenantUs","_context12","deleteTenantUser","_x5","useListTenant","_queryFn5","_useQuery5","_callee13","_data$data8","_yield$listTenant","_context13","listTenant","useAgreeTenant","_mutationFn7","_useMutation7","_callee14","_data$data9","_yield$agreeTenant","_context14","agreeTenant","_x6","useSetLangfuseConfig","_mutationFn8","_useMutation8","_callee15","_yield$userService$se2","_context15","setLangfuseConfig","_x7","useDeleteLangfuseConfig","_mutationFn9","_useMutation9","_callee16","_yield$userService$de","_context16","deleteLangfuseConfig","useFetchLangfuseConfig","_queryFn6","_useQuery6","_callee17","_yield$userService$ge4","_context17","getLangfuseConfig","CustomTooltip","active","payload","taskExecutorHeartbeatItem","get","children","_jsxs","formatDate","JsonView","displaySize","Object","entries","_ref4","now","dayjs","valueOf","firstItem","lastItem","domain","Flex","styles","vertical","lag","pending","ResponsiveContainer","BarChart","XAxis","dataKey","type","scale","tickFormatter","formatTime","allowDataOverflow","angle","padding","left","right","tickMargin","CartesianGrid","strokeDasharray","Tooltip","wrapperStyle","pointerEvents","trigger","Legend","bottom","Bar","fill","activeBar","Rectangle","stroke","Divider","Text","Typography","Status","TitleMap","doc_engine","storage","redis","database","task_executor_heartbeats","es","_useFetchSystemStatus","statusLoading","useEffect","Spin","spinning","gap","info","Card","align","Badge","status","isObject","TaskBarChat","filter","upperFirst","lowerCase","classNames","_defineProperty","toFixed","login","api","logout","register","tenant_info","factories_list","llm_list","my_llm","set_api_key","set_tenant_info","add_llm","delete_llm","deleteFactory","getSystemTokenList","removeSystemToken","createSystemToken","getSystemConfig","methods","url","method","registerServer","request","post","api_host","kb_list","create_kb","update_kb","rm_kb","get_kb_detail","getKnowledgeGraph","knowledgeId","listTag","listTagByKnowledgeIds","removeTag","renameTag","chunk_list","create_chunk","set_chunk","get_chunk","switch_chunk","rm_chunk","retrieval_test","knowledge_graph","get_document_list","document_change_status","document_rm","document_delete","document_rename","document_create","document_run","document_change_parser","document_thumbnails","get_document_file","document_upload","web_crawl","document_infos","upload_and_parse","parse","setMeta","setDialog","getDialog","removeDialog","listDialog","setConversation","getConversation","getConversationSSE","listConversation","removeConversation","completeConversation","deleteMessage","thumbup","tts","ask","mindmap","getRelatedQuestions","getStats","createExternalConversation","getExternalConversation","completeExternalConversation","uploadAndParseExternal","listFile","uploadFile","removeFile","renameFile","getAllParentFolder","createFolder","connectFileToKnowledge","getFile","moveFile","listSystemToken","listTemplates","listCanvas","listCanvasTeam","getCanvas","getCanvasSSE","removeCanvas","setCanvas","settingCanvas","getListVersion","getVersion","resetCanvas","runCanvas","testDbConnect","getInputElements","debug","date","format","formatPureDate","Methods","opt","server","_loop","urlAppendix","requestOptions","some","toLowerCase","omit","RetcodeMessage","extend","errorHandler","response","notification","description","errorText","statusText","timeout","getResponse","interceptors","use","options","convertTheKeysOfTheObjectToSnake","headers","skipToken","Authorization","getAuthorization","_response$clone","responseType","clone","json","duration","authorizationUtil","removeAll","redirectToLogin","body","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","resolve","module","exports"],"sourceRoot":""}