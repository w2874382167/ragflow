{"version":3,"file":"p__agents__index.0c2b32e6.async.js","mappings":"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","sources":["webpack://web/./src/components/list-filter-bar.tsx","webpack://web/./src/components/ui/avatar.tsx","webpack://web/./src/components/ui/button.tsx","webpack://web/./src/components/ui/card.tsx","webpack://web/./src/components/ui/input.tsx","webpack://web/./src/constants/knowledge.ts","webpack://web/./src/hooks/logic-hooks.ts","webpack://web/./src/hooks/logic-hooks/navigate-hooks.ts","webpack://web/./src/hooks/route-hook.ts","webpack://web/./src/pages/agents/agent-card.tsx","webpack://web/./src/pages/agents/index.tsx","webpack://web/./src/routes.ts","webpack://web/./src/utils/chat.ts","webpack://web/./src/utils/date.ts"],"sourcesContent":["import { Filter } from 'lucide-react';\nimport { PropsWithChildren } from 'react';\nimport { Button } from './ui/button';\nimport { SearchInput } from './ui/input';\n\ninterface IProps {\n  title: string;\n  showDialog?: () => void;\n}\n\nexport default function ListFilterBar({\n  title,\n  children,\n  showDialog,\n}: PropsWithChildren<IProps>) {\n  return (\n    <div className=\"flex justify-between mb-6\">\n      <span className=\"text-3xl font-bold \">{title}</span>\n      <div className=\"flex gap-4 items-center\">\n        <Filter className=\"size-5\" />\n        <SearchInput></SearchInput>\n        <Button variant={'tertiary'} size={'sm'} onClick={showDialog}>\n          {children}\n        </Button>\n      </div>\n    </div>\n  );\n}\n","'use client';\n\nimport * as AvatarPrimitive from '@radix-ui/react-avatar';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      'relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full',\n      className,\n    )}\n    {...props}\n  />\n));\nAvatar.displayName = AvatarPrimitive.Root.displayName;\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn('aspect-square h-full w-full', className)}\n    {...props}\n  />\n));\nAvatarImage.displayName = AvatarPrimitive.Image.displayName;\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      'flex h-full w-full items-center justify-center rounded-full bg-muted',\n      className,\n    )}\n    {...props}\n  />\n));\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;\n\nexport { Avatar, AvatarFallback, AvatarImage };\n\ntype AvatarProps = React.ComponentProps<typeof Avatar>;\n\ninterface AvatarGroupProps extends React.ComponentProps<'div'> {\n  children: React.ReactElement<AvatarProps>[];\n  max?: number;\n}\n\nexport const AvatarGroup = ({\n  children,\n  max,\n  className,\n  ...props\n}: AvatarGroupProps) => {\n  const totalAvatars = React.Children.count(children);\n  const displayedAvatars = React.Children.toArray(children)\n    .slice(0, max)\n    .reverse();\n  const remainingAvatars = max ? Math.max(totalAvatars - max, 1) : 0;\n\n  return (\n    <div\n      className={cn('flex items-center flex-row-reverse', className)}\n      {...props}\n    >\n      {remainingAvatars > 0 && (\n        <Avatar className=\"-ml-2 hover:z-10 relative ring-2 ring-background\">\n          <AvatarFallback className=\"bg-muted-foreground text-white\">\n            +{remainingAvatars}\n          </AvatarFallback>\n        </Avatar>\n      )}\n      {displayedAvatars.map((avatar, index) => {\n        if (!React.isValidElement(avatar)) return null;\n\n        return (\n          <div key={index} className=\"-ml-2 hover:z-10 relative\">\n            {React.cloneElement(avatar as React.ReactElement<AvatarProps>, {\n              className: 'ring-2 ring-background',\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-colors-outline-sentiment-primary bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n        tertiary:\n          'bg-colors-background-sentiment-solid-primary text-colors-text-persist-light hover:bg-colors-background-sentiment-solid-primary/80',\n        icon: 'bg-colors-background-inverse-standard text-foreground hover:bg-colors-background-inverse-standard/80',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n        auto: 'h-full px-1',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };\n","import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'rounded-lg border bg-card text-card-foreground shadow-sm',\n      className,\n    )}\n    {...props}\n  />\n));\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\n    {...props}\n  />\n));\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className,\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n));\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex items-center p-6 pt-0', className)}\n    {...props}\n  />\n));\nCardFooter.displayName = 'CardFooter';\n\nexport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n};\n","import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\nimport { Search } from 'lucide-react';\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'flex h-10 w-full rounded-md border border-input bg-colors-background-inverse-weak px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nInput.displayName = 'Input';\n\nexport interface ExpandedInputProps extends Omit<InputProps, 'prefix'> {\n  prefix?: React.ReactNode;\n  suffix?: React.ReactNode;\n}\n\nconst ExpandedInput = ({ suffix, prefix, ...props }: ExpandedInputProps) => {\n  return (\n    <div className=\"relative\">\n      <span\n        className={cn({\n          ['absolute left-3 top-[50%] translate-y-[-50%]']: prefix,\n        })}\n      >\n        {prefix}\n      </span>\n      <Input\n        className={cn({ 'pr-10': suffix, 'pl-10': prefix })}\n        {...props}\n      ></Input>\n      <span\n        className={cn({\n          ['absolute right-3 top-[50%] translate-y-[-50%]']: suffix,\n        })}\n      >\n        {suffix}\n      </span>\n    </div>\n  );\n};\n\nconst SearchInput = (props: InputProps) => {\n  return <ExpandedInput suffix={<Search />} {...props}></ExpandedInput>;\n};\n\nexport { ExpandedInput, Input, SearchInput };\n","export enum KnowledgeRouteKey {\n  Dataset = 'dataset',\n  Testing = 'testing',\n  Configuration = 'configuration',\n  KnowledgeGraph = 'knowledgeGraph',\n}\n\nexport const DatasetBaseKey = 'dataset';\n\nexport enum RunningStatus {\n  UNSTART = '0', // need to run\n  RUNNING = '1', // need to cancel\n  CANCEL = '2', // need to refresh\n  DONE = '3', // need to refresh\n  FAIL = '4', // need to refresh\n}\n\nexport enum ModelVariableType {\n  Improvise = 'Improvise',\n  Precise = 'Precise',\n  Balance = 'Balance',\n}\n\nexport const settledModelVariableMap = {\n  [ModelVariableType.Improvise]: {\n    temperature: 0.9,\n    top_p: 0.9,\n    frequency_penalty: 0.2,\n    presence_penalty: 0.4,\n    max_tokens: 512,\n  },\n  [ModelVariableType.Precise]: {\n    temperature: 0.1,\n    top_p: 0.3,\n    frequency_penalty: 0.7,\n    presence_penalty: 0.4,\n    max_tokens: 512,\n  },\n  [ModelVariableType.Balance]: {\n    temperature: 0.5,\n    top_p: 0.5,\n    frequency_penalty: 0.7,\n    presence_penalty: 0.4,\n    max_tokens: 512,\n  },\n};\n\nexport enum LlmModelType {\n  Embedding = 'embedding',\n  Chat = 'chat',\n  Image2text = 'image2text',\n  Speech2text = 'speech2text',\n  Rerank = 'rerank',\n  TTS = 'tts',\n}\n\nexport enum KnowledgeSearchParams {\n  DocumentId = 'doc_id',\n  KnowledgeId = 'id',\n}\n\nexport enum DocumentType {\n  Virtual = 'virtual',\n  Visual = 'visual',\n}\n\nexport enum DocumentParserType {\n  Naive = 'naive',\n  Qa = 'qa',\n  Resume = 'resume',\n  Manual = 'manual',\n  Table = 'table',\n  Paper = 'paper',\n  Book = 'book',\n  Laws = 'laws',\n  Presentation = 'presentation',\n  Picture = 'picture',\n  One = 'one',\n  Audio = 'audio',\n  Email = 'email',\n  Tag = 'tag',\n  KnowledgeGraph = 'knowledge_graph',\n}\n","import { Authorization } from '@/constants/authorization';\nimport { MessageType } from '@/constants/chat';\nimport { LanguageTranslationMap } from '@/constants/common';\nimport { ResponseType } from '@/interfaces/database/base';\nimport { IAnswer, Message } from '@/interfaces/database/chat';\nimport { IKnowledgeFile } from '@/interfaces/database/knowledge';\nimport { IClientConversation, IMessage } from '@/pages/chat/interface';\nimport api from '@/utils/api';\nimport { getAuthorization } from '@/utils/authorization-util';\nimport { buildMessageUuid } from '@/utils/chat';\nimport { PaginationProps, message } from 'antd';\nimport { FormInstance } from 'antd/lib';\nimport axios from 'axios';\nimport { EventSourceParserStream } from 'eventsource-parser/stream';\nimport { omit } from 'lodash';\nimport {\n  ChangeEventHandler,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { v4 as uuid } from 'uuid';\nimport { useTranslate } from './common-hooks';\nimport { useSetPaginationParams } from './route-hook';\nimport { useFetchTenantInfo, useSaveSetting } from './user-setting-hooks';\n\nexport const useSetSelectedRecord = <T = IKnowledgeFile>() => {\n  const [currentRecord, setCurrentRecord] = useState<T>({} as T);\n\n  const setRecord = (record: T) => {\n    setCurrentRecord(record);\n  };\n\n  return { currentRecord, setRecord };\n};\n\nexport const useHandleSearchChange = () => {\n  const [searchString, setSearchString] = useState('');\n\n  const handleInputChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n      const value = e.target.value;\n      setSearchString(value);\n    },\n    [],\n  );\n\n  return { handleInputChange, searchString };\n};\n\nexport const useChangeLanguage = () => {\n  const { i18n } = useTranslation();\n  const { saveSetting } = useSaveSetting();\n\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(\n      LanguageTranslationMap[lng as keyof typeof LanguageTranslationMap],\n    );\n    saveSetting({ language: lng });\n  };\n\n  return changeLanguage;\n};\n\nexport const useGetPaginationWithRouter = () => {\n  const { t } = useTranslate('common');\n  const {\n    setPaginationParams,\n    page,\n    size: pageSize,\n  } = useSetPaginationParams();\n\n  const onPageChange: PaginationProps['onChange'] = useCallback(\n    (pageNumber: number, pageSize: number) => {\n      setPaginationParams(pageNumber, pageSize);\n    },\n    [setPaginationParams],\n  );\n\n  const setCurrentPagination = useCallback(\n    (pagination: { page: number; pageSize?: number }) => {\n      setPaginationParams(pagination.page, pagination.pageSize);\n    },\n    [setPaginationParams],\n  );\n\n  const pagination: PaginationProps = useMemo(() => {\n    return {\n      showQuickJumper: true,\n      total: 0,\n      showSizeChanger: true,\n      current: page,\n      pageSize: pageSize,\n      pageSizeOptions: [1, 2, 10, 20, 50, 100],\n      onChange: onPageChange,\n      showTotal: (total) => `${t('total')} ${total}`,\n    };\n  }, [t, onPageChange, page, pageSize]);\n\n  return {\n    pagination,\n    setPagination: setCurrentPagination,\n  };\n};\n\nexport const useGetPagination = () => {\n  const [pagination, setPagination] = useState({ page: 1, pageSize: 10 });\n  const { t } = useTranslate('common');\n\n  const onPageChange: PaginationProps['onChange'] = useCallback(\n    (pageNumber: number, pageSize: number) => {\n      setPagination({ page: pageNumber, pageSize });\n    },\n    [],\n  );\n\n  const currentPagination: PaginationProps = useMemo(() => {\n    return {\n      showQuickJumper: true,\n      total: 0,\n      showSizeChanger: true,\n      current: pagination.page,\n      pageSize: pagination.pageSize,\n      pageSizeOptions: [1, 2, 10, 20, 50, 100],\n      onChange: onPageChange,\n      showTotal: (total) => `${t('total')} ${total}`,\n    };\n  }, [t, onPageChange, pagination]);\n\n  return {\n    pagination: currentPagination,\n  };\n};\n\nexport interface AppConf {\n  appName: string;\n}\n\nexport const useFetchAppConf = () => {\n  const [appConf, setAppConf] = useState<AppConf>({} as AppConf);\n  const fetchAppConf = useCallback(async () => {\n    const ret = await axios.get('/conf.json');\n\n    setAppConf(ret.data);\n  }, []);\n\n  useEffect(() => {\n    fetchAppConf();\n  }, [fetchAppConf]);\n\n  return appConf;\n};\n\nexport const useSendMessageWithSse = (\n  url: string = api.completeConversation,\n) => {\n  const [answer, setAnswer] = useState<IAnswer>({} as IAnswer);\n  const [done, setDone] = useState(true);\n  const timer = useRef<any>();\n\n  const resetAnswer = useCallback(() => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n    timer.current = setTimeout(() => {\n      setAnswer({} as IAnswer);\n      clearTimeout(timer.current);\n    }, 1000);\n  }, []);\n\n  const send = useCallback(\n    async (\n      body: any,\n      controller?: AbortController,\n    ): Promise<{ response: Response; data: ResponseType } | undefined> => {\n      try {\n        setDone(false);\n        const response = await fetch(url, {\n          method: 'POST',\n          headers: {\n            [Authorization]: getAuthorization(),\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(body),\n          signal: controller?.signal,\n        });\n\n        const res = response.clone().json();\n        const reader = response?.body\n          ?.pipeThrough(new TextDecoderStream())\n          .pipeThrough(new EventSourceParserStream())\n          .getReader();\n\n        while (true) {\n          const x = await reader?.read();\n          if (x) {\n            const { done, value } = x;\n            if (done) {\n              console.info('done');\n              resetAnswer();\n              break;\n            }\n            try {\n              const val = JSON.parse(value?.data || '');\n              const d = val?.data;\n              if (typeof d !== 'boolean') {\n                console.info('data:', d);\n                setAnswer({\n                  ...d,\n                  conversationId: body?.conversation_id,\n                });\n              }\n            } catch (e) {\n              console.warn(e);\n            }\n          }\n        }\n        console.info('done?');\n        setDone(true);\n        resetAnswer();\n        return { data: await res, response };\n      } catch (e) {\n        setDone(true);\n        resetAnswer();\n\n        console.warn(e);\n      }\n    },\n    [url, resetAnswer],\n  );\n\n  return { send, answer, done, setDone, resetAnswer };\n};\n\nexport const useSpeechWithSse = (url: string = api.tts) => {\n  const read = useCallback(\n    async (body: any) => {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          [Authorization]: getAuthorization(),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      });\n      try {\n        const res = await response.clone().json();\n        if (res?.code !== 0) {\n          message.error(res?.message);\n        }\n      } catch (error) {\n        console.warn('🚀 ~ error:', error);\n      }\n      return response;\n    },\n    [url],\n  );\n\n  return { read };\n};\n\n//#region chat hooks\n\nexport const useScrollToBottom = (messages?: unknown) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = useCallback(() => {\n    if (messages) {\n      ref.current?.scrollIntoView({ behavior: 'instant' });\n    }\n  }, [messages]); // If the message changes, scroll to the bottom\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [scrollToBottom]);\n\n  return ref;\n};\n\nexport const useHandleMessageInputChange = () => {\n  const [value, setValue] = useState('');\n\n  const handleInputChange: ChangeEventHandler<HTMLTextAreaElement> = (e) => {\n    const value = e.target.value;\n    const nextValue = value.replaceAll('\\\\n', '\\n').replaceAll('\\\\t', '\\t');\n    setValue(nextValue);\n  };\n\n  return {\n    handleInputChange,\n    value,\n    setValue,\n  };\n};\n\nexport const useSelectDerivedMessages = () => {\n  const [derivedMessages, setDerivedMessages] = useState<IMessage[]>([]);\n\n  const ref = useScrollToBottom(derivedMessages);\n\n  const addNewestQuestion = useCallback(\n    (message: Message, answer: string = '') => {\n      setDerivedMessages((pre) => {\n        return [\n          ...pre,\n          {\n            ...message,\n            id: buildMessageUuid(message), // The message id is generated on the front end,\n            // and the message id returned by the back end is the same as the question id,\n            //  so that the pair of messages can be deleted together when deleting the message\n          },\n          {\n            role: MessageType.Assistant,\n            content: answer,\n            id: buildMessageUuid({ ...message, role: MessageType.Assistant }),\n          },\n        ];\n      });\n    },\n    [],\n  );\n\n  // Add the streaming message to the last item in the message list\n  const addNewestAnswer = useCallback((answer: IAnswer) => {\n    setDerivedMessages((pre) => {\n      return [\n        ...(pre?.slice(0, -1) ?? []),\n        {\n          role: MessageType.Assistant,\n          content: answer.answer,\n          reference: answer.reference,\n          id: buildMessageUuid({\n            id: answer.id,\n            role: MessageType.Assistant,\n          }),\n          prompt: answer.prompt,\n          audio_binary: answer.audio_binary,\n          ...omit(answer, 'reference'),\n        },\n      ];\n    });\n  }, []);\n\n  const removeLatestMessage = useCallback(() => {\n    setDerivedMessages((pre) => {\n      const nextMessages = pre?.slice(0, -2) ?? [];\n      return nextMessages;\n    });\n  }, []);\n\n  const removeMessageById = useCallback(\n    (messageId: string) => {\n      setDerivedMessages((pre) => {\n        const nextMessages = pre?.filter((x) => x.id !== messageId) ?? [];\n        return nextMessages;\n      });\n    },\n    [setDerivedMessages],\n  );\n\n  const removeMessagesAfterCurrentMessage = useCallback(\n    (messageId: string) => {\n      setDerivedMessages((pre) => {\n        const index = pre.findIndex((x) => x.id === messageId);\n        if (index !== -1) {\n          let nextMessages = pre.slice(0, index + 2) ?? [];\n          const latestMessage = nextMessages.at(-1);\n          nextMessages = latestMessage\n            ? [\n                ...nextMessages.slice(0, -1),\n                {\n                  ...latestMessage,\n                  content: '',\n                  reference: undefined,\n                  prompt: undefined,\n                },\n              ]\n            : nextMessages;\n          return nextMessages;\n        }\n        return pre;\n      });\n    },\n    [setDerivedMessages],\n  );\n\n  return {\n    ref,\n    derivedMessages,\n    setDerivedMessages,\n    addNewestQuestion,\n    addNewestAnswer,\n    removeLatestMessage,\n    removeMessageById,\n    removeMessagesAfterCurrentMessage,\n  };\n};\n\nexport interface IRemoveMessageById {\n  removeMessageById(messageId: string): void;\n}\n\nexport const useRemoveMessagesAfterCurrentMessage = (\n  setCurrentConversation: (\n    callback: (state: IClientConversation) => IClientConversation,\n  ) => void,\n) => {\n  const removeMessagesAfterCurrentMessage = useCallback(\n    (messageId: string) => {\n      setCurrentConversation((pre) => {\n        const index = pre.message?.findIndex((x) => x.id === messageId);\n        if (index !== -1) {\n          let nextMessages = pre.message?.slice(0, index + 2) ?? [];\n          const latestMessage = nextMessages.at(-1);\n          nextMessages = latestMessage\n            ? [\n                ...nextMessages.slice(0, -1),\n                {\n                  ...latestMessage,\n                  content: '',\n                  reference: undefined,\n                  prompt: undefined,\n                },\n              ]\n            : nextMessages;\n          return {\n            ...pre,\n            message: nextMessages,\n          };\n        }\n        return pre;\n      });\n    },\n    [setCurrentConversation],\n  );\n\n  return { removeMessagesAfterCurrentMessage };\n};\n\nexport interface IRegenerateMessage {\n  regenerateMessage?: (message: Message) => void;\n}\n\nexport const useRegenerateMessage = ({\n  removeMessagesAfterCurrentMessage,\n  sendMessage,\n  messages,\n}: {\n  removeMessagesAfterCurrentMessage(messageId: string): void;\n  sendMessage({\n    message,\n  }: {\n    message: Message;\n    messages?: Message[];\n  }): void | Promise<any>;\n  messages: Message[];\n}) => {\n  const regenerateMessage = useCallback(\n    async (message: Message) => {\n      if (message.id) {\n        removeMessagesAfterCurrentMessage(message.id);\n        const index = messages.findIndex((x) => x.id === message.id);\n        let nextMessages;\n        if (index !== -1) {\n          nextMessages = messages.slice(0, index);\n        }\n        sendMessage({\n          message: { ...message, id: uuid() },\n          messages: nextMessages,\n        });\n      }\n    },\n    [removeMessagesAfterCurrentMessage, sendMessage, messages],\n  );\n\n  return { regenerateMessage };\n};\n\n// #endregion\n\n/**\n *\n * @param defaultId\n * used to switch between different items, similar to radio\n * @returns\n */\nexport const useSelectItem = (defaultId?: string) => {\n  const [selectedId, setSelectedId] = useState('');\n\n  const handleItemClick = useCallback(\n    (id: string) => () => {\n      setSelectedId(id);\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (defaultId) {\n      setSelectedId(defaultId);\n    }\n  }, [defaultId]);\n\n  return { selectedId, handleItemClick };\n};\n\nexport const useFetchModelId = () => {\n  const { data: tenantInfo } = useFetchTenantInfo(true);\n\n  return tenantInfo?.llm_id ?? '';\n};\n\nconst ChunkTokenNumMap = {\n  naive: 128,\n  knowledge_graph: 8192,\n};\n\nexport const useHandleChunkMethodSelectChange = (form: FormInstance) => {\n  // const form = Form.useFormInstance();\n  const handleChange = useCallback(\n    (value: string) => {\n      if (value in ChunkTokenNumMap) {\n        form.setFieldValue(\n          ['parser_config', 'chunk_token_num'],\n          ChunkTokenNumMap[value as keyof typeof ChunkTokenNumMap],\n        );\n      }\n    },\n    [form],\n  );\n\n  return handleChange;\n};\n\n// reset form fields when modal is form, closed\nexport const useResetFormOnCloseModal = ({\n  form,\n  visible,\n}: {\n  form: FormInstance;\n  visible?: boolean;\n}) => {\n  const prevOpenRef = useRef<boolean>();\n  useEffect(() => {\n    prevOpenRef.current = visible;\n  }, [visible]);\n  const prevOpen = prevOpenRef.current;\n\n  useEffect(() => {\n    if (!visible && prevOpen) {\n      form.resetFields();\n    }\n  }, [form, prevOpen, visible]);\n};\n","import { Routes } from '@/routes';\nimport { useCallback } from 'react';\nimport { useNavigate, useParams, useSearchParams } from 'umi';\n\nexport enum QueryStringMap {\n  KnowledgeId = 'knowledgeId',\n}\n\nexport const useNavigatePage = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const { id } = useParams();\n\n  const navigateToDatasetList = useCallback(() => {\n    navigate(Routes.Datasets);\n  }, [navigate]);\n\n  const navigateToDataset = useCallback(\n    (id: string) => () => {\n      navigate(`${Routes.Dataset}/${id}`);\n    },\n    [navigate],\n  );\n\n  const navigateToHome = useCallback(() => {\n    navigate(Routes.Home);\n  }, [navigate]);\n\n  const navigateToProfile = useCallback(() => {\n    navigate(Routes.ProfileSetting);\n  }, [navigate]);\n\n  const navigateToChatList = useCallback(() => {\n    navigate(Routes.Chats);\n  }, [navigate]);\n\n  const navigateToChat = useCallback(() => {\n    navigate(Routes.Chat);\n  }, [navigate]);\n\n  const navigateToAgentList = useCallback(() => {\n    navigate(Routes.Agents);\n  }, [navigate]);\n\n  const navigateToAgent = useCallback(\n    (id: string) => () => {\n      navigate(`${Routes.Agent}/${id}`);\n    },\n    [navigate],\n  );\n\n  const navigateToAgentTemplates = useCallback(() => {\n    navigate(Routes.AgentTemplates);\n  }, [navigate]);\n\n  const navigateToSearchList = useCallback(() => {\n    navigate(Routes.Searches);\n  }, [navigate]);\n\n  const navigateToSearch = useCallback(() => {\n    navigate(Routes.Search);\n  }, [navigate]);\n\n  const navigateToChunkParsedResult = useCallback(\n    (id: string, knowledgeId?: string) => () => {\n      navigate(\n        `${Routes.ParsedResult}/${id}?${QueryStringMap.KnowledgeId}=${knowledgeId}`,\n      );\n    },\n    [navigate],\n  );\n\n  const getQueryString = useCallback(\n    (queryStringKey?: QueryStringMap) => {\n      const allQueryString = {\n        [QueryStringMap.KnowledgeId]: searchParams.get(\n          QueryStringMap.KnowledgeId,\n        ),\n      };\n      if (queryStringKey) {\n        return allQueryString[queryStringKey];\n      }\n      return allQueryString;\n    },\n    [searchParams],\n  );\n\n  const navigateToChunk = useCallback(\n    (route: Routes) => {\n      navigate(\n        `${route}/${id}?${QueryStringMap.KnowledgeId}=${getQueryString(QueryStringMap.KnowledgeId)}`,\n      );\n    },\n    [getQueryString, id, navigate],\n  );\n\n  return {\n    navigateToDatasetList,\n    navigateToDataset,\n    navigateToHome,\n    navigateToProfile,\n    navigateToChatList,\n    navigateToChat,\n    navigateToChunkParsedResult,\n    getQueryString,\n    navigateToChunk,\n    navigateToAgentList,\n    navigateToAgent,\n    navigateToAgentTemplates,\n    navigateToSearchList,\n    navigateToSearch,\n  };\n};\n","import {\n  KnowledgeRouteKey,\n  KnowledgeSearchParams,\n} from '@/constants/knowledge';\nimport { useCallback } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'umi';\n\nexport enum SegmentIndex {\n  Second = '2',\n  Third = '3',\n}\n\nexport const useSegmentedPathName = (index: SegmentIndex) => {\n  const { pathname } = useLocation();\n\n  const pathArray = pathname.split('/');\n  return pathArray[index] || '';\n};\n\nexport const useSecondPathName = () => {\n  return useSegmentedPathName(SegmentIndex.Second);\n};\n\nexport const useThirdPathName = () => {\n  return useSegmentedPathName(SegmentIndex.Third);\n};\n\nexport const useGetKnowledgeSearchParams = () => {\n  const [currentQueryParameters] = useSearchParams();\n\n  return {\n    documentId:\n      currentQueryParameters.get(KnowledgeSearchParams.DocumentId) || '',\n    knowledgeId:\n      currentQueryParameters.get(KnowledgeSearchParams.KnowledgeId) || '',\n  };\n};\n\nexport const useNavigateWithFromState = () => {\n  const navigate = useNavigate();\n  return useCallback(\n    (path: string) => {\n      navigate(path, { state: { from: path } });\n    },\n    [navigate],\n  );\n};\n\nexport const useNavigateToDataset = () => {\n  const navigate = useNavigate();\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  return useCallback(() => {\n    navigate(`/knowledge/${KnowledgeRouteKey.Dataset}?id=${knowledgeId}`);\n  }, [knowledgeId, navigate]);\n};\n\nexport const useGetPaginationParams = () => {\n  const [currentQueryParameters] = useSearchParams();\n\n  return {\n    page: currentQueryParameters.get('page') || 1,\n    size: currentQueryParameters.get('size') || 10,\n  };\n};\n\nexport const useSetPaginationParams = () => {\n  const [queryParameters, setSearchParams] = useSearchParams();\n  // const newQueryParameters: URLSearchParams = useMemo(\n  //   () => new URLSearchParams(queryParameters.toString()),\n  //   [queryParameters],\n  // );\n\n  const setPaginationParams = useCallback(\n    (page: number = 1, pageSize?: number) => {\n      queryParameters.set('page', page.toString());\n      if (pageSize) {\n        queryParameters.set('size', pageSize.toString());\n      }\n      setSearchParams(queryParameters);\n    },\n    [setSearchParams, queryParameters],\n  );\n\n  return {\n    setPaginationParams,\n    page: Number(queryParameters.get('page')) || 1,\n    size: Number(queryParameters.get('size')) || 10,\n  };\n};\n","import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { useNavigatePage } from '@/hooks/logic-hooks/navigate-hooks';\nimport { IFlow } from '@/interfaces/database/flow';\nimport { formatPureDate } from '@/utils/date';\nimport { ChevronRight, Trash2 } from 'lucide-react';\n\ninterface IProps {\n  data: IFlow;\n}\n\nexport function AgentCard({ data }: IProps) {\n  const { navigateToAgent } = useNavigatePage();\n\n  return (\n    <Card className=\"bg-colors-background-inverse-weak  border-colors-outline-neutral-standard\">\n      <CardContent className=\"p-4\">\n        <div className=\"flex justify-between mb-4\">\n          {data.avatar ? (\n            <div\n              className=\"w-[70px] h-[70px] rounded-xl bg-cover\"\n              style={{ backgroundImage: `url(${data.avatar})` }}\n            />\n          ) : (\n            <Avatar className=\"w-[70px] h-[70px]\">\n              <AvatarImage src=\"https://github.com/shadcn.png\" />\n              <AvatarFallback>CN</AvatarFallback>\n            </Avatar>\n          )}\n        </div>\n        <h3 className=\"text-xl font-bold mb-2\">{data.title}</h3>\n        <p>An app that does things An app that does things</p>\n        <section className=\"flex justify-between pt-3\">\n          <div>\n            Search app\n            <p className=\"text-sm opacity-80\">\n              {formatPureDate(data.update_time)}\n            </p>\n          </div>\n          <div className=\"space-x-2\">\n            <Button\n              variant=\"icon\"\n              size=\"icon\"\n              onClick={navigateToAgent(data.id)}\n            >\n              <ChevronRight className=\"h-6 w-6\" />\n            </Button>\n            <Button variant=\"icon\" size=\"icon\">\n              <Trash2 />\n            </Button>\n          </div>\n        </section>\n      </CardContent>\n    </Card>\n  );\n}\n","import ListFilterBar from '@/components/list-filter-bar';\nimport { useFetchFlowList } from '@/hooks/flow-hooks';\nimport { useNavigatePage } from '@/hooks/logic-hooks/navigate-hooks';\nimport { Plus } from 'lucide-react';\nimport { AgentCard } from './agent-card';\n\nexport default function Agent() {\n  const { data } = useFetchFlowList();\n  const { navigateToAgentTemplates } = useNavigatePage();\n\n  return (\n    <section>\n      <div className=\"px-8 pt-8\">\n        <ListFilterBar title=\"Agents\" showDialog={navigateToAgentTemplates}>\n          <Plus className=\"mr-2 h-4 w-4\" />\n          Create app\n        </ListFilterBar>\n      </div>\n      <div className=\"grid gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-6 2xl:grid-cols-8 max-h-[84vh] overflow-auto px-8\">\n        {data.map((x) => {\n          return <AgentCard key={x.id} data={x}></AgentCard>;\n        })}\n      </div>\n    </section>\n  );\n}\n","export enum Routes {\n  Login = '/login',\n  Home = '/home',\n  Datasets = '/datasets',\n  DatasetBase = '/dataset',\n  Dataset = `${Routes.DatasetBase}${Routes.DatasetBase}`,\n  Agent = '/agent',\n  AgentTemplates = '/agent-templates',\n  Agents = '/agents',\n  Searches = '/next-searches',\n  Search = '/next-search',\n  Chats = '/next-chats',\n  Chat = '/next-chat',\n  Files = '/files',\n  ProfileSetting = '/profile-setting',\n  DatasetTesting = '/testing',\n  DatasetSetting = '/setting',\n  Chunk = '/chunk',\n  ChunkResult = `${Chunk}${Chunk}`,\n  Parsed = '/parsed',\n  ParsedResult = `${Chunk}${Parsed}`,\n  Result = '/result',\n  ResultView = `${Chunk}${Result}`,\n}\n\nconst routes = [\n  {\n    path: '/login',\n    component: '@/pages/login',\n    layout: false,\n  },\n  {\n    path: '/login-next',\n    component: '@/pages/login-next',\n    layout: false,\n  },\n  {\n    path: '/chat/share',\n    component: '@/pages/chat/share',\n    layout: false,\n  },\n  {\n    path: '/',\n    component: '@/layouts',\n    layout: false,\n    wrappers: ['@/wrappers/auth'],\n    routes: [\n      { path: '/', redirect: '/knowledge' },\n      {\n        path: '/knowledge',\n        component: '@/pages/knowledge',\n      },\n      {\n        path: '/knowledge',\n        component: '@/pages/add-knowledge',\n        routes: [\n          {\n            path: '/knowledge/dataset',\n            component: '@/pages/add-knowledge/components/knowledge-dataset',\n            routes: [\n              {\n                path: '/knowledge/dataset',\n                component: '@/pages/add-knowledge/components/knowledge-file',\n              },\n              {\n                path: '/knowledge/dataset/chunk',\n                component: '@/pages/add-knowledge/components/knowledge-chunk',\n              },\n            ],\n          },\n          {\n            path: '/knowledge/configuration',\n            component: '@/pages/add-knowledge/components/knowledge-setting',\n          },\n          {\n            path: '/knowledge/testing',\n            component: '@/pages/add-knowledge/components/knowledge-testing',\n          },\n          {\n            path: '/knowledge/knowledgeGraph',\n            component: '@/pages/add-knowledge/components/knowledge-graph',\n          },\n        ],\n      },\n      {\n        path: '/chat',\n        component: '@/pages/chat',\n      },\n      {\n        path: '/user-setting',\n        component: '@/pages/user-setting',\n        routes: [\n          { path: '/user-setting', redirect: '/user-setting/profile' },\n          {\n            path: '/user-setting/profile',\n            component: '@/pages/user-setting/setting-profile',\n          },\n          {\n            path: '/user-setting/locale',\n            component: '@/pages/user-setting/setting-locale',\n          },\n          {\n            path: '/user-setting/password',\n            component: '@/pages/user-setting/setting-password',\n          },\n          {\n            path: '/user-setting/model',\n            component: '@/pages/user-setting/setting-model',\n          },\n          {\n            path: '/user-setting/team',\n            component: '@/pages/user-setting/setting-team',\n          },\n          {\n            path: '/user-setting/system',\n            component: '@/pages/user-setting/setting-system',\n          },\n          {\n            path: '/user-setting/api',\n            component: '@/pages/user-setting/setting-api',\n          },\n        ],\n      },\n      {\n        path: '/file',\n        component: '@/pages/file-manager',\n      },\n      {\n        path: '/flow',\n        component: '@/pages/flow/list',\n      },\n      {\n        path: '/flow/:id',\n        component: '@/pages/flow',\n      },\n      {\n        path: '/search',\n        component: '@/pages/search',\n      },\n    ],\n  },\n  {\n    path: '/document/:id',\n    component: '@/pages/document-viewer',\n    layout: false,\n  },\n  {\n    path: '/*',\n    component: '@/pages/404',\n    layout: false,\n  },\n  {\n    path: Routes.Home,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Home,\n        component: `@/pages${Routes.Home}`,\n      },\n    ],\n  },\n  {\n    path: Routes.Datasets,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Datasets,\n        component: `@/pages${Routes.Datasets}`,\n      },\n    ],\n  },\n  {\n    path: Routes.Chats,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Chats,\n        component: `@/pages${Routes.Chats}`,\n      },\n    ],\n  },\n  {\n    path: Routes.Chat,\n    layout: false,\n    component: `@/pages${Routes.Chats}/chat`,\n  },\n  {\n    path: Routes.Searches,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Searches,\n        component: `@/pages${Routes.Searches}`,\n      },\n    ],\n  },\n  {\n    path: Routes.Search,\n    layout: false,\n    component: `@/pages${Routes.Search}`,\n  },\n  {\n    path: Routes.Agents,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Agents,\n        component: `@/pages${Routes.Agents}`,\n      },\n    ],\n  },\n  {\n    path: `${Routes.Agent}/:id`,\n    layout: false,\n    component: `@/pages${Routes.Agent}`,\n  },\n  {\n    path: Routes.AgentTemplates,\n    layout: false,\n    component: `@/pages${Routes.Agents}${Routes.AgentTemplates}`,\n  },\n  {\n    path: Routes.Files,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [\n      {\n        path: Routes.Files,\n        component: `@/pages${Routes.Files}`,\n      },\n    ],\n  },\n  {\n    path: Routes.DatasetBase,\n    layout: false,\n    component: '@/layouts/next',\n    routes: [{ path: Routes.DatasetBase, redirect: Routes.Dataset }],\n  },\n  {\n    path: Routes.DatasetBase,\n    layout: false,\n    component: `@/pages${Routes.DatasetBase}`,\n    routes: [\n      {\n        path: `${Routes.Dataset}/:id`,\n        component: `@/pages${Routes.Dataset}`,\n      },\n      {\n        path: `${Routes.DatasetBase}${Routes.DatasetSetting}/:id`,\n        component: `@/pages${Routes.DatasetBase}${Routes.DatasetSetting}`,\n      },\n      {\n        path: `${Routes.DatasetBase}${Routes.DatasetTesting}/:id`,\n        component: `@/pages${Routes.DatasetBase}${Routes.DatasetTesting}`,\n      },\n    ],\n  },\n  {\n    path: Routes.Chunk,\n    layout: false,\n    routes: [\n      {\n        path: Routes.Chunk,\n        component: `@/pages${Routes.Chunk}`,\n        routes: [\n          {\n            path: `${Routes.ParsedResult}/:id`,\n            component: `@/pages${Routes.Chunk}/parsed-result`,\n          },\n          {\n            path: `${Routes.ChunkResult}/:id`,\n            component: `@/pages${Routes.Chunk}/chunk-result`,\n          },\n          {\n            path: `${Routes.ResultView}/:id`,\n            component: `@/pages${Routes.Chunk}/result-view`,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: Routes.Chunk,\n    layout: false,\n    component: `@/pages${Routes.Chunk}`,\n  },\n  {\n    path: Routes.ProfileSetting,\n    layout: false,\n    component: `@/pages${Routes.ProfileSetting}`,\n    routes: [\n      {\n        path: Routes.ProfileSetting,\n        redirect: `${Routes.ProfileSetting}/profile`,\n      },\n      {\n        path: `${Routes.ProfileSetting}/profile`,\n        component: `@/pages${Routes.ProfileSetting}/profile`,\n      },\n      {\n        path: `${Routes.ProfileSetting}/team`,\n        component: `@/pages${Routes.ProfileSetting}/team`,\n      },\n      {\n        path: `${Routes.ProfileSetting}/plan`,\n        component: `@/pages${Routes.ProfileSetting}/plan`,\n      },\n      {\n        path: `${Routes.ProfileSetting}/model`,\n        component: `@/pages${Routes.ProfileSetting}/model`,\n      },\n      {\n        path: `${Routes.ProfileSetting}/prompt`,\n        component: `@/pages${Routes.ProfileSetting}/prompt`,\n      },\n    ],\n  },\n];\n\nexport default routes;\n","import {\n  ChatVariableEnabledField,\n  EmptyConversationId,\n} from '@/constants/chat';\nimport { Message } from '@/interfaces/database/chat';\nimport { IMessage } from '@/pages/chat/interface';\nimport { omit } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\nexport const isConversationIdExist = (conversationId: string) => {\n  return conversationId !== EmptyConversationId && conversationId !== '';\n};\n\nexport const buildMessageUuid = (message: Partial<Message | IMessage>) => {\n  if ('id' in message && message.id) {\n    return message.id;\n  }\n  return uuid();\n};\n\nexport const buildMessageListWithUuid = (messages?: Message[]) => {\n  return (\n    messages?.map((x: Message | IMessage) => ({\n      ...omit(x, 'reference'),\n      id: buildMessageUuid(x),\n    })) ?? []\n  );\n};\n\nexport const getConversationId = () => {\n  return uuid().replace(/-/g, '');\n};\n\n// When rendering each message, add a prefix to the id to ensure uniqueness.\nexport const buildMessageUuidWithRole = (\n  message: Partial<Message | IMessage>,\n) => {\n  return `${message.role}_${message.id}`;\n};\n\n// Preprocess LaTeX equations to be rendered by KaTeX\n// ref: https://github.com/remarkjs/react-markdown/issues/785\n\nexport const preprocessLaTeX = (content: string) => {\n  const blockProcessedContent = content.replace(\n    /\\\\\\[([\\s\\S]*?)\\\\\\]/g,\n    (_, equation) => `$$${equation}$$`,\n  );\n  const inlineProcessedContent = blockProcessedContent.replace(\n    /\\\\\\(([\\s\\S]*?)\\\\\\)/g,\n    (_, equation) => `$${equation}$`,\n  );\n  return inlineProcessedContent;\n};\n\nexport function replaceThinkToSection(text: string = '') {\n  const pattern = /<think>([\\s\\S]*?)<\\/think>/g;\n\n  const result = text.replace(pattern, '<section class=\"think\">$1</section>');\n\n  return result;\n}\n\nexport function setInitialChatVariableEnabledFieldValue(\n  field: ChatVariableEnabledField,\n) {\n  return field !== ChatVariableEnabledField.MaxTokensEnabled;\n}\n","import dayjs from 'dayjs';\n\nexport function formatDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY HH:mm:ss');\n}\n\nexport function formatTime(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('HH:mm:ss');\n}\n\nexport function today() {\n  return formatDate(dayjs());\n}\n\nexport function lastDay() {\n  return formatDate(dayjs().subtract(1, 'days'));\n}\n\nexport function lastWeek() {\n  return formatDate(dayjs().subtract(1, 'weeks'));\n}\n\nexport function formatPureDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY');\n}\n"],"names":["ListFilterBar","_ref","title","children","showDialog","_jsxs","className","_jsx","Filter","SearchInput","Button","variant","size","onClick","_excluded","_excluded2","_excluded3","Avatar","React","ref","props","_objectWithoutProperties","AvatarPrimitive","_objectSpread","cn","displayName","AvatarImage","_ref2","AvatarFallback","_ref3","buttonVariants","cva","variants","default","destructive","outline","secondary","ghost","link","tertiary","icon","sm","lg","auto","defaultVariants","_ref$asChild","asChild","Comp","Slot","Card","CardHeader","CardTitle","CardDescription","_ref4","_excluded4","CardContent","_ref5","_excluded5","_ref6","_excluded6","Input","type","ExpandedInput","suffix","prefix","_defineProperty","Search","KnowledgeRouteKey","RunningStatus","ModelVariableType","settledModelVariableMap","Improvise","temperature","top_p","frequency_penalty","presence_penalty","max_tokens","Precise","Balance","LlmModelType","KnowledgeSearchParams","DocumentType","DocumentParserType","useSetSelectedRecord","_useState","useState","_useState2","_slicedToArray","currentRecord","setCurrentRecord","setRecord","record","useHandleSearchChange","_useState3","_useState4","searchString","setSearchString","handleInputChange","useCallback","e","value","target","useChangeLanguage","i18n","useTranslation","saveSetting","useSaveSetting","lng","changeLanguage","LanguageTranslationMap","language","useGetPaginationWithRouter","t","useTranslate","_useSetPaginationPara","useSetPaginationParams","setPaginationParams","page","pageSize","onPageChange","pageNumber","setCurrentPagination","pagination","useMemo","showQuickJumper","total","showSizeChanger","current","pageSizeOptions","onChange","showTotal","concat","setPagination","useFetchAppConf","_useState7","_useState8","appConf","setAppConf","fetchAppConf","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ret","wrap","_context","prev","next","axios","get","sent","data","stop","useEffect","useSendMessageWithSse","url","arguments","length","undefined","api","completeConversation","_useState9","_useState10","answer","setAnswer","_useState11","_useState12","done","setDone","timer","useRef","resetAnswer","clearTimeout","setTimeout","send","_callee2","body","controller","_response$body","response","res","reader","x","_done","val","d","_context2","fetch","method","headers","Authorization","getAuthorization","JSON","stringify","signal","clone","json","pipeThrough","TextDecoderStream","EventSourceParserStream","getReader","read","console","info","abrupt","parse","conversationId","conversation_id","warn","t0","t1","t2","_x","_x2","apply","useSpeechWithSse","tts","_callee3","_context3","code","message","error","_x3","useHandleMessageInputChange","_useState13","_useState14","setValue","nextValue","replaceAll","useSelectDerivedMessages","_useState15","_useState16","derivedMessages","setDerivedMessages","messages","scrollToBottom","_ref$current","scrollIntoView","behavior","useScrollToBottom","addNewestQuestion","pre","_toConsumableArray","id","buildMessageUuid","role","MessageType","Assistant","content","addNewestAnswer","_pre$slice","slice","reference","prompt","audio_binary","omit","removeLatestMessage","_pre$slice2","removeMessageById","messageId","_pre$filter","filter","removeMessagesAfterCurrentMessage","index","findIndex","_pre$slice3","nextMessages","latestMessage","at","useRegenerateMessage","sendMessage","regenerateMessage","_callee4","_context4","uuid","_x4","useSelectItem","defaultId","_useState17","_useState18","selectedId","setSelectedId","handleItemClick","useFetchModelId","_tenantInfo$llm_id","tenantInfo","useFetchTenantInfo","llm_id","ChunkTokenNumMap","naive","knowledge_graph","useHandleChunkMethodSelectChange","form","setFieldValue","useResetFormOnCloseModal","visible","prevOpenRef","prevOpen","resetFields","QueryStringMap","useNavigatePage","navigate","useNavigate","_useSearchParams","useSearchParams","searchParams","useParams","navigateToDatasetList","Routes","Datasets","navigateToDataset","Dataset","navigateToHome","Home","navigateToProfile","ProfileSetting","navigateToChatList","Chats","navigateToChat","Chat","navigateToAgentList","Agents","navigateToAgent","Agent","navigateToAgentTemplates","AgentTemplates","navigateToSearchList","Searches","navigateToSearch","navigateToChunkParsedResult","knowledgeId","ParsedResult","KnowledgeId","getQueryString","queryStringKey","allQueryString","navigateToChunk","route","SegmentIndex","useSegmentedPathName","useLocation","pathname","split","useSecondPathName","Second","useThirdPathName","Third","useGetKnowledgeSearchParams","currentQueryParameters","documentId","DocumentId","useNavigateWithFromState","path","state","from","useNavigateToDataset","_useSearchParams5","_useSearchParams6","queryParameters","setSearchParams","set","toString","Number","AgentCard","avatar","style","backgroundImage","src","formatPureDate","update_time","ChevronRight","Trash2","useFetchFlowList","Plus","map","DatasetBase","Files","DatasetSetting","DatasetTesting","Chunk","ChunkResult","ResultView","isConversationIdExist","EmptyConversationId","buildMessageListWithUuid","_messages$map","getConversationId","replace","buildMessageUuidWithRole","preprocessLaTeX","_","equation","replaceThinkToSection","setInitialChatVariableEnabledFieldValue","field","ChatVariableEnabledField","MaxTokensEnabled","formatDate","date","dayjs","format","formatTime"],"sourceRoot":""}