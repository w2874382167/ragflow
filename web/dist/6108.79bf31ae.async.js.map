{"version":3,"file":"6108.79bf31ae.async.js","mappings":"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","sources":["webpack://web/./src/constants/chat.ts","webpack://web/./src/hooks/common-hooks.tsx","webpack://web/./src/hooks/user-setting-hooks.tsx","webpack://web/./src/services/user-service.ts","webpack://web/./src/utils/api.ts","webpack://web/./src/utils/register-server.ts","webpack://web/./src/utils/request.ts","webpack://web/./src/hooks/ lazy namespace object"],"sourcesContent":["export enum MessageType {\n  Assistant = 'assistant',\n  User = 'user',\n}\n\nexport enum ChatVariableEnabledField {\n  TemperatureEnabled = 'temperatureEnabled',\n  TopPEnabled = 'topPEnabled',\n  PresencePenaltyEnabled = 'presencePenaltyEnabled',\n  FrequencyPenaltyEnabled = 'frequencyPenaltyEnabled',\n  MaxTokensEnabled = 'maxTokensEnabled',\n}\n\nexport const variableEnabledFieldMap = {\n  [ChatVariableEnabledField.TemperatureEnabled]: 'temperature',\n  [ChatVariableEnabledField.TopPEnabled]: 'top_p',\n  [ChatVariableEnabledField.PresencePenaltyEnabled]: 'presence_penalty',\n  [ChatVariableEnabledField.FrequencyPenaltyEnabled]: 'frequency_penalty',\n  [ChatVariableEnabledField.MaxTokensEnabled]: 'max_tokens',\n};\n\nexport enum SharedFrom {\n  Agent = 'agent',\n  Chat = 'chat',\n}\n\nexport enum ChatSearchParams {\n  DialogId = 'dialogId',\n  ConversationId = 'conversationId',\n  isNew = 'isNew',\n}\n\nexport const EmptyConversationId = 'empty';\n","import { ExclamationCircleFilled } from '@ant-design/icons';\nimport { App } from 'antd';\nimport isEqual from 'lodash/isEqual';\nimport { ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const useSetModalState = () => {\n  const [visible, setVisible] = useState(false);\n\n  const showModal = useCallback(() => {\n    setVisible(true);\n  }, []);\n  const hideModal = useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  const switchVisible = useCallback(() => {\n    setVisible(!visible);\n  }, [visible]);\n\n  return { visible, showModal, hideModal, switchVisible };\n};\n\nexport const useDeepCompareEffect = (\n  effect: React.EffectCallback,\n  deps: React.DependencyList,\n) => {\n  const ref = useRef<React.DependencyList>();\n  let callback: ReturnType<React.EffectCallback> = () => {};\n  if (!isEqual(deps, ref.current)) {\n    callback = effect();\n    ref.current = deps;\n  }\n  useEffect(() => {\n    return () => {\n      if (callback) {\n        callback();\n      }\n    };\n  }, []);\n};\n\nexport interface UseDynamicSVGImportOptions {\n  onCompleted?: (\n    name: string,\n    SvgIcon: React.FC<React.SVGProps<SVGSVGElement>> | undefined,\n  ) => void;\n  onError?: (err: Error) => void;\n}\n\nexport function useDynamicSVGImport(\n  name: string,\n  options: UseDynamicSVGImportOptions = {},\n) {\n  const ImportedIconRef = useRef<React.FC<React.SVGProps<SVGSVGElement>>>();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error>();\n\n  const { onCompleted, onError } = options;\n  useEffect(() => {\n    setLoading(true);\n    const importIcon = async (): Promise<void> => {\n      try {\n        ImportedIconRef.current = (await import(name)).ReactComponent;\n        onCompleted?.(name, ImportedIconRef.current);\n      } catch (err: any) {\n        onError?.(err);\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    importIcon();\n  }, [name, onCompleted, onError]);\n\n  return { error, loading, SvgIcon: ImportedIconRef.current };\n}\n\ninterface IProps {\n  title?: string;\n  content?: ReactNode;\n  onOk?: (...args: any[]) => any;\n  onCancel?: (...args: any[]) => any;\n}\n\nexport const useShowDeleteConfirm = () => {\n  const { modal } = App.useApp();\n  const { t } = useTranslation();\n\n  const showDeleteConfirm = useCallback(\n    ({ title, content, onOk, onCancel }: IProps): Promise<number> => {\n      return new Promise((resolve, reject) => {\n        modal.confirm({\n          title: title ?? t('common.deleteModalTitle'),\n          icon: <ExclamationCircleFilled />,\n          content,\n          okText: t('common.ok'),\n          okType: 'danger',\n          cancelText: t('common.cancel'),\n          async onOk() {\n            try {\n              const ret = await onOk?.();\n              resolve(ret);\n              console.info(ret);\n            } catch (error) {\n              reject(error);\n            }\n          },\n          onCancel() {\n            onCancel?.();\n          },\n        });\n      });\n    },\n    [t, modal],\n  );\n\n  return showDeleteConfirm;\n};\n\nexport const useTranslate = (keyPrefix: string) => {\n  return useTranslation('translation', { keyPrefix });\n};\n\nexport const useCommonTranslation = () => {\n  return useTranslation('translation', { keyPrefix: 'common' });\n};\n","import { LanguageTranslationMap } from '@/constants/common';\nimport { ResponseGetType } from '@/interfaces/database/base';\nimport { IToken } from '@/interfaces/database/chat';\nimport { ITenantInfo } from '@/interfaces/database/knowledge';\nimport { ILangfuseConfig } from '@/interfaces/database/system';\nimport {\n  ISystemStatus,\n  ITenant,\n  ITenantUser,\n  IUserInfo,\n} from '@/interfaces/database/user-setting';\nimport { ISetLangfuseConfigRequestBody } from '@/interfaces/request/system';\nimport userService, {\n  addTenantUser,\n  agreeTenant,\n  deleteTenantUser,\n  listTenant,\n  listTenantUser,\n} from '@/services/user-service';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Modal, message } from 'antd';\nimport DOMPurify from 'dompurify';\nimport { isEmpty } from 'lodash';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { history } from 'umi';\n\nexport const useFetchUserInfo = (): ResponseGetType<IUserInfo> => {\n  const { i18n } = useTranslation();\n\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['userInfo'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.user_info();\n      if (data.code === 0) {\n        i18n.changeLanguage(\n          LanguageTranslationMap[\n            data.data.language as keyof typeof LanguageTranslationMap\n          ],\n        );\n      }\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useFetchTenantInfo = (\n  showEmptyModelWarn = false,\n): ResponseGetType<ITenantInfo> => {\n  const { t } = useTranslation();\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['tenantInfo'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data: res } = await userService.get_tenant_info();\n      if (res.code === 0) {\n        // llm_id is chat_id\n        // asr_id is speech2txt\n        const { data } = res;\n        if (\n          showEmptyModelWarn &&\n          (isEmpty(data.embd_id) || isEmpty(data.llm_id))\n        ) {\n          Modal.warning({\n            title: t('common.warn'),\n            content: (\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: DOMPurify.sanitize(t('setting.modelProvidersWarn')),\n                }}\n              ></div>\n            ),\n            onOk() {\n              history.push('/user-setting/model');\n            },\n          });\n        }\n        data.chat_id = data.llm_id;\n        data.speech2text_id = data.asr_id;\n\n        return data;\n      }\n\n      return res;\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useSelectParserList = (): Array<{\n  value: string;\n  label: string;\n}> => {\n  const { data: tenantInfo } = useFetchTenantInfo(true);\n\n  const parserList = useMemo(() => {\n    const parserArray: Array<string> = tenantInfo?.parser_ids?.split(',') ?? [];\n    return parserArray.map((x) => {\n      const arr = x.split(':');\n      return { value: arr[0], label: arr[1] };\n    });\n  }, [tenantInfo]);\n\n  return parserList;\n};\n\nexport const useSaveSetting = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveSetting'],\n    mutationFn: async (\n      userInfo: { new_password: string } | Partial<IUserInfo>,\n    ) => {\n      const { data } = await userService.setting(userInfo);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n        queryClient.invalidateQueries({ queryKey: ['userInfo'] });\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, saveSetting: mutateAsync };\n};\n\nexport const useFetchSystemVersion = () => {\n  const [version, setVersion] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const fetchSystemVersion = useCallback(async () => {\n    try {\n      setLoading(true);\n      const { data } = await userService.getSystemVersion();\n      if (data.code === 0) {\n        setVersion(data.data);\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n    }\n  }, []);\n\n  return { fetchSystemVersion, version, loading };\n};\n\nexport const useFetchSystemStatus = () => {\n  const [systemStatus, setSystemStatus] = useState<ISystemStatus>(\n    {} as ISystemStatus,\n  );\n  const [loading, setLoading] = useState(false);\n\n  const fetchSystemStatus = useCallback(async () => {\n    setLoading(true);\n    const { data } = await userService.getSystemStatus();\n    if (data.code === 0) {\n      setSystemStatus(data.data);\n      setLoading(false);\n    }\n  }, []);\n\n  return {\n    systemStatus,\n    fetchSystemStatus,\n    loading,\n  };\n};\n\nexport const useFetchManualSystemTokenList = () => {\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['fetchManualSystemTokenList'],\n    mutationFn: async () => {\n      const { data } = await userService.listToken();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, fetchSystemTokenList: mutateAsync };\n};\n\nexport const useFetchSystemTokenList = () => {\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<IToken[]>({\n    queryKey: ['fetchSystemTokenList'],\n    initialData: [],\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.listToken();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useRemoveSystemToken = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['removeSystemToken'],\n    mutationFn: async (token: string) => {\n      const { data } = await userService.removeToken({}, token);\n      if (data.code === 0) {\n        message.success(t('message.deleted'));\n        queryClient.invalidateQueries({ queryKey: ['fetchSystemTokenList'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, removeToken: mutateAsync };\n};\n\nexport const useCreateSystemToken = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['createSystemToken'],\n    mutationFn: async (params: Record<string, any>) => {\n      const { data } = await userService.createToken(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['fetchSystemTokenList'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, createToken: mutateAsync };\n};\n\nexport const useListTenantUser = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const tenantId = tenantInfo.tenant_id;\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<ITenantUser[]>({\n    queryKey: ['listTenantUser', tenantId],\n    initialData: [],\n    gcTime: 0,\n    enabled: !!tenantId,\n    queryFn: async () => {\n      const { data } = await listTenantUser(tenantId);\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useAddTenantUser = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['addTenantUser'],\n    mutationFn: async (email: string) => {\n      const { data } = await addTenantUser(tenantInfo.tenant_id, email);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['listTenantUser'] });\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, addTenantUser: mutateAsync };\n};\n\nexport const useDeleteTenantUser = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteTenantUser'],\n    mutationFn: async ({\n      userId,\n      tenantId,\n    }: {\n      userId: string;\n      tenantId?: string;\n    }) => {\n      const { data } = await deleteTenantUser({\n        tenantId: tenantId ?? tenantInfo.tenant_id,\n        userId,\n      });\n      if (data.code === 0) {\n        message.success(t('message.deleted'));\n        queryClient.invalidateQueries({ queryKey: ['listTenantUser'] });\n        queryClient.invalidateQueries({ queryKey: ['listTenant'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteTenantUser: mutateAsync };\n};\n\nexport const useListTenant = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const tenantId = tenantInfo.tenant_id;\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<ITenant[]>({\n    queryKey: ['listTenant', tenantId],\n    initialData: [],\n    gcTime: 0,\n    enabled: !!tenantId,\n    queryFn: async () => {\n      const { data } = await listTenant();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useAgreeTenant = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['agreeTenant'],\n    mutationFn: async (tenantId: string) => {\n      const { data } = await agreeTenant(tenantId);\n      if (data.code === 0) {\n        message.success(t('message.operated'));\n        queryClient.invalidateQueries({ queryKey: ['listTenant'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, agreeTenant: mutateAsync };\n};\n\nexport const useSetLangfuseConfig = () => {\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['setLangfuseConfig'],\n    mutationFn: async (params: ISetLangfuseConfigRequestBody) => {\n      const { data } = await userService.setLangfuseConfig(params);\n      if (data.code === 0) {\n        message.success(t('message.operated'));\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, setLangfuseConfig: mutateAsync };\n};\n\nexport const useDeleteLangfuseConfig = () => {\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteLangfuseConfig'],\n    mutationFn: async () => {\n      const { data } = await userService.deleteLangfuseConfig();\n      if (data.code === 0) {\n        message.success(t('message.deleted'));\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, deleteLangfuseConfig: mutateAsync };\n};\n\nexport const useFetchLangfuseConfig = () => {\n  const { data, isFetching: loading } = useQuery<ILangfuseConfig>({\n    queryKey: ['fetchLangfuseConfig'],\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.getLangfuseConfig();\n\n      return data?.data;\n    },\n  });\n\n  return { data, loading };\n};\n","import api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request, { post } from '@/utils/request';\n\nconst {\n  login,\n  logout,\n  register,\n  setting,\n  user_info,\n  tenant_info,\n  factories_list,\n  llm_list,\n  my_llm,\n  set_api_key,\n  set_tenant_info,\n  add_llm,\n  delete_llm,\n  deleteFactory,\n  getSystemStatus,\n  getSystemVersion,\n  getSystemTokenList,\n  removeSystemToken,\n  createSystemToken,\n  getSystemConfig,\n  setLangfuseConfig,\n} = api;\n\nconst methods = {\n  login: {\n    url: login,\n    method: 'post',\n  },\n  logout: {\n    url: logout,\n    method: 'get',\n  },\n  register: {\n    url: register,\n    method: 'post',\n  },\n  setting: {\n    url: setting,\n    method: 'post',\n  },\n  user_info: {\n    url: user_info,\n    method: 'get',\n  },\n  get_tenant_info: {\n    url: tenant_info,\n    method: 'get',\n  },\n  set_tenant_info: {\n    url: set_tenant_info,\n    method: 'post',\n  },\n  factories_list: {\n    url: factories_list,\n    method: 'get',\n  },\n  llm_list: {\n    url: llm_list,\n    method: 'get',\n  },\n  my_llm: {\n    url: my_llm,\n    method: 'get',\n  },\n  set_api_key: {\n    url: set_api_key,\n    method: 'post',\n  },\n  add_llm: {\n    url: add_llm,\n    method: 'post',\n  },\n  delete_llm: {\n    url: delete_llm,\n    method: 'post',\n  },\n  getSystemStatus: {\n    url: getSystemStatus,\n    method: 'get',\n  },\n  getSystemVersion: {\n    url: getSystemVersion,\n    method: 'get',\n  },\n  deleteFactory: {\n    url: deleteFactory,\n    method: 'post',\n  },\n  listToken: {\n    url: getSystemTokenList,\n    method: 'get',\n  },\n  createToken: {\n    url: createSystemToken,\n    method: 'post',\n  },\n  removeToken: {\n    url: removeSystemToken,\n    method: 'delete',\n  },\n  getSystemConfig: {\n    url: getSystemConfig,\n    method: 'get',\n  },\n  setLangfuseConfig: {\n    url: setLangfuseConfig,\n    method: 'put',\n  },\n  getLangfuseConfig: {\n    url: setLangfuseConfig,\n    method: 'get',\n  },\n  deleteLangfuseConfig: {\n    url: setLangfuseConfig,\n    method: 'delete',\n  },\n} as const;\n\nconst userService = registerServer<keyof typeof methods>(methods, request);\n\nexport const listTenantUser = (tenantId: string) =>\n  request.get(api.listTenantUser(tenantId));\n\nexport const addTenantUser = (tenantId: string, email: string) =>\n  post(api.addTenantUser(tenantId), { email });\n\nexport const deleteTenantUser = ({\n  tenantId,\n  userId,\n}: {\n  tenantId: string;\n  userId: string;\n}) => request.delete(api.deleteTenantUser(tenantId, userId));\n\nexport const listTenant = () => request.get(api.listTenant);\n\nexport const agreeTenant = (tenantId: string) =>\n  request.put(api.agreeTenant(tenantId));\n\nexport default userService;\n","let api_host = `/v1`;\n\nexport { api_host };\n\nexport default {\n  // user\n  login: `${api_host}/user/login`,\n  logout: `${api_host}/user/logout`,\n  register: `${api_host}/user/register`,\n  setting: `${api_host}/user/setting`,\n  user_info: `${api_host}/user/info`,\n  tenant_info: `${api_host}/user/tenant_info`,\n  set_tenant_info: `${api_host}/user/set_tenant_info`,\n\n  // team\n  addTenantUser: (tenantId: string) => `${api_host}/tenant/${tenantId}/user`,\n  listTenantUser: (tenantId: string) =>\n    `${api_host}/tenant/${tenantId}/user/list`,\n  deleteTenantUser: (tenantId: string, userId: string) =>\n    `${api_host}/tenant/${tenantId}/user/${userId}`,\n  listTenant: `${api_host}/tenant/list`,\n  agreeTenant: (tenantId: string) => `${api_host}/tenant/agree/${tenantId}`,\n\n  // llm model\n  factories_list: `${api_host}/llm/factories`,\n  llm_list: `${api_host}/llm/list`,\n  my_llm: `${api_host}/llm/my_llms`,\n  set_api_key: `${api_host}/llm/set_api_key`,\n  add_llm: `${api_host}/llm/add_llm`,\n  delete_llm: `${api_host}/llm/delete_llm`,\n  deleteFactory: `${api_host}/llm/delete_factory`,\n\n  // knowledge base\n  kb_list: `${api_host}/kb/list`,\n  create_kb: `${api_host}/kb/create`,\n  update_kb: `${api_host}/kb/update`,\n  rm_kb: `${api_host}/kb/rm`,\n  get_kb_detail: `${api_host}/kb/detail`,\n  getKnowledgeGraph: (knowledgeId: string) =>\n    `${api_host}/kb/${knowledgeId}/knowledge_graph`,\n\n  // tags\n  listTag: (knowledgeId: string) => `${api_host}/kb/${knowledgeId}/tags`,\n  listTagByKnowledgeIds: `${api_host}/kb/tags`,\n  removeTag: (knowledgeId: string) => `${api_host}/kb/${knowledgeId}/rm_tags`,\n  renameTag: (knowledgeId: string) =>\n    `${api_host}/kb/${knowledgeId}/rename_tag`,\n\n  // chunk\n  chunk_list: `${api_host}/chunk/list`,\n  create_chunk: `${api_host}/chunk/create`,\n  set_chunk: `${api_host}/chunk/set`,\n  get_chunk: `${api_host}/chunk/get`,\n  switch_chunk: `${api_host}/chunk/switch`,\n  rm_chunk: `${api_host}/chunk/rm`,\n  retrieval_test: `${api_host}/chunk/retrieval_test`,\n  knowledge_graph: `${api_host}/chunk/knowledge_graph`,\n\n  // document\n  get_document_list: `${api_host}/document/list`,\n  document_change_status: `${api_host}/document/change_status`,\n  document_rm: `${api_host}/document/rm`,\n  document_delete: `${api_host}/api/document`,\n  document_rename: `${api_host}/document/rename`,\n  document_create: `${api_host}/document/create`,\n  document_run: `${api_host}/document/run`,\n  document_change_parser: `${api_host}/document/change_parser`,\n  document_thumbnails: `${api_host}/document/thumbnails`,\n  get_document_file: `${api_host}/document/get`,\n  document_upload: `${api_host}/document/upload`,\n  web_crawl: `${api_host}/document/web_crawl`,\n  document_infos: `${api_host}/document/infos`,\n  upload_and_parse: `${api_host}/document/upload_and_parse`,\n  parse: `${api_host}/document/parse`,\n  setMeta: `${api_host}/document/set_meta`,\n\n  // chat\n  setDialog: `${api_host}/dialog/set`,\n  getDialog: `${api_host}/dialog/get`,\n  removeDialog: `${api_host}/dialog/rm`,\n  listDialog: `${api_host}/dialog/list`,\n  setConversation: `${api_host}/conversation/set`,\n  getConversation: `${api_host}/conversation/get`,\n  getConversationSSE: `${api_host}/conversation/getsse`,\n  listConversation: `${api_host}/conversation/list`,\n  removeConversation: `${api_host}/conversation/rm`,\n  completeConversation: `${api_host}/conversation/completion`,\n  // completeConversation: \"http://localhost:5000/chat\",\n  deleteMessage: `${api_host}/conversation/delete_msg`,\n  thumbup: `${api_host}/conversation/thumbup`,\n  tts: `${api_host}/conversation/tts`,\n  ask: `${api_host}/conversation/ask`,\n  mindmap: `${api_host}/conversation/mindmap`,\n  getRelatedQuestions: `${api_host}/conversation/related_questions`,\n  // chat for external\n  createToken: `${api_host}/api/new_token`,\n  listToken: `${api_host}/api/token_list`,\n  removeToken: `${api_host}/api/rm`,\n  getStats: `${api_host}/api/stats`,\n  createExternalConversation: `${api_host}/api/new_conversation`,\n  getExternalConversation: `${api_host}/api/conversation`,\n  completeExternalConversation: `${api_host}/api/completion`,\n  uploadAndParseExternal: `${api_host}/api/document/upload_and_parse`,\n\n  // file manager\n  listFile: `${api_host}/file/list`,\n  uploadFile: `${api_host}/file/upload`,\n  removeFile: `${api_host}/file/rm`,\n  renameFile: `${api_host}/file/rename`,\n  getAllParentFolder: `${api_host}/file/all_parent_folder`,\n  createFolder: `${api_host}/file/create`,\n  connectFileToKnowledge: `${api_host}/file2document/convert`,\n  getFile: `${api_host}/file/get`,\n  moveFile: `${api_host}/file/mv`,\n\n  // system\n  getSystemVersion: `${api_host}/system/version`,\n  getSystemStatus: `${api_host}/system/status`,\n  getSystemTokenList: `${api_host}/system/token_list`,\n  createSystemToken: `${api_host}/system/new_token`,\n  listSystemToken: `${api_host}/system/token_list`,\n  removeSystemToken: `${api_host}/system/token`,\n  getSystemConfig: `${api_host}/system/config`,\n  setLangfuseConfig: `${api_host}/langfuse/api_key`,\n\n  // flow\n  listTemplates: `${api_host}/canvas/templates`,\n  listCanvas: `${api_host}/canvas/list`,\n  listCanvasTeam: `${api_host}/canvas/listteam`,\n  getCanvas: `${api_host}/canvas/get`,\n  getCanvasSSE: `${api_host}/canvas/getsse`,\n  removeCanvas: `${api_host}/canvas/rm`,\n  setCanvas: `${api_host}/canvas/set`,\n  settingCanvas: `${api_host}/canvas/setting`,\n  getListVersion: `${api_host}/canvas/getlistversion`,\n  getVersion: `${api_host}/canvas/getversion`,\n  resetCanvas: `${api_host}/canvas/reset`,\n  runCanvas: `${api_host}/canvas/completion`,\n  testDbConnect: `${api_host}/canvas/test_db_connect`,\n  getInputElements: `${api_host}/canvas/input_elements`,\n  debug: `${api_host}/canvas/debug`,\n};\n","import omit from 'lodash/omit';\nimport { RequestMethod } from 'umi-request';\n\ntype Service<T extends string> = Record<\n  T,\n  (params?: any, urlAppendix?: string) => any\n>;\n\nconst Methods = ['post', 'delete', 'put'];\n\nconst registerServer = <T extends string>(\n  opt: Record<T, { url: string; method: string }>,\n  request: RequestMethod,\n) => {\n  const server: Service<T> = {} as Service<T>;\n  for (let key in opt) {\n    server[key] = (params?: any, urlAppendix?: string) => {\n      let url = opt[key].url;\n      const requestOptions = opt[key];\n      if (urlAppendix) {\n        url = url + '/' + urlAppendix;\n      }\n      if (Methods.some((x) => x === opt[key].method.toLowerCase())) {\n        return request(url, {\n          method: opt[key].method,\n          data: params,\n        });\n      }\n\n      if (opt[key].method === 'get' || opt[key].method === 'GET') {\n        return request.get(url, {\n          ...omit(requestOptions, ['method', 'url']),\n          params,\n        });\n      }\n    };\n  }\n  return server;\n};\n\nexport default registerServer;\n","import { Authorization } from '@/constants/authorization';\nimport { ResponseType } from '@/interfaces/database/base';\nimport i18n from '@/locales/config';\nimport authorizationUtil, {\n  getAuthorization,\n  redirectToLogin,\n} from '@/utils/authorization-util';\nimport { message, notification } from 'antd';\nimport { RequestMethod, extend } from 'umi-request';\nimport { convertTheKeysOfTheObjectToSnake } from './common-util';\n\nconst FAILED_TO_FETCH = 'Failed to fetch';\n\nconst RetcodeMessage = {\n  200: i18n.t('message.200'),\n  201: i18n.t('message.201'),\n  202: i18n.t('message.202'),\n  204: i18n.t('message.204'),\n  400: i18n.t('message.400'),\n  401: i18n.t('message.401'),\n  403: i18n.t('message.403'),\n  404: i18n.t('message.404'),\n  406: i18n.t('message.406'),\n  410: i18n.t('message.410'),\n  413: i18n.t('message.413'),\n  422: i18n.t('message.422'),\n  500: i18n.t('message.500'),\n  502: i18n.t('message.502'),\n  503: i18n.t('message.503'),\n  504: i18n.t('message.504'),\n};\ntype ResultCode =\n  | 200\n  | 201\n  | 202\n  | 204\n  | 400\n  | 401\n  | 403\n  | 404\n  | 406\n  | 410\n  | 413\n  | 422\n  | 500\n  | 502\n  | 503\n  | 504;\n\nconst errorHandler = (error: {\n  response: Response;\n  message: string;\n}): Response => {\n  const { response } = error;\n  if (error.message === FAILED_TO_FETCH) {\n    notification.error({\n      description: i18n.t('message.networkAnomalyDescription'),\n      message: i18n.t('message.networkAnomaly'),\n    });\n  } else {\n    if (response && response.status) {\n      const errorText =\n        RetcodeMessage[response.status as ResultCode] || response.statusText;\n      const { status, url } = response;\n      notification.error({\n        message: `${i18n.t('message.requestError')} ${status}: ${url}`,\n        description: errorText,\n      });\n    }\n  }\n  return response ?? { data: { code: 1999 } };\n};\n\nconst request: RequestMethod = extend({\n  errorHandler,\n  timeout: 300000,\n  getResponse: true,\n});\n\nrequest.interceptors.request.use((url: string, options: any) => {\n  const data = convertTheKeysOfTheObjectToSnake(options.data);\n  const params = convertTheKeysOfTheObjectToSnake(options.params);\n\n  return {\n    url,\n    options: {\n      ...options,\n      data,\n      params,\n      headers: {\n        ...(options.skipToken\n          ? undefined\n          : { [Authorization]: getAuthorization() }),\n        ...options.headers,\n      },\n      interceptors: true,\n    },\n  };\n});\n\nrequest.interceptors.response.use(async (response: Response, options) => {\n  if (response?.status === 413 || response?.status === 504) {\n    message.error(RetcodeMessage[response?.status as ResultCode]);\n  }\n\n  if (options.responseType === 'blob') {\n    return response;\n  }\n\n  const data: ResponseType = await response?.clone()?.json();\n  if (data?.code === 100) {\n    message.error(data?.message);\n  } else if (data?.code === 401) {\n    notification.error({\n      message: data?.message,\n      description: data?.message,\n      duration: 3,\n    });\n    authorizationUtil.removeAll();\n    redirectToLogin();\n  } else if (data?.code !== 0) {\n    notification.error({\n      message: `${i18n.t('message.hint')} : ${data?.code}`,\n      description: data?.message,\n      duration: 3,\n    });\n  }\n  return response;\n});\n\nexport default request;\n\nexport const get = (url: string) => {\n  return request.get(url);\n};\n\nexport const post = (url: string, body: any) => {\n  return request.post(url, { data: body });\n};\n\nexport const drop = () => {};\n\nexport const put = () => {};\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 86635;\nmodule.exports = webpackEmptyAsyncContext;"],"names":["MessageType","ChatVariableEnabledField","variableEnabledFieldMap","_defineProperty","TemperatureEnabled","TopPEnabled","PresencePenaltyEnabled","FrequencyPenaltyEnabled","MaxTokensEnabled","SharedFrom","ChatSearchParams","EmptyConversationId","useSetModalState","_useState","useState","_useState2","_slicedToArray","visible","setVisible","showModal","useCallback","hideModal","switchVisible","useShowDeleteConfirm","modal","App","useApp","t","useTranslation","_ref2","title","content","onOk","onCancel","Promise","resolve","reject","confirm","icon","_jsx","ExclamationCircleFilled","okText","okType","cancelText","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","ret","wrap","_context2","prev","next","sent","console","info","t0","stop","useTranslate","keyPrefix","useFetchUserInfo","_queryFn","i18n","_useQuery","useQuery","queryKey","initialData","gcTime","queryFn","_callee","_data$data","_yield$userService$us","data","_context","userService","user_info","code","changeLanguage","LanguageTranslationMap","language","abrupt","apply","arguments","loading","isFetching","useFetchTenantInfo","_queryFn2","showEmptyModelWarn","length","undefined","_useQuery2","_yield$userService$ge","res","_data","get_tenant_info","isEmpty","embd_id","llm_id","Modal","warning","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","history","push","chat_id","speech2text_id","asr_id","useSelectParserList","tenantInfo","useMemo","_tenantInfo$parser_id","_tenantInfo$parser_id2","parser_ids","split","map","x","arr","value","label","useSaveSetting","_mutationFn","queryClient","useQueryClient","_useMutation","useMutation","mutationKey","mutationFn","_callee3","userInfo","_yield$userService$se","_context3","setting","message","success","invalidateQueries","_x","isPending","saveSetting","mutateAsync","useFetchSystemVersion","version","setVersion","_useState3","_useState4","setLoading","fetchSystemVersion","_callee4","_yield$userService$ge2","_context4","getSystemVersion","useFetchSystemStatus","_useState5","_useState6","systemStatus","setSystemStatus","_useState7","_useState8","fetchSystemStatus","_callee5","_yield$userService$ge3","_context5","getSystemStatus","useFetchManualSystemTokenList","_mutationFn2","_useMutation2","_callee6","_data$data2","_yield$userService$li","_context6","listToken","fetchSystemTokenList","useFetchSystemTokenList","_queryFn3","_useQuery3","_callee7","_data$data3","_yield$userService$li2","_context7","refetch","useRemoveSystemToken","_mutationFn3","_useMutation3","_callee8","token","_data$data4","_yield$userService$re","_context8","removeToken","_x2","useCreateSystemToken","_mutationFn4","_useMutation4","_callee9","params","_data$data5","_yield$userService$cr","_context9","createToken","_x3","useListTenantUser","_queryFn4","tenantId","tenant_id","_useQuery4","enabled","_callee10","_data$data6","_yield$listTenantUser","_context10","listTenantUser","useAddTenantUser","_mutationFn5","_useMutation5","_callee11","email","_yield$addTenantUser","_context11","addTenantUser","_x4","useDeleteTenantUser","_mutationFn6","_useMutation6","_callee12","_ref3","_data$data7","userId","_yield$deleteTenantUs","_context12","deleteTenantUser","_x5","useListTenant","_queryFn5","_useQuery5","_callee13","_data$data8","_yield$listTenant","_context13","listTenant","useAgreeTenant","_mutationFn7","_useMutation7","_callee14","_data$data9","_yield$agreeTenant","_context14","agreeTenant","_x6","useSetLangfuseConfig","_mutationFn8","_useMutation8","_callee15","_yield$userService$se2","_context15","setLangfuseConfig","_x7","useDeleteLangfuseConfig","_mutationFn9","_useMutation9","_callee16","_yield$userService$de","_context16","deleteLangfuseConfig","useFetchLangfuseConfig","_queryFn6","_useQuery6","_callee17","_yield$userService$ge4","_context17","getLangfuseConfig","login","api","logout","register","tenant_info","factories_list","llm_list","my_llm","set_api_key","set_tenant_info","add_llm","delete_llm","deleteFactory","getSystemTokenList","removeSystemToken","createSystemToken","getSystemConfig","methods","url","method","registerServer","request","post","_ref","api_host","concat","kb_list","create_kb","update_kb","rm_kb","get_kb_detail","getKnowledgeGraph","knowledgeId","listTag","listTagByKnowledgeIds","removeTag","renameTag","chunk_list","create_chunk","set_chunk","get_chunk","switch_chunk","rm_chunk","retrieval_test","knowledge_graph","get_document_list","document_change_status","document_rm","document_delete","document_rename","document_create","document_run","document_change_parser","document_thumbnails","get_document_file","document_upload","web_crawl","document_infos","upload_and_parse","parse","setMeta","setDialog","getDialog","removeDialog","listDialog","setConversation","getConversation","getConversationSSE","listConversation","removeConversation","completeConversation","deleteMessage","thumbup","tts","ask","mindmap","getRelatedQuestions","getStats","createExternalConversation","getExternalConversation","completeExternalConversation","uploadAndParseExternal","listFile","uploadFile","removeFile","renameFile","getAllParentFolder","createFolder","connectFileToKnowledge","getFile","moveFile","listSystemToken","listTemplates","listCanvas","listCanvasTeam","getCanvas","getCanvasSSE","removeCanvas","setCanvas","settingCanvas","getListVersion","getVersion","resetCanvas","runCanvas","testDbConnect","getInputElements","debug","Methods","opt","server","_loop","key","urlAppendix","requestOptions","some","toLowerCase","get","_objectSpread","omit","RetcodeMessage","extend","errorHandler","error","response","notification","description","status","errorText","statusText","timeout","getResponse","interceptors","use","options","convertTheKeysOfTheObjectToSnake","headers","skipToken","Authorization","getAuthorization","_response$clone","responseType","clone","json","duration","authorizationUtil","removeAll","redirectToLogin","body","webpackEmptyAsyncContext","req","then","e","Error","keys","id","module","exports"],"sourceRoot":""}